module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n\tinit: __webpack_require__(/*! ./src/init */ \"./src/init.js\"),\n\tdoms: __webpack_require__(/*! ./src/doms */ \"./src/doms/index.js\"),\n\thandler: __webpack_require__(/*! ./src/handler */ \"./src/handler.js\"),\n\thelpers: __webpack_require__(/*! ./src/helpers */ \"./src/helpers/index.js\"),\n\tbaseView: __webpack_require__(/*! ./src/baseView */ \"./src/baseView.js\"),\n\tanimations: __webpack_require__(/*! ./src/animations */ \"./src/animations.js\"),\n\tcallbackMapper: __webpack_require__(/*! ./src/helpers/common/callbackMapper */ \"./src/helpers/common/callbackMapper.js\"),\n\tgetOS: __webpack_require__(/*! ./src/helper */ \"./src/helper.js\").getOS,\n\tprestoMerge: __webpack_require__(/*! ./src/helper */ \"./src/helper.js\").merge,\n\tprestoClone: __webpack_require__(/*! ./src/helper */ \"./src/helper.js\").clone\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz80MWY1Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpbml0IiwicmVxdWlyZSIsImRvbXMiLCJoYW5kbGVyIiwiaGVscGVycyIsImJhc2VWaWV3IiwiYW5pbWF0aW9ucyIsImNhbGxiYWNrTWFwcGVyIiwiZ2V0T1MiLCJwcmVzdG9NZXJnZSIsIm1lcmdlIiwicHJlc3RvQ2xvbmUiLCJjbG9uZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQUEsT0FBT0MsT0FBUCxHQUFpQjtBQUNoQkMsT0FBTUMsbUJBQU9BLENBQUMsaUNBQVIsQ0FEVTtBQUVoQkMsT0FBT0QsbUJBQU9BLENBQUMsdUNBQVIsQ0FGUztBQUdoQkUsVUFBVUYsbUJBQU9BLENBQUMsdUNBQVIsQ0FITTtBQUloQkcsVUFBVUgsbUJBQU9BLENBQUMsNkNBQVIsQ0FKTTtBQUtoQkksV0FBV0osbUJBQU9BLENBQUMseUNBQVIsQ0FMSztBQU1oQkssYUFBWUwsbUJBQU9BLENBQUMsNkNBQVIsQ0FOSTtBQU9oQk0saUJBQWdCTixtQkFBT0EsQ0FBQyxtRkFBUixDQVBBO0FBUWhCTyxRQUFPUCxtQkFBT0EsQ0FBQyxxQ0FBUixFQUF3Qk8sS0FSZjtBQVNoQkMsY0FBYVIsbUJBQU9BLENBQUMscUNBQVIsRUFBd0JTLEtBVHJCO0FBVWhCQyxjQUFhVixtQkFBT0EsQ0FBQyxxQ0FBUixFQUF3Qlc7QUFWckIsQ0FBakIiLCJmaWxlIjoiLi9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4qIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4qXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbipcbiogSlVTUEFZIFBsYXRmb3JtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiogZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuKlxuKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiogYmUgbGlhYmxlIGZvciBhbGwgZGFtYWdlcyB3aXRob3V0IGxpbWl0YXRpb24sIHdoaWNoIGlzIGNhdXNlZCBieSB0aGVcbiogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4qIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuKiBUaGUgZW5kIHVzZXIgaGFzIE5PIHJpZ2h0IHRvIGNsYWltIGFueSBpbmRlbW5pZmljYXRpb24gYmFzZWQgb24gaXRzIHVzZVxuKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbipcbiogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4qIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdGluaXQ6IHJlcXVpcmUoXCIuL3NyYy9pbml0XCIpLFxuXHRkb21zIDogcmVxdWlyZShcIi4vc3JjL2RvbXNcIiksXG5cdGhhbmRsZXIgOiByZXF1aXJlKFwiLi9zcmMvaGFuZGxlclwiKSxcblx0aGVscGVycyA6IHJlcXVpcmUoXCIuL3NyYy9oZWxwZXJzXCIpLFxuXHRiYXNlVmlldyA6IHJlcXVpcmUoXCIuL3NyYy9iYXNlVmlld1wiKSxcblx0YW5pbWF0aW9uczogcmVxdWlyZSgnLi9zcmMvYW5pbWF0aW9ucycpLFxuXHRjYWxsYmFja01hcHBlcjogcmVxdWlyZSgnLi9zcmMvaGVscGVycy9jb21tb24vY2FsbGJhY2tNYXBwZXInKSxcblx0Z2V0T1M6IHJlcXVpcmUoJy4vc3JjL2hlbHBlcicpLmdldE9TLFxuXHRwcmVzdG9NZXJnZTogcmVxdWlyZSgnLi9zcmMvaGVscGVyJykubWVyZ2UsXG5cdHByZXN0b0Nsb25lOiByZXF1aXJlKCcuL3NyYy9oZWxwZXInKS5jbG9uZVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ }),

/***/ "./src/IOS/AndroidInterface.js":
/*!*************************************!*\
  !*** ./src/IOS/AndroidInterface.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar render = __webpack_require__(/*! ./Render */ \"./src/IOS/Render.js\");\nvar helper = __webpack_require__(/*! ../helper */ \"./src/helper.js\");\nvar parseParams = __webpack_require__(/*! ../helpers */ \"./src/helpers/index.js\").ios.parseParams;\n\nvar rootid = void 0;\n\nfunction clearViewExternals(view) {\n  delete window.__VIEWS[view.props.id];\n  delete window.__VIEW_DIMENSIONS[view.props.id];\n  view.children.forEach(clearViewExternals);\n}\n\nfunction getSerializeableView(view, recurse) {\n  var obj = parseParams(view.type, helper.clone(view.props, null), \"set\");\n  var newView = {};\n  newView.props = obj.config;\n  newView.type = obj.type[0].toUpperCase() + obj.type.substr(1, obj.type.length);\n  if (recurse) newView.children = view.children.map(getSerializeableView);else newView.children = [];\n  return newView;\n}\n\nmodule.exports = {\n  getScreenDimensions: function getScreenDimensions() {\n    return JSON.stringify({\n      width: window.__DEVICE_DETAILS.screen_width,\n      height: window.__DEVICE_DETAILS.screen_height\n    });\n  },\n\n  recomputeView: function recomputeView(view) {\n    if (view.type.indexOf(\"scroll\") != -1) {\n      render.inflate(view);\n    }\n    render.computeChildDimens(view);\n    var children = view.children;\n    for (var i = 0, len = children.length; i < len; i++) {\n      render.inflate(children[i]);\n    }\n  },\n\n  recompute: function recompute() {\n    var rootview = window.__VIEWS[rootid];\n    var obj = {\n      type: \"linearLayout\",\n      props: {\n        h: window.__HEIGHT,\n        w: window.__WIDTH\n      },\n      children: [rootview]\n    };\n    render.computeChildDimens(obj);\n    render.inflate(rootview);\n  },\n\n  runInUI: function runInUI(cmd) {\n    render.runInUI(cmd);\n  },\n\n  Render: function Render(view, cb) {\n    var obj = {\n      type: \"linearLayout\",\n      props: {\n        h: window.__HEIGHT,\n        w: window.__WIDTH\n      },\n      children: [view]\n    };\n    rootid = view.props.id;\n    render.computeChildDimens(obj);\n    view = render.inflate(view);\n    if (view) {\n      window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n        methodName: \"render\",\n        parameters: {\n          view: view\n        }\n      }));\n    }\n    if (cb) window.callUICallback(cb);\n  },\n\n  moveView: function moveView(id, index) {\n    if (!window.__VIEWS[id]) {\n      return console.error(new Error(\"MoveView: Invalid view ID: \" + id));\n    }\n    var view = window.__VIEWS[id];\n    var parent = window.__VIEWS[view.props.parentId];\n    var children = parent.children;\n    children.splice(children.indexOf(view), 1);\n    children.splice(index, 0, view);\n    this.recomputeView(parent);\n  },\n\n  addViewToParent: function addViewToParent(id, view, index, cb) {\n    if (!window.__VIEWS[id]) {\n      return console.error(new Error(\"AddViewToParent: Invalid parent ID: \" + id));\n    }\n    var parent = window.__VIEWS[id];\n    parent.children.splice(index, 0, view);\n    view.props.parentId = id;\n    render.computeChildDimens(parent);\n    var renderedView = render.inflate(view);\n    if (renderedView) {\n      window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n        methodName: \"addViewToParent\",\n        parameters: {\n          index: index,\n          parentId: id,\n          view: renderedView,\n          afterRender: cb + \"\"\n        }\n      }));\n    }\n    this.recomputeView(parent);\n  },\n\n  createListData: function createListData(id, view) {\n    var parent = window.__VIEWS[id];\n    if (!parent) {\n      return \"{}\";\n    }\n    var views = window.__VIEWS;\n    window.__VIEWS = {};\n    parent.children = [view];\n    view.props.parentId = id;\n    render.computeChildDimens(parent);\n    var inflatedView = render.inflate(view);\n    window.__VIEWS = views;\n    return JSON.stringify(inflatedView);\n  },\n\n  replaceView: function replaceView(view, id) {\n    if (!window.__VIEWS[id]) {\n      return console.error(new Error(\"AddViewToParent: Invalid parent ID: \" + id));\n    }\n    var oldview = window.__VIEWS[id];\n    var parentid = oldview.props.parentId;\n    oldview.props = helper.clone(view.props, null);\n    oldview.props.parentId = parentid;\n    var parent = window.__VIEWS[parentid];\n    var index = parent.children.indexOf(oldview);\n    this.recomputeView(parent);\n    var newView = getSerializeableView(oldview);\n    window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n      methodName: \"replaceView\",\n      parameters: {\n        id: id,\n        view: newView,\n        parentId: parentid,\n        index: index\n      }\n    }));\n  },\n\n  removeView: function removeView(id) {\n    var view = window.__VIEWS[id];\n    var parent = window.__VIEWS[view.props.parentId];\n    var index = parent ? parent.children.indexOf(view) : 0;\n    if (parent) {\n      parent.children.splice(index, 1);\n    }\n    clearViewExternals(view);\n    window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n      methodName: \"removeView\",\n      parameters: {\n        id: id,\n        index: index\n      }\n    }));\n    if (parent) {\n      this.recomputeView(parent);\n    }\n  },\n\n  startAnim: function startAnim(id, cbName) {\n    // TODO implement native side with callback\n    // Thus, currently not providing on complete hook\n    // onEnd property can still be used for chaining animations\n    window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n      methodName: \"startAnimation\",\n      parameters: {\n        animId: id\n      }\n    }));\n  },\n\n  cancelAnim: function cancelAnim() {\n    // TODO implement native side\n  },\n\n  updateAnim: function updateAnim() {\n    // TODO implement native side\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/IOS/AndroidInterface.js\n");

/***/ }),

/***/ "./src/IOS/Render.js":
/*!***************************!*\
  !*** ./src/IOS/Render.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar parseParams = __webpack_require__(/*! ../helpers/ios/parseParams */ \"./src/helpers/ios/parseParams.js\");\n\nvar _require = __webpack_require__(/*! ../computeIOS */ \"./src/computeIOS.js\"),\n    computeChildDimens = _require.computeChildDimens;\n\nvar helper = __webpack_require__(/*! ../helper */ \"./src/helper.js\");\n\nfunction inflate(view) {\n  var id = view.props.id;\n\n  if (!window.__VIEWS.hasOwnProperty(id)) {\n    computeChildDimens(view);\n    helper.cacheDimen(view);\n    window.__VIEWS[id] = view;\n    var newView = helper.clone(view, null);\n    view.children.forEach(function (child, i) {\n      newView.children[i] = inflate(child);\n    });\n    var obj = parseParams(newView.type, newView.props, \"set\");\n    newView.props = obj.config;\n    newView.type = obj.type[0].toUpperCase() + obj.type.substr(1, obj.type.length);\n    return newView;\n  }\n\n  var move = helper.shouldMove(view);\n  helper.cacheDimen(view);\n  var ranRunInUI = false;\n  if (move) {\n    move.id = id;\n    runInUIHelper(view.type, view.props);\n    ranRunInUI = true;\n  }\n\n  computeChildDimens(view);\n  view.children.forEach(inflate);\n  return ranRunInUI;\n}\n\nfunction runInUI(cmd, fromInflate) {\n  if (!(cmd instanceof Array)) cmd = [cmd];\n\n  if (cmd.length == 1 && cmd[0] == \"removeAllUI\") {\n    window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n      methodName: \"removeAllUI\",\n      parameters: { \"animated\": \"false\" }\n    }));\n  } else {\n    cmd.forEach(function (each) {\n      var id = each.id;\n      each.useConstraits = true;\n      var view = window.__VIEWS[id];\n      if (view) {\n        var parent = window.__VIEWS[view.props.parentId];\n        view.props = helper.merge(view.props, each);\n        if (view.props && view.props.hasOwnProperty(\"listItem\") && each.hasOwnProperty(\"listData\") && !each.hasOwnProperty(\"listItem\")) {\n          each.listItem = view.props.listItem;\n        }\n        //Adding as stop gag solution for editText in ios where text \n        //was getting set empty in case other properties were modified.\n        if (!each.hasOwnProperty('text') && view.props) {\n          delete view.props.text;\n        }\n        if (each.hasOwnProperty('textFromHtml') && view.props) {\n          if (view.props.hasOwnProperty('color')) {\n            each.color = view.props.color;\n          }\n          if (view.props.hasOwnProperty('fontStyle')) {\n            each.fontStyle = view.props.fontStyle;\n          }\n          if (view.props.hasOwnProperty('textSize')) {\n            each.textSize = view.props.textSize;\n          }\n        }\n        if (parent && !fromInflate) {\n          if (parent.type.indexOf(\"scroll\") != -1) {\n            inflate(parent);\n          }\n          computeChildDimens(parent);\n          var children = parent.children;\n          if (!inflate(view)) {\n            runInUIHelper(view.type, each, true);\n          };\n          for (var i = 0, len = children.length; i < len; i++) {\n            if (view != children[i]) {\n              inflate(children[i]);\n            }\n          }\n        } else {\n          runInUIHelper(view.type, each);\n        }\n      }\n    });\n  }\n};\n\nfunction runInUIHelper(type, obj, removeFrame) {\n  var cmd = parseParams(type, obj, \"get\").config.methods;\n  if (removeFrame) {\n    cmd = cmd.filter(function (itm) {\n      return itm.methodName != \"setFrame:\";\n    });\n  }\n  window.webkit.messageHandlers.IOS.postMessage(JSON.stringify({\n    methodName: \"runInUI\",\n    parameters: cmd\n  }));\n}\n\nmodule.exports = {\n  inflate: inflate,\n  computeChildDimens: computeChildDimens,\n  runInUI: runInUI\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/IOS/Render.js\n");

/***/ }),

/***/ "./src/PrestoUIInterface.js":
/*!**********************************!*\
  !*** ./src/PrestoUIInterface.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar prestoDom = __webpack_require__(/*! ./doms */ \"./src/doms/index.js\");\nvar helpers = __webpack_require__(/*! ./helpers */ \"./src/helpers/index.js\");\nvar webParseParams;\nvar iOSParseParams;\nvar parseParams;\nvar helper = __webpack_require__(/*! ./helper */ \"./src/helper.js\");\n\nif (false) {} else if (true) {\n  iOSParseParams = helpers.ios.parseParams;\n} else {}\n\nfunction domAll(elem) {\n  if (!elem.__ref) {\n    elem.__ref = createPrestoElement();\n  }\n\n  if (elem.props.id) {\n    elem.__ref.__id = parseInt(elem.props.id, 10) || elem.__ref.__id;\n  }\n\n  var type = helper.clone(elem.type, null);\n  var props = helper.clone(elem.props, null);\n\n  if (props.focus == false && \"IOS\" === \"ANDROID\") {\n    delete props.focus;\n  }\n\n  var children = [];\n\n  for (var i = 0; i < elem.children.length; i++) {\n    children.push(domAll(elem.children[i]));\n  }\n\n  if (__OS == \"WEB\" && props.onResize) {\n    window.__resizeEvent = props.onResize;\n  }\n\n  props.id = elem.__ref.__id;\n  if (elem.parentType && \"IOS\" == \"ANDROID\") return prestoDom({ elemType: type, parentType: elem.parentType }, props, children);\n\n  return prestoDom(type, props, children);\n}\n\nfunction getDomToRender(elem) {\n  var res = domAll(elem);\n  if (false) {} else {\n    return res;\n  }\n}\n\n// Not exported\nfunction cmdForAndroid(config, set, type) {\n  if (set) {\n    if (config.id) {\n      var obj = parseParams(type, config, \"set\");\n      var cmd = obj.runInUI.replace(\"this->setId\", \"set_view=ctx->findViewById\").replace(/this->/g, \"get_view->\");\n      cmd = cmd.replace(/PARAM_CTR_HOLDER[^;]*/g, \"get_view->getLayoutParams;\");\n      obj.runInUI = cmd;\n      return obj;\n    } else {\n      console.error(\"ID null, this is not supposed to happen. Debug this or/and raise a issue in bitbucket.\");\n    }\n    return {};\n  }\n\n  var _id = config.id;\n  var cmd = \"set_view=ctx->findViewById:i_\" + _id + \";\";\n  // var runInUI;\n  delete config.id;\n  config.root = \"true\";\n  var obj = parseParams(type, config, \"get\");\n  obj.runInUI = cmd + obj.runInUI + ';';\n  obj.id = _id;\n  return obj;\n}\n\nfunction getRunInUICmd(prop) {\n  var cmd;\n  if (false) {} else if (true) {\n    cmd = prop;\n  } else {}\n  return cmd;\n}\n\n// Not exported\nfunction applyProp(element, attribute, set) {\n  var prop = {\n    id: element.__ref.__id\n  };\n  prop[attribute.value0] = attribute.value1;\n\n  if (attribute.value0 == 'focus' && attribute.value1 == false && \"IOS\" == \"ANDROID\") {\n    return;\n  }\n\n  if (false) { var cmd; } else if (true) {\n    Android.runInUI(prop);\n  } else {}\n  // Android.runInUI(parseParams(\"linearLayout\", prop, \"set\"));\n}\n\nfunction replaceView(element, attribute, removeProp) {\n  // console.log(\"REPLACE VIEW\", element.__ref.__id, element.props);\n  var props = helper.clone(element.props, null);\n  props.id = element.__ref.__id;\n  var rep;\n  var viewGroups = [\"linearLayout\", \"relativeLayout\", \"scrollView\", \"frameLayout\", \"horizontalScrollView\"];\n\n  if (viewGroups.indexOf(element.type) != -1) {\n    props.root = true;\n    rep = prestoDom(element.type, props, []);\n  } else if (false) {} else {\n    rep = prestoDom(element.type, props, []);\n  }\n  if (false) {} else {\n    Android.replaceView(rep, element.__ref.__id);\n  }\n}\n\nfunction createPrestoElement() {\n  if (typeof window.__ui_id_sequence != \"undefined\" && window.__ui_id_sequence != null) {\n    return { __id: ++window.__ui_id_sequence };\n  } else {\n    window.__ui_id_sequence = typeof Android.getNewID == \"function\" ? parseInt(Android.getNewID()) * 1000000 : window.__PRESTO_ID;\n    return { __id: ++window.__ui_id_sequence };\n  }\n};\n\nfunction moveChild(child, parent, index) {\n  Android.moveView(child.__ref.__id, index);\n}\n\nfunction removeChild(child, parent, index) {\n  // console.log(\"Remove child :\", child.type);\n  Android.removeView(child.__ref.__id + \"\");\n}\n\nfunction addChild(child, parent, index) {\n  if (child.type == null) {\n    console.warn(\"child null\");\n  }\n  // console.log(\"Add child :\", child.__ref.__id, child.type);\n  var viewGroups = [\"linearLayout\", \"relativeLayout\", \"scrollView\", \"frameLayout\", \"horizontalScrollView\"];\n  if (false) {} else Android.addViewToParent(parent.__ref.__id, domAll(child), index, null, null);\n}\n\nfunction addAttribute(element, attribute) {\n  // console.log(\"add attr :\", attribute);\n  element.props[attribute.value0] = attribute.value1;\n  applyProp(element, attribute, true);\n}\n\nfunction removeAttribute(element, attribute) {\n  // console.log(\"remove attr :\", attribute);\n  replaceView(element, attribute, true);\n}\n\nfunction updateAttribute(element, attribute) {\n  // console.log(\"update attr :\", attribute);\n  element.props[attribute.value0] = attribute.value1;\n\n  applyProp(element, attribute, false);\n}\n\nfunction insertDom(root, dom, cb) {\n  root.children.push(dom);\n  dom.parentNode = root;\n  dom.__ref = createPrestoElement();\n  window.N = root;\n\n  var rootId = window.__ROOTSCREEN.idSet.root;\n\n  dom.props.root = true;\n\n  var length = window.__ROOTSCREEN.idSet.child.push(dom.__ref.__id);\n\n  var callback = window.callbackMapper(executePostProcess(cb));\n  if (false) {} else {\n    Android.addViewToParent(rootId, domAll(dom), length - 1, callback, null);\n  }\n\n  return dom.__ref.__id;\n}\n\nfunction executePostProcess(cb) {\n  return function () {\n    cb();\n\n    if (window.__dui_screen && window[\"afterRender\"]) {\n      for (var tag in window[\"afterRender\"][window.__dui_screen]) {\n        try {\n          window[\"afterRender\"][window.__dui_screen][tag]()();\n          window[\"afterRender\"][window.__dui_screen][\"executed\"] = true;\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n    }\n\n    if (JBridge && JBridge.setShadow) {\n      for (var tag in window.shadowObject) {\n        JBridge.setShadow(window.shadowObject[tag][\"level\"], JSON.stringify(window.shadowObject[tag][\"viewId\"]), JSON.stringify(window.shadowObject[tag][\"backgroundColor\"]), JSON.stringify(window.shadowObject[tag][\"blurValue\"]), JSON.stringify(window.shadowObject[tag][\"shadowColor\"]), JSON.stringify(window.shadowObject[tag][\"dx\"]), JSON.stringify(window.shadowObject[tag][\"dy\"]), JSON.stringify(window.shadowObject[tag][\"spread\"]), JSON.stringify(window.shadowObject[tag][\"factor\"]));\n      }\n    }\n  };\n}\n\nmodule.exports = {\n  domAll: domAll,\n  getDomToRender: getDomToRender,\n  getRunInUICmd: getRunInUICmd,\n  replaceView: replaceView,\n  createPrestoElement: createPrestoElement,\n  moveChild: moveChild,\n  removeChild: removeChild,\n  addChild: addChild,\n  addAttribute: addAttribute,\n  removeAttribute: removeAttribute,\n  updateProperty: updateAttribute,\n  addProperty: addAttribute,\n  insertDom: insertDom\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/PrestoUIInterface.js\n");

/***/ }),

/***/ "./src/animations.js":
/*!***************************!*\
  !*** ./src/animations.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar BaseView = __webpack_require__(/*! ./baseView */ \"./src/baseView.js\");\nvar VIEW = new BaseView(null, null, {});\n\n// Object of types of animations available on screen change\nvar AnimationTypes = {\n  SLIDE: {\n    name: \"slide\",\n    handler: slideHandler\n  },\n  SLIDE_VERTICAL: {\n    name: \"slide_down\",\n    handler: slideDownHandler\n  },\n  SIMPLE: {\n    name: \"simple\",\n    handler: simpleHandler\n  }\n};\n\nvar DEFAULT_ANIMATION = AnimationTypes.SLIDE;\n\nfunction simpleHandler(fromId, toId, direction) {\n  var cmd = VIEW.cmd({\n    id: toId,\n    translationZ: ++window.ZIndex\n  });\n  return cmd;\n}\n\nfunction slideDownHandler(fromId, toId, direction) {\n  var container = VIEW.cmdContainer();\n  var cmd = void 0;\n\n  if (direction == 1) {\n    cmd = VIEW.cmd({\n      id: toId,\n      translationY: window.__HEIGHT,\n      a_duration: '300',\n      a_translationY: '0',\n      translationZ: ++window.ZIndex\n    });\n    container = container.addCmd(cmd);\n\n    cmd = VIEW.cmd({\n      id: fromId,\n      a_translationY: -0.2 * window.__HEIGHT,\n      a_duration: '300'\n    });\n    container = container.addCmd(cmd);\n\n    return container;\n  }\n\n  window.ZIndex++;\n  cmd = VIEW.cmd({\n    id: fromId,\n    translationY: 0,\n    a_translationY: window.__HEIGHT,\n    a_duration: '300',\n    translationZ: ++window.ZIndex\n  });\n  container = container.addCmd(cmd);\n\n  cmd = VIEW.cmd({\n    id: toId,\n    translationZ: window.ZIndex - 1,\n    a_translationY: '0',\n    translationY: -0.2 * window.__HEIGHT,\n    a_duration: '300'\n  });\n  container = container.addCmd(cmd);\n\n  return container;\n}\n\nfunction slideHandler(fromId, toId, direction) {\n  var container = VIEW.cmdContainer();\n  var cmd = void 0;\n  if (direction == 1) {\n    cmd = VIEW.cmd({\n      id: toId,\n      visibility: 'visible',\n      translationX: window.__WIDTH,\n      a_duration: '300',\n      a_translationX: '0',\n      translationZ: ++window.ZIndex\n    });\n    container = container.addCmd(cmd);\n    cmd = VIEW.cmd({\n      id: fromId,\n      translationX: '0',\n      visibility: 'visible',\n      a_duration: '300',\n      a_translationX: -.2 * window.__WIDTH + ''\n    });\n    container = container.addCmd(cmd);\n  }\n\n  if (direction == -1) {\n    window.ZIndex++;\n    cmd = VIEW.cmd({\n      id: fromId,\n      translationX: '0',\n      a_duration: '300',\n      a_translationX: window.__WIDTH,\n      translationZ: ++window.ZIndex\n    });\n    container = container.addCmd(cmd);\n\n    cmd = VIEW.cmd({\n      id: toId,\n      visibility: 'visible',\n      translationX: -.2 * window.__WIDTH + '',\n      a_duration: '300',\n      a_translationX: '0',\n      translationZ: window.ZIndex - 1\n    });\n    container = container.addCmd(cmd);\n  }\n\n  return container;\n}\n\n/*\n  Generic Handler for Animation\n  Arguments:\n    fromViewId: Number - Id of the view currently visible on the screen\n    toViewID: Number - Id of the view which has to be brought on the screen\n    ID: Number - Id of the view to be animated\n    animator: Obj - {name:string, handler:function}\n    direction: Number - Represents of the direction of the screen\n      -1 : Go back to the already rendered screen (right to left)\n       1 : Go to the new screen (left to right)\n*/\nfunction getAnimation(fromViewID, toViewId, direction, animator) {\n  if (!animator) animator = DEFAULT_ANIMATION;\n\n  if ((typeof animator === \"undefined\" ? \"undefined\" : _typeof(animator)) === \"object\" && typeof animator.handler === \"function\") return animator.handler(fromViewID, toViewId, direction);else console.log(new Error(\"Animation handler is not a function, type: \" + animator));\n}\n\nmodule.exports.types = AnimationTypes;\nmodule.exports.getAnimation = getAnimation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/animations.js\n");

/***/ }),

/***/ "./src/baseView.js":
/*!*************************!*\
  !*** ./src/baseView.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar merge = __webpack_require__(/*! ./helper */ \"./src/helper.js\").merge;\n\nString.prototype.addCmd = function (data) {\n  return this.concat(data);\n};\n\nArray.prototype.addCmd = function (data) {\n  this.push(data);\n  return this;\n};\n\nvar parseParams = void 0;\nif (false) {}else if (false) {}else parseParams = __webpack_require__(/*! ./helpers/ios/parseParams */ \"./src/helpers/ios/parseParams.js\");\n\nvar BaseView = function () {\n  function BaseView(props, children) {\n    _classCallCheck(this, BaseView);\n\n    this.props = props || {};\n    this.children = children || [];\n\n    window.__SETFN = function (config) {\n      Android.runInUI(this.set(config), null);\n    }.bind(this);\n\n    this.idSet = {};\n\n    if (this.props.id) {\n      this.idSet[\"id\"] = this.props.id;\n    } else {\n      this.props.id = this.id(\"id\");\n    }\n\n    if (this.props._ref) {\n      this.props._ref(this);\n    }\n  }\n\n  _createClass(BaseView, [{\n    key: \"resolveChildren\",\n    value: function resolveChildren() {\n      return this.children.map(function (child) {\n        return child.render();\n      });\n    }\n  }, {\n    key: \"findRecurse\",\n    value: function findRecurse(obj, selector) {\n      var children = obj.children;\n\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].displayName && children[i].displayName == selector) {\n          this.foundChildren.push(children[i]);\n        }\n\n        if (children[i].children && children[i].children.length) this.findRecurse(children[i], selector);\n      }\n\n      return;\n    }\n  }, {\n    key: \"find\",\n    value: function find(selector, obj) {\n      this.foundChildren = [];\n\n      if (!obj) this.findRecurse(this.layout, selector);else this.findRecurse(obj, selector);\n\n      return this.foundChildren;\n    }\n  }, {\n    key: \"id\",\n    value: function id(name) {\n      if (!this.idSet[name]) {\n        window.__ID++;\n        this.idSet[name] = window.__ID;\n      }\n\n      return this.idSet[name];\n    }\n  }, {\n    key: \"setIds\",\n    value: function setIds(arr) {\n      if (!this.idSet) this.idSet = {};\n\n      for (var i = 0; i < arr.length; i++) {\n        if (!this.idSet[arr[i]]) {\n          window.__ID++;\n          this.idSet[arr[i]] = window.__ID + '';\n        }\n      }\n    }\n  }, {\n    key: \"handleSpecialChars\",\n    value: function handleSpecialChars(value) {\n      value = value.indexOf(',') > -1 ? value.replace(/\\,/g, '\\\\\\\\,') : value;\n      value = value.indexOf(':') > -1 ? value.replace(/\\:/g, '\\\\\\\\:') : value;\n      value = value.indexOf('=') > -1 ? value.replace(/\\=/g, '\\\\\\\\=') : value;\n      value = value.indexOf(';') > -1 ? value.replace(/\\;/g, '\\\\\\\\;') : value;\n\n      return value;\n    }\n  }, {\n    key: \"cmdForAndroid\",\n    value: function cmdForAndroid(config) {\n      var cmd = \"set_view=ctx->findViewById:i_\" + config.id + \";\";\n      var runInUI;\n\n      if (config.toast) {\n        cmd = \"set_TOAST=android.widget.Toast->makeText:ctx_ctx,cs_\" + this.handleSpecialChars(config.text) + \",i_\" + (config.duration == \"short\" ? 0 : 1) + \";get_TOAST->show\";\n      } else if (config && Object.keys(config).length) {\n        delete config.id;\n\n        config.root = \"true\";\n        runInUI = parseParams(\"linearLayout\", config, \"get\").runInUI;\n\n        cmd += runInUI + ';';\n      }\n\n      return cmd;\n    }\n  }, {\n    key: \"cmdContainer\",\n    value: function cmdContainer() {\n      if (false) {}\n      return [];\n    }\n  }, {\n    key: \"cmdForWeb\",\n    value: function cmdForWeb(config) {\n      if (Object.keys(config).length) return parseParams(\"linearLayout\", config, \"set\");\n    }\n  }, {\n    key: \"cmd\",\n    value: function cmd(config) {\n      if (false) {}else if (false) {}\n      return config;\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(id, jsx, index, fn, replaceChild) {\n      var proxyFnName;\n      if (!replaceChild) {\n        replaceChild = false;\n      }\n\n      if (fn) {\n        proxyFnName = 'F' + window.__FN_INDEX;\n        window.__PROXY_FN[proxyFnName] = fn;\n        window.__FN_INDEX++;\n      }\n\n      jsx =  true ? jsx : undefined;\n\n      if (proxyFnName) Android.addViewToParent(id, jsx, index, proxyFnName, replaceChild);else Android.addViewToParent(id, jsx, index, null, replaceChild);\n    }\n  }, {\n    key: \"getView\",\n    value: function getView(jsx) {\n      if (true) return jsx;\n\n      return JSON.stringify(jsx);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(props) {\n      this.props = merge(this.props, props);\n      var oldContainerId = this.layout.idSet.id;\n      var layout = this.render();\n      for (var i = 0; i < layout.children.length; i++) {\n        if (i == 0) this.replaceChild(oldContainerId, layout.children[i], i);else this.appendChild(oldContainerId, layout.children[i], i);\n      }\n      this.layout.idSet.id = oldContainerId;\n    }\n  }, {\n    key: \"removeView\",\n    value: function removeView(id) {\n      if (__OS == \"WEB\") return Android.removeView(id);\n      return \"set_VIEW=ctx->findViewById:i_\" + id + \";set_PARENT=get_VIEW->getParent;get_PARENT->removeView:get_VIEW;\";\n    }\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren(id) {\n      if (__OS == \"WEB\") return Android.removeChildren(id);\n      return \"set_VIEW=ctx->findViewById:i_\" + id + \";get_VIEW->removeAllViews;\";\n    }\n  }, {\n    key: \"replaceChild\",\n    value: function replaceChild(id, jsx, index, fn) {\n      this.appendChild(id, jsx, index, fn, true);\n    }\n  }]);\n\n  return BaseView;\n}();\n\nmodule.exports = BaseView;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/baseView.js\n");

/***/ }),

/***/ "./src/computeIOS.js":
/*!***************************!*\
  !*** ./src/computeIOS.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar computeChildDimens = function computeChildDimens(view) {\n  if (view.props) {\n    view.props.useConstraits = true;\n  }\n  // if (view.type == \"linearLayout\" && view.children && view.children.length){\n  //   view.props.weightSum = 0.0;\n  //   view.props.diffHeight = 0.0;\n  //   for(var i in view.children){\n  //     var child = view.children[i];\n  //     if(child.props && child.props.weight){\n  //       view.props.weightSum += parseInt(child.props.weight)\n  //     } else if(child.props && child.props.height) {\n  //       view.props.diffHeight += parseInt(child.props.height)\n  //     }\n  //   }\n  // }\n  return view;\n};\n\nmodule.exports = {\n  computeLinearlayout: function computeLinearlayout(view) {\n    return computeChildDimens(view);\n  },\n  computeRelativeLayout: function computeRelativeLayout(view) {\n    return computeChildDimens(view);\n  },\n  computeScrollView: function computeScrollView(view) {\n    return computeChildDimens(view);\n  },\n  computeChildDimens: computeChildDimens\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcHV0ZUlPUy5qcz9iZWI3Il0sIm5hbWVzIjpbImNvbXB1dGVDaGlsZERpbWVucyIsInZpZXciLCJwcm9wcyIsInVzZUNvbnN0cmFpdHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29tcHV0ZUxpbmVhcmxheW91dCIsImNvbXB1dGVSZWxhdGl2ZUxheW91dCIsImNvbXB1dGVTY3JvbGxWaWV3Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBLElBQUlBLHFCQUFxQixTQUFyQkEsa0JBQXFCLENBQVNDLElBQVQsRUFBZTtBQUNwQyxNQUFJQSxLQUFLQyxLQUFULEVBQWdCO0FBQ2RELFNBQUtDLEtBQUwsQ0FBV0MsYUFBWCxHQUEyQixJQUEzQjtBQUNEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0YsU0FBT0YsSUFBUDtBQUNELENBakJEOztBQW1CQUcsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyx1QkFBb0IsNkJBQUNMLElBQUQ7QUFBQSxXQUFVRCxtQkFBbUJDLElBQW5CLENBQVY7QUFBQSxHQURMO0FBRWZNLHlCQUF1QiwrQkFBQ04sSUFBRDtBQUFBLFdBQVVELG1CQUFtQkMsSUFBbkIsQ0FBVjtBQUFBLEdBRlI7QUFHZk8scUJBQW1CLDJCQUFDUCxJQUFEO0FBQUEsV0FBVUQsbUJBQW1CQyxJQUFuQixDQUFWO0FBQUEsR0FISjtBQUlmRDtBQUplLENBQWpCIiwiZmlsZSI6Ii4vc3JjL2NvbXB1dGVJT1MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNyBcIkpVU1BBWSBUZWNobm9sb2dpZXNcIlxuKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuKlxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBKVVNQQVkgUGxhdGZvcm0uXG4qXG4qIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4qIGl0IGZvciBvbmx5IGVkdWNhdGlvbmFsIHB1cnBvc2VzIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsXG4qIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4qIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4qIEZvciBFbnRlcnByaXNlL0NvbW1lcmljYWwgbGljZW5zZXMsIGNvbnRhY3QgPGluZm9AanVzcGF5LmluPi5cbipcbiogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4qIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4qIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4qIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4qIEFCVVNFIG9mIHRoZSBMSUNFTlNFRCBTT0ZUV0FSRSBhbmQgc2hhbGwgSU5ERU1OSUZZIEpVU1BBWSBmb3Igc3VjaFxuKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2Vcbiogb2YgTGljZW5zZWQgU29mdHdhcmUuIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4qXG4qIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC5odG1sPi5cbiovXG5cblxuXG52YXIgY29tcHV0ZUNoaWxkRGltZW5zID0gZnVuY3Rpb24odmlldykge1xuICAgIGlmICh2aWV3LnByb3BzKSB7XG4gICAgICB2aWV3LnByb3BzLnVzZUNvbnN0cmFpdHMgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBpZiAodmlldy50eXBlID09IFwibGluZWFyTGF5b3V0XCIgJiYgdmlldy5jaGlsZHJlbiAmJiB2aWV3LmNoaWxkcmVuLmxlbmd0aCl7XG4gICAgLy8gICB2aWV3LnByb3BzLndlaWdodFN1bSA9IDAuMDtcbiAgICAvLyAgIHZpZXcucHJvcHMuZGlmZkhlaWdodCA9IDAuMDtcbiAgICAvLyAgIGZvcih2YXIgaSBpbiB2aWV3LmNoaWxkcmVuKXtcbiAgICAvLyAgICAgdmFyIGNoaWxkID0gdmlldy5jaGlsZHJlbltpXTtcbiAgICAvLyAgICAgaWYoY2hpbGQucHJvcHMgJiYgY2hpbGQucHJvcHMud2VpZ2h0KXtcbiAgICAvLyAgICAgICB2aWV3LnByb3BzLndlaWdodFN1bSArPSBwYXJzZUludChjaGlsZC5wcm9wcy53ZWlnaHQpXG4gICAgLy8gICAgIH0gZWxzZSBpZihjaGlsZC5wcm9wcyAmJiBjaGlsZC5wcm9wcy5oZWlnaHQpIHtcbiAgICAvLyAgICAgICB2aWV3LnByb3BzLmRpZmZIZWlnaHQgKz0gcGFyc2VJbnQoY2hpbGQucHJvcHMuaGVpZ2h0KVxuICAgIC8vICAgICB9XG4gICAgLy8gICB9XG4gICAgLy8gfVxuICByZXR1cm4gdmlldztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNvbXB1dGVMaW5lYXJsYXlvdXQ6KHZpZXcpID0+IGNvbXB1dGVDaGlsZERpbWVucyh2aWV3KSxcbiAgY29tcHV0ZVJlbGF0aXZlTGF5b3V0OiAodmlldykgPT4gY29tcHV0ZUNoaWxkRGltZW5zKHZpZXcpLFxuICBjb21wdXRlU2Nyb2xsVmlldzogKHZpZXcpID0+IGNvbXB1dGVDaGlsZERpbWVucyh2aWV3KSxcbiAgY29tcHV0ZUNoaWxkRGltZW5zXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/computeIOS.js\n");

/***/ }),

/***/ "./src/doms/index.js":
/*!***************************!*\
  !*** ./src/doms/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nfunction run() {\n  if (true) {\n    return __webpack_require__(/*! ./ios */ \"./src/doms/ios.js\");\n  } else {}\n}\n\nmodule.exports = run();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZG9tcy9pbmRleC5qcz9mZWE1Il0sIm5hbWVzIjpbInJ1biIsIndpbmRvdyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBLFNBQVNBLEdBQVQsR0FBZTtBQUNiLE1BQUlDLElBQUosRUFBMkI7QUFDekIsV0FBT0MsbUJBQU9BLENBQUMsZ0NBQVIsQ0FBUDtBQUNELEdBRkQsTUFFTyxFQUlOO0FBQ0Y7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUJKLEtBQWpCIiwiZmlsZSI6Ii4vc3JjL2RvbXMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNyBcIkpVU1BBWSBUZWNobm9sb2dpZXNcIlxuKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuKlxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBKVVNQQVkgUGxhdGZvcm0uXG4qXG4qIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4qIGl0IGZvciBvbmx5IGVkdWNhdGlvbmFsIHB1cnBvc2VzIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsXG4qIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4qIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4qIEZvciBFbnRlcnByaXNlL0NvbW1lcmljYWwgbGljZW5zZXMsIGNvbnRhY3QgPGluZm9AanVzcGF5LmluPi5cbipcbiogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4qIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4qIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4qIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4qIEFCVVNFIG9mIHRoZSBMSUNFTlNFRCBTT0ZUV0FSRSBhbmQgc2hhbGwgSU5ERU1OSUZZIEpVU1BBWSBmb3Igc3VjaFxuKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2Vcbiogb2YgTGljZW5zZWQgU29mdHdhcmUuIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4qXG4qIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC5odG1sPi5cbiovXG5cbmZ1bmN0aW9uIHJ1bigpIHtcbiAgaWYgKHdpbmRvdy5fX09TID09PSBcIklPU1wiKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoXCIuL2lvc1wiKVxuICB9IGVsc2UgaWYgKHdpbmRvdy5fX09TID09PSBcIldFQlwiKSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoXCIuL3dlYlwiKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiByZXF1aXJlKFwiLi9hbmRyb2lkXCIpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBydW4oKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/doms/index.js\n");

/***/ }),

/***/ "./src/doms/ios.js":
/*!*************************!*\
  !*** ./src/doms/ios.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nArray.prototype.flatten = function () {\n  return this.reduce(function (prev, cur) {\n    var more = [].concat(cur).some(Array.isArray);\n    return prev.concat(more ? cur.flatten() : cur);\n  }, []);\n};\n\nfunction flattenObject(ob) {\n  var toReturn = {};\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n    if (_typeof(ob[i]) == 'object') {\n      var flatObject = flattenObject(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        if (typeof flatObject[x] !== \"undefined\") toReturn[x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n  return toReturn;\n};\n\nmodule.exports = function (type, props) {\n  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  var paramType;\n\n  children = children.flatten();\n\n  if (!props) props = {};\n\n  if (typeof type === \"string\") {\n    props.node_id = window.__NODE_ID + '';\n    props = flattenObject(props);\n    window.__NODE_ID++;\n    children.forEach(function (child) {\n      child.props.parentId = props.id;\n    });\n\n    if (!props.__filename) props.__filename = \"filename not added\";\n\n    return { type: type, props: props, children: children };\n  } else {\n    return new type(props, children);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZG9tcy9pb3MuanM/NmMyMSJdLCJuYW1lcyI6WyJBcnJheSIsInByb3RvdHlwZSIsImZsYXR0ZW4iLCJyZWR1Y2UiLCJwcmV2IiwiY3VyIiwibW9yZSIsImNvbmNhdCIsInNvbWUiLCJpc0FycmF5IiwiZmxhdHRlbk9iamVjdCIsIm9iIiwidG9SZXR1cm4iLCJpIiwiaGFzT3duUHJvcGVydHkiLCJmbGF0T2JqZWN0IiwieCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0eXBlIiwicHJvcHMiLCJjaGlsZHJlbiIsInBhcmFtVHlwZSIsIm5vZGVfaWQiLCJ3aW5kb3ciLCJfX05PREVfSUQiLCJmb3JFYWNoIiwiY2hpbGQiLCJwYXJlbnRJZCIsImlkIiwiX19maWxlbmFtZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxNQUFNQyxTQUFOLENBQWdCQyxPQUFoQixHQUEwQixZQUFXO0FBQ25DLFNBQU8sS0FBS0MsTUFBTCxDQUFZLFVBQVNDLElBQVQsRUFBZUMsR0FBZixFQUFvQjtBQUNyQyxRQUFJQyxPQUFPLEdBQUdDLE1BQUgsQ0FBVUYsR0FBVixFQUFlRyxJQUFmLENBQW9CUixNQUFNUyxPQUExQixDQUFYO0FBQ0EsV0FBT0wsS0FBS0csTUFBTCxDQUFZRCxPQUFPRCxJQUFJSCxPQUFKLEVBQVAsR0FBdUJHLEdBQW5DLENBQVA7QUFDRCxHQUhNLEVBR0wsRUFISyxDQUFQO0FBSUQsQ0FMRDs7QUFPQSxTQUFTSyxhQUFULENBQXVCQyxFQUF2QixFQUEyQjtBQUN6QixNQUFJQyxXQUFXLEVBQWY7QUFDQSxPQUFLLElBQUlDLENBQVQsSUFBY0YsRUFBZCxFQUFrQjtBQUNoQixRQUFJLENBQUNBLEdBQUdHLGNBQUgsQ0FBa0JELENBQWxCLENBQUwsRUFBMkI7QUFDM0IsUUFBSSxRQUFRRixHQUFHRSxDQUFILENBQVIsS0FBa0IsUUFBdEIsRUFBZ0M7QUFDOUIsVUFBSUUsYUFBYUwsY0FBY0MsR0FBR0UsQ0FBSCxDQUFkLENBQWpCO0FBQ0EsV0FBSyxJQUFJRyxDQUFULElBQWNELFVBQWQsRUFBMEI7QUFDeEIsWUFBSSxDQUFDQSxXQUFXRCxjQUFYLENBQTBCRSxDQUExQixDQUFMLEVBQW1DO0FBQ25DLFlBQUksT0FBT0QsV0FBV0MsQ0FBWCxDQUFQLEtBQXlCLFdBQTdCLEVBQ0VKLFNBQVNJLENBQVQsSUFBY0QsV0FBV0MsQ0FBWCxDQUFkO0FBQ0g7QUFDRixLQVBELE1BT087QUFDTEosZUFBU0MsQ0FBVCxJQUFjRixHQUFHRSxDQUFILENBQWQ7QUFDRDtBQUNGO0FBQ0QsU0FBT0QsUUFBUDtBQUNEOztBQUVESyxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLElBQVQsRUFBZUMsS0FBZixFQUFrQztBQUFBLG9DQUFUQyxRQUFTO0FBQVRBLFlBQVM7QUFBQTs7QUFDakQsTUFBSUMsU0FBSjs7QUFFQUQsYUFBWUEsU0FBU25CLE9BQVQsRUFBWjs7QUFFQSxNQUFJLENBQUNrQixLQUFMLEVBQ0FBLFFBQVEsRUFBUjs7QUFFQSxNQUFHLE9BQU9ELElBQVAsS0FBZ0IsUUFBbkIsRUFBNkI7QUFDM0JDLFVBQU1HLE9BQU4sR0FBZ0JDLE9BQU9DLFNBQVAsR0FBbUIsRUFBbkM7QUFDQUwsWUFBUVYsY0FBY1UsS0FBZCxDQUFSO0FBQ0FJLFdBQU9DLFNBQVA7QUFDQUosYUFBU0ssT0FBVCxDQUFpQixpQkFBUztBQUN4QkMsWUFBTVAsS0FBTixDQUFZUSxRQUFaLEdBQXVCUixNQUFNUyxFQUE3QjtBQUNELEtBRkQ7O0FBSUEsUUFBSSxDQUFDVCxNQUFNVSxVQUFYLEVBQ0FWLE1BQU1VLFVBQU4sR0FBbUIsb0JBQW5COztBQUVBLFdBQU8sRUFBQ1gsTUFBTUEsSUFBUCxFQUFjQyxPQUFPQSxLQUFyQixFQUE0QkMsVUFBVUEsUUFBdEMsRUFBUDtBQUVELEdBYkQsTUFhTztBQUNMLFdBQU8sSUFBSUYsSUFBSixDQUFTQyxLQUFULEVBQWdCQyxRQUFoQixDQUFQO0FBQ0Q7QUFDRixDQXhCRCIsImZpbGUiOiIuL3NyYy9kb21zL2lvcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4qIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4qXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbipcbiogSlVTUEFZIFBsYXRmb3JtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiogZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuKlxuKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiogYmUgbGlhYmxlIGZvciBhbGwgZGFtYWdlcyB3aXRob3V0IGxpbWl0YXRpb24sIHdoaWNoIGlzIGNhdXNlZCBieSB0aGVcbiogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4qIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuKiBUaGUgZW5kIHVzZXIgaGFzIE5PIHJpZ2h0IHRvIGNsYWltIGFueSBpbmRlbW5pZmljYXRpb24gYmFzZWQgb24gaXRzIHVzZVxuKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbipcbiogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4qIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuKi9cblxuQXJyYXkucHJvdG90eXBlLmZsYXR0ZW4gPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMucmVkdWNlKGZ1bmN0aW9uKHByZXYsIGN1cikge1xuICAgIHZhciBtb3JlID0gW10uY29uY2F0KGN1cikuc29tZShBcnJheS5pc0FycmF5KTtcbiAgICByZXR1cm4gcHJldi5jb25jYXQobW9yZSA/IGN1ci5mbGF0dGVuKCkgOiBjdXIpO1xuICB9LFtdKTtcbn07XG5cbmZ1bmN0aW9uIGZsYXR0ZW5PYmplY3Qob2IpIHtcbiAgdmFyIHRvUmV0dXJuID0ge307XG4gIGZvciAodmFyIGkgaW4gb2IpIHtcbiAgICBpZiAoIW9iLmhhc093blByb3BlcnR5KGkpKSBjb250aW51ZTtcbiAgICBpZiAoKHR5cGVvZiBvYltpXSkgPT0gJ29iamVjdCcpIHtcbiAgICAgIHZhciBmbGF0T2JqZWN0ID0gZmxhdHRlbk9iamVjdChvYltpXSk7XG4gICAgICBmb3IgKHZhciB4IGluIGZsYXRPYmplY3QpIHtcbiAgICAgICAgaWYgKCFmbGF0T2JqZWN0Lmhhc093blByb3BlcnR5KHgpKSBjb250aW51ZTtcbiAgICAgICAgaWYgKHR5cGVvZiBmbGF0T2JqZWN0W3hdICE9PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICAgIHRvUmV0dXJuW3hdID0gZmxhdE9iamVjdFt4XTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdG9SZXR1cm5baV0gPSBvYltpXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRvUmV0dXJuO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih0eXBlLCBwcm9wcywgLi4uY2hpbGRyZW4pe1xuICB2YXIgcGFyYW1UeXBlO1xuXG4gIGNoaWxkcmVuID0gIGNoaWxkcmVuLmZsYXR0ZW4oKTtcblxuICBpZiAoIXByb3BzKVxuICBwcm9wcyA9IHt9O1xuXG4gIGlmKHR5cGVvZiB0eXBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcHJvcHMubm9kZV9pZCA9IHdpbmRvdy5fX05PREVfSUQgKyAnJztcbiAgICBwcm9wcyA9IGZsYXR0ZW5PYmplY3QocHJvcHMpO1xuICAgIHdpbmRvdy5fX05PREVfSUQrKztcbiAgICBjaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgIGNoaWxkLnByb3BzLnBhcmVudElkID0gcHJvcHMuaWQ7XG4gICAgfSlcblxuICAgIGlmICghcHJvcHMuX19maWxlbmFtZSlcbiAgICBwcm9wcy5fX2ZpbGVuYW1lID0gXCJmaWxlbmFtZSBub3QgYWRkZWRcIjtcblxuICAgIHJldHVybiB7dHlwZTogdHlwZSwgIHByb3BzOiBwcm9wcywgY2hpbGRyZW46IGNoaWxkcmVufVxuXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG5ldyB0eXBlKHByb3BzLCBjaGlsZHJlbik7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/doms/ios.js\n");

/***/ }),

/***/ "./src/handler.js":
/*!************************!*\
  !*** ./src/handler.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n  handle: function handle(ui, callback) {\n    if (!ui) {\n      return;\n    }\n    if (ui.render) {\n      if (typeof Android === \"undefined\") throw new Error(\"Android is undefined\");\n\n      if (true) return Android.Render(ui.render, null);else {}\n    }\n\n    if (ui.runInUI) {\n      Android.runInUI(ui.runInUI, null);\n    }\n    if (ui.addViewToParent) {\n      Android.addViewToParent(ui.addViewToParent.parentId, JSON.stringify(ui.addViewToParent.jsx), ui.addViewToParent.index, null);\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGFuZGxlci5qcz9mMTY4Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJoYW5kbGUiLCJ1aSIsImNhbGxiYWNrIiwicmVuZGVyIiwiQW5kcm9pZCIsIkVycm9yIiwid2luZG93IiwiUmVuZGVyIiwicnVuSW5VSSIsImFkZFZpZXdUb1BhcmVudCIsInBhcmVudElkIiwiSlNPTiIsInN0cmluZ2lmeSIsImpzeCIsImluZGV4Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFVBQVMsZ0JBQUNDLEVBQUQsRUFBS0MsUUFBTCxFQUFrQjtBQUN6QixRQUFJLENBQUNELEVBQUwsRUFBUztBQUNQO0FBQ0Q7QUFDRCxRQUFHQSxHQUFHRSxNQUFOLEVBQWM7QUFDWixVQUFJLE9BQU9DLE9BQVAsS0FBbUIsV0FBdkIsRUFDRSxNQUFNLElBQUlDLEtBQUosQ0FBVSxzQkFBVixDQUFOOztBQUVGLFVBQUlDLElBQUosRUFDRSxPQUFPRixRQUFRRyxNQUFSLENBQWVOLEdBQUdFLE1BQWxCLEVBQTBCLElBQTFCLENBQVAsQ0FERixLQUVLLEVBTUo7QUFDRjs7QUFFRCxRQUFHRixHQUFHTyxPQUFOLEVBQWU7QUFDYkosY0FBUUksT0FBUixDQUFnQlAsR0FBR08sT0FBbkIsRUFBNEIsSUFBNUI7QUFDRDtBQUNELFFBQUdQLEdBQUdRLGVBQU4sRUFBdUI7QUFDckJMLGNBQVFLLGVBQVIsQ0FBd0JSLEdBQUdRLGVBQUgsQ0FBbUJDLFFBQTNDLEVBQXFEQyxLQUFLQyxTQUFMLENBQWVYLEdBQUdRLGVBQUgsQ0FBbUJJLEdBQWxDLENBQXJELEVBQTZGWixHQUFHUSxlQUFILENBQW1CSyxLQUFoSCxFQUF1SCxJQUF2SDtBQUNEO0FBQ0Y7QUExQmMsQ0FBakIiLCJmaWxlIjoiLi9zcmMvaGFuZGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4qIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4qXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbipcbiogSlVTUEFZIFBsYXRmb3JtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiogZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuKlxuKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiogYmUgbGlhYmxlIGZvciBhbGwgZGFtYWdlcyB3aXRob3V0IGxpbWl0YXRpb24sIHdoaWNoIGlzIGNhdXNlZCBieSB0aGVcbiogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4qIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuKiBUaGUgZW5kIHVzZXIgaGFzIE5PIHJpZ2h0IHRvIGNsYWltIGFueSBpbmRlbW5pZmljYXRpb24gYmFzZWQgb24gaXRzIHVzZVxuKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbipcbiogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4qIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGhhbmRsZSA6ICh1aSwgY2FsbGJhY2spID0+IHtcbiAgICBpZiAoIXVpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmKHVpLnJlbmRlcikge1xuICAgICAgaWYgKHR5cGVvZiBBbmRyb2lkID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBbmRyb2lkIGlzIHVuZGVmaW5lZFwiKTtcblxuICAgICAgaWYgKHdpbmRvdy5fX09TICE9IFwiQU5EUk9JRFwiKVxuICAgICAgICByZXR1cm4gQW5kcm9pZC5SZW5kZXIodWkucmVuZGVyLCBudWxsKTtcbiAgICAgIGVsc2Uge1xuICAgICAgICBpZih0eXBlb2YgQW5kcm9pZC5nZXROZXdJRCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICByZXR1cm4gQW5kcm9pZC5SZW5kZXIoSlNPTi5zdHJpbmdpZnkodWkucmVuZGVyKSwgbnVsbCwgXCJmYWxzZVwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gQW5kcm9pZC5SZW5kZXIoSlNPTi5zdHJpbmdpZnkodWkucmVuZGVyKSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZih1aS5ydW5JblVJKSB7XG4gICAgICBBbmRyb2lkLnJ1bkluVUkodWkucnVuSW5VSSwgbnVsbCk7XG4gICAgfVxuICAgIGlmKHVpLmFkZFZpZXdUb1BhcmVudCkge1xuICAgICAgQW5kcm9pZC5hZGRWaWV3VG9QYXJlbnQodWkuYWRkVmlld1RvUGFyZW50LnBhcmVudElkLCBKU09OLnN0cmluZ2lmeSh1aS5hZGRWaWV3VG9QYXJlbnQuanN4KSwgdWkuYWRkVmlld1RvUGFyZW50LmluZGV4LCBudWxsKTtcbiAgICB9XG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/handler.js\n");

/***/ }),

/***/ "./src/helper.js":
/*!***********************!*\
  !*** ./src/helper.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\n// Following functions are used by WEB and IOS Render\nfunction cacheDimen(view) {\n  var props = view.props;\n  var dimen = {\n    w: props.w,\n    h: props.h,\n    x: props.x,\n    y: props.y,\n    gravity: props.gravity,\n    padding: props.padding,\n    orientation: props.orientation,\n    stroke: props.stroke ? props.stroke.split(\",\")[0] * 1 : 0\n  };\n  window.__VIEW_DIMENSIONS[props.id] = dimen;\n}\n\nfunction shouldMove(view) {\n  var props = view.props;\n  var dimen = {\n    w: props.w,\n    h: props.h,\n    x: props.x,\n    y: props.y\n  };\n  var cachedDimen = window.__VIEW_DIMENSIONS[props.id];\n  var changed = false;\n  if (!cachedDimen) return dimen;\n  for (var key in dimen) {\n    if (cachedDimen[key] != dimen[key]) {\n      dimen.id = props.id;\n      changed = true;\n    }\n  }\n  if (changed) return dimen;\n  return null;\n}\n\nfunction getOS() {\n  var userAgent = navigator.userAgent;\n  if (!userAgent) return console.error(new Error(\"UserAgent is null\"));\n  if (userAgent.includes(\"Android\") && userAgent.includes(\"Version\")) return \"ANDROID\";\n  if ((userAgent.includes(\"iPhone\") || userAgent.includes(\"iPad\")) && !userAgent.includes(\"Version\")) return \"IOS\";\n  return \"WEB\";\n}\n\nfunction clearViewExternals(view) {\n  if (!view) return;\n\n  delete window.__VIEWS[view.props.id];\n  delete window.__VIEW_DIMENSIONS[view.props.id];\n\n  if (__OBSERVERS[view.props.id]) delete window.__OBSERVERS[view.props.id];\n\n  view.children.forEach(clearViewExternals);\n}\n\n// use: clone( <thing to copy> ) returns <new copy>\nfunction clone(o, m) {\n  // return non object values\n  if ('object' !== (typeof o === \"undefined\" ? \"undefined\" : _typeof(o))) return o;\n  // m: a map of old refs to new object refs to stop recursion\n  if ('object' !== (typeof m === \"undefined\" ? \"undefined\" : _typeof(m)) || null === m) m = new WeakMap();\n  var n = m.get(o);\n  if ('undefined' !== typeof n) return n;\n  // shallow/leaf clone object\n  var c = Object.getPrototypeOf(o).constructor;\n  // TODO: specialize copies for expected built in types i.e. Date etc\n  switch (c) {\n    // shouldn't be copied, keep reference\n    case Boolean:\n    case Error:\n    case Function:\n    case Number:\n    case Promise:\n    case String:\n    case Symbol:\n    case WeakMap:\n    case WeakSet:\n      n = o;\n      break;\n    // array like/collection objects\n    case Array:\n      m.set(o, n = o.slice(0));\n      // recursive copy for child objects\n      n.forEach(function (v, i) {\n        if ('object' === (typeof v === \"undefined\" ? \"undefined\" : _typeof(v))) n[i] = clone(v, m);\n      });\n      break;\n    case ArrayBuffer:\n      m.set(o, n = o.slice(0));\n      break;\n    case DataView:\n      m.set(o, n = new c(clone(o.buffer, m), o.byteOffset, o.byteLength));\n      break;\n    case Map:\n    case Set:\n      m.set(o, n = new c(clone(Array.from(o.entries()), m)));\n      break;\n    case Int8Array:\n    case Uint8Array:\n    case Uint8ClampedArray:\n    case Int16Array:\n    case Uint16Array:\n    case Int32Array:\n    case Uint32Array:\n    case Float32Array:\n    case Float64Array:\n      m.set(o, n = new c(clone(o.buffer, m), o.byteOffset, o.length));\n      break;\n    // use built in copy constructor\n    case Date:\n    case RegExp:\n      m.set(o, n = new c(o));\n      break;\n    // fallback generic object copy\n    default:\n      m.set(o, n = Object.assign(new c(), o));\n      // recursive copy for child objects\n      for (c in n) {\n        if ('object' === _typeof(n[c])) n[c] = clone(n[c], m);\n      }}\n  return n;\n}\n\nfunction merge() {\n  var obj = {},\n      i = 0,\n      il = arguments.length,\n      key;\n  for (; i < il; i++) {\n    for (key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n  return obj;\n};\n\nmodule.exports = {\n  shouldMove: shouldMove,\n  cacheDimen: cacheDimen,\n  getOS: getOS,\n  merge: merge,\n  clearViewExternals: clearViewExternals,\n  clone: clone\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/helper.js\n");

/***/ }),

/***/ "./src/helpers/common/callbackMapper.js":
/*!**********************************************!*\
  !*** ./src/helpers/common/callbackMapper.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\nmodule.exports.map = function (fn) {\n  if (typeof window.__FN_INDEX !== 'undefined' && window.__FN_INDEX !== null) {\n    var proxyFnName = 'F' + window.__FN_INDEX;\n    if (window.__payload && window.__payload.service) {\n      proxyFnName = window.__payload.service + \"_\" + proxyFnName;\n    }\n    window.__PROXY_FN[proxyFnName] = fn;\n    window.__FN_INDEX++;\n    return proxyFnName;\n  } else {\n    throw new Error(\"Please initialise window.__FN_INDEX = 0 in index.js of your project.\");\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9jb21tb24vY2FsbGJhY2tNYXBwZXIuanM/ZGU4MyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFwIiwiZm4iLCJ3aW5kb3ciLCJfX0ZOX0lOREVYIiwicHJveHlGbk5hbWUiLCJfX3BheWxvYWQiLCJzZXJ2aWNlIiwiX19QUk9YWV9GTiIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLENBQWVDLEdBQWYsR0FBcUIsVUFBQ0MsRUFBRCxFQUFRO0FBQzVCLE1BQUcsT0FBT0MsT0FBT0MsVUFBZCxLQUE2QixXQUE3QixJQUE0Q0QsT0FBT0MsVUFBUCxLQUFzQixJQUFyRSxFQUEyRTtBQUMxRSxRQUFJQyxjQUFjLE1BQU1GLE9BQU9DLFVBQS9CO0FBQ0EsUUFBSUQsT0FBT0csU0FBUCxJQUFvQkgsT0FBT0csU0FBUCxDQUFpQkMsT0FBekMsRUFBaUQ7QUFDaERGLG9CQUFjRixPQUFPRyxTQUFQLENBQWlCQyxPQUFqQixHQUEyQixHQUEzQixHQUFpQ0YsV0FBL0M7QUFDQTtBQUNERixXQUFPSyxVQUFQLENBQWtCSCxXQUFsQixJQUFpQ0gsRUFBakM7QUFDRUMsV0FBT0MsVUFBUDtBQUNGLFdBQU9DLFdBQVA7QUFDQSxHQVJELE1BUU87QUFDTixVQUFNLElBQUlJLEtBQUosQ0FBVSxzRUFBVixDQUFOO0FBQ0E7QUFDRCxDQVpEIiwiZmlsZSI6Ii4vc3JjL2hlbHBlcnMvY29tbW9uL2NhbGxiYWNrTWFwcGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4gKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuICpcbiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbiAqXG4gKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiAqIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4gKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4gKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuICogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4gKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiAqIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4gKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuICovXG5cbm1vZHVsZS5leHBvcnRzLm1hcCA9IChmbikgPT4ge1xuXHRpZih0eXBlb2Ygd2luZG93Ll9fRk5fSU5ERVggIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5fX0ZOX0lOREVYICE9PSBudWxsKSB7XG5cdFx0dmFyIHByb3h5Rm5OYW1lID0gJ0YnICsgd2luZG93Ll9fRk5fSU5ERVg7XG5cdFx0aWYgKHdpbmRvdy5fX3BheWxvYWQgJiYgd2luZG93Ll9fcGF5bG9hZC5zZXJ2aWNlKXtcblx0XHRcdHByb3h5Rm5OYW1lID0gd2luZG93Ll9fcGF5bG9hZC5zZXJ2aWNlICsgXCJfXCIgKyBwcm94eUZuTmFtZTtcblx0XHR9XG5cdFx0d2luZG93Ll9fUFJPWFlfRk5bcHJveHlGbk5hbWVdID0gZm47XG5cdCAgXHR3aW5kb3cuX19GTl9JTkRFWCsrO1xuXHRcdHJldHVybiBwcm94eUZuTmFtZTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJQbGVhc2UgaW5pdGlhbGlzZSB3aW5kb3cuX19GTl9JTkRFWCA9IDAgaW4gaW5kZXguanMgb2YgeW91ciBwcm9qZWN0LlwiKTtcblx0fVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/helpers/common/callbackMapper.js\n");

/***/ }),

/***/ "./src/helpers/common/index.js":
/*!*************************************!*\
  !*** ./src/helpers/common/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n\tcallbackMapper: __webpack_require__(/*! ./callbackMapper */ \"./src/helpers/common/callbackMapper.js\")\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9jb21tb24vaW5kZXguanM/OWFkYyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2FsbGJhY2tNYXBwZXIiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxpQkFBaUJDLG1CQUFPQSxDQUFDLGdFQUFSO0FBREQsQ0FBakIiLCJmaWxlIjoiLi9zcmMvaGVscGVycy9jb21tb24vaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNyBcIkpVU1BBWSBUZWNobm9sb2dpZXNcIlxuKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuKlxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBKVVNQQVkgUGxhdGZvcm0uXG4qXG4qIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4qIGl0IGZvciBvbmx5IGVkdWNhdGlvbmFsIHB1cnBvc2VzIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsXG4qIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4qIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4qIEZvciBFbnRlcnByaXNlL0NvbW1lcmljYWwgbGljZW5zZXMsIGNvbnRhY3QgPGluZm9AanVzcGF5LmluPi5cbipcbiogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4qIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4qIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4qIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4qIEFCVVNFIG9mIHRoZSBMSUNFTlNFRCBTT0ZUV0FSRSBhbmQgc2hhbGwgSU5ERU1OSUZZIEpVU1BBWSBmb3Igc3VjaFxuKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2Vcbiogb2YgTGljZW5zZWQgU29mdHdhcmUuIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4qXG4qIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC5odG1sPi5cbiovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHRjYWxsYmFja01hcHBlciA6IHJlcXVpcmUoXCIuL2NhbGxiYWNrTWFwcGVyXCIpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/helpers/common/index.js\n");

/***/ }),

/***/ "./src/helpers/index.js":
/*!******************************!*\
  !*** ./src/helpers/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar helpers = {\n\tcommon: __webpack_require__(/*! ./common */ \"./src/helpers/common/index.js\")\n};\n\nif (false) {} else if (false) {} else {\n\thelpers.ios = __webpack_require__(/*! ./ios */ \"./src/helpers/ios/index.js\");\n}\n\nmodule.exports = helpers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9pbmRleC5qcz9jZTk2Il0sIm5hbWVzIjpbImhlbHBlcnMiLCJjb21tb24iLCJyZXF1aXJlIiwid2luZG93IiwiaW9zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQSxJQUFNQSxVQUFVO0FBQ2ZDLFNBQVNDLG1CQUFPQSxDQUFDLCtDQUFSO0FBRE0sQ0FBaEI7O0FBS0EsSUFBSUMsS0FBSixFQUE4QixFQUE5QixNQUdLLElBQUlBLEtBQUosRUFBMEIsRUFBMUIsTUFHQTtBQUNKSCxTQUFRSSxHQUFSLEdBQWNGLG1CQUFPQSxDQUFDLHlDQUFSLENBQWQ7QUFDQTs7QUFHREcsT0FBT0MsT0FBUCxHQUFpQk4sT0FBakIiLCJmaWxlIjoiLi9zcmMvaGVscGVycy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4qIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4qXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbipcbiogSlVTUEFZIFBsYXRmb3JtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiogZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuKlxuKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiogYmUgbGlhYmxlIGZvciBhbGwgZGFtYWdlcyB3aXRob3V0IGxpbWl0YXRpb24sIHdoaWNoIGlzIGNhdXNlZCBieSB0aGVcbiogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4qIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuKiBUaGUgZW5kIHVzZXIgaGFzIE5PIHJpZ2h0IHRvIGNsYWltIGFueSBpbmRlbW5pZmljYXRpb24gYmFzZWQgb24gaXRzIHVzZVxuKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbipcbiogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4qIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuKi9cblxuY29uc3QgaGVscGVycyA9IHtcblx0Y29tbW9uIDogcmVxdWlyZShcIi4vY29tbW9uXCIpXG59O1xuXG5cbmlmICh3aW5kb3cuX19PUyA9PSBcIkFORFJPSURcIikge1xuXHRoZWxwZXJzLmFuZHJvaWQgPSByZXF1aXJlKFwiLi9hbmRyb2lkXCIpXG59XG5lbHNlIGlmICh3aW5kb3cuX19PUyA9PSBcIldFQlwiKSB7XG5cdGhlbHBlcnMud2ViID0gcmVxdWlyZShcIi4vd2ViXCIpO1xufVxuZWxzZSB7XG5cdGhlbHBlcnMuaW9zID0gcmVxdWlyZShcIi4vaW9zXCIpO1xufVxuXG5cbm1vZHVsZS5leHBvcnRzID0gaGVscGVyczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/helpers/index.js\n");

/***/ }),

/***/ "./src/helpers/ios/colors.js":
/*!***********************************!*\
  !*** ./src/helpers/ios/colors.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = [\"#83FCE8\", \"#89F6E4\", \"#8FEFDF\", \"#96E9DB\", \"#9CE3D7\", \"#FEE9E6\", \"#FEF7E7\", \"#FFFAE5\", \"#F5FAEB\", \"#E5FFF5\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9pb3MvY29sb3JzLmpzPzk2MGIiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQUEsT0FBT0MsT0FBUCxHQUFpQixDQUNoQixTQURnQixFQUVoQixTQUZnQixFQUdoQixTQUhnQixFQUloQixTQUpnQixFQUtoQixTQUxnQixFQU1oQixTQU5nQixFQU9oQixTQVBnQixFQVFoQixTQVJnQixFQVNoQixTQVRnQixFQVVoQixTQVZnQixDQUFqQiIsImZpbGUiOiIuL3NyYy9oZWxwZXJzL2lvcy9jb2xvcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNyBcIkpVU1BBWSBUZWNobm9sb2dpZXNcIlxuKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuKlxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBKVVNQQVkgUGxhdGZvcm0uXG4qXG4qIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4qIGl0IGZvciBvbmx5IGVkdWNhdGlvbmFsIHB1cnBvc2VzIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsXG4qIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4qIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4qIEZvciBFbnRlcnByaXNlL0NvbW1lcmljYWwgbGljZW5zZXMsIGNvbnRhY3QgPGluZm9AanVzcGF5LmluPi5cbipcbiogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4qIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4qIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4qIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4qIEFCVVNFIG9mIHRoZSBMSUNFTlNFRCBTT0ZUV0FSRSBhbmQgc2hhbGwgSU5ERU1OSUZZIEpVU1BBWSBmb3Igc3VjaFxuKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2Vcbiogb2YgTGljZW5zZWQgU29mdHdhcmUuIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4qXG4qIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC5odG1sPi5cbiovXG5cbm1vZHVsZS5leHBvcnRzID0gW1xuXHRcIiM4M0ZDRThcIixcblx0XCIjODlGNkU0XCIsXG5cdFwiIzhGRUZERlwiLFxuXHRcIiM5NkU5REJcIixcblx0XCIjOUNFM0Q3XCIsXG5cdFwiI0ZFRTlFNlwiLFxuXHRcIiNGRUY3RTdcIixcblx0XCIjRkZGQUU1XCIsXG5cdFwiI0Y1RkFFQlwiLFxuXHRcIiNFNUZGRjVcIlxuXVxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/helpers/ios/colors.js\n");

/***/ }),

/***/ "./src/helpers/ios/flattenObject.js":
/*!******************************************!*\
  !*** ./src/helpers/ios/flattenObject.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = function flattenObject(ob) {\n  var toReturn = {};\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n    if (_typeof(ob[i]) == 'object') {\n      var flatObject = flattenObject(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        toReturn[x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n\n  return toReturn;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9pb3MvZmxhdHRlbk9iamVjdC5qcz85MDZmIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmbGF0dGVuT2JqZWN0Iiwib2IiLCJ0b1JldHVybiIsImkiLCJoYXNPd25Qcm9wZXJ0eSIsImZsYXRPYmplY3QiLCJ4Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsYUFBVCxDQUF1QkMsRUFBdkIsRUFBMkI7QUFDMUMsTUFBSUMsV0FBVyxFQUFmO0FBQ0EsT0FBSyxJQUFJQyxDQUFULElBQWNGLEVBQWQsRUFBa0I7QUFDaEIsUUFBSSxDQUFDQSxHQUFHRyxjQUFILENBQWtCRCxDQUFsQixDQUFMLEVBQTJCO0FBQzNCLFFBQUksUUFBUUYsR0FBR0UsQ0FBSCxDQUFSLEtBQWtCLFFBQXRCLEVBQWdDO0FBQzlCLFVBQUlFLGFBQWFMLGNBQWNDLEdBQUdFLENBQUgsQ0FBZCxDQUFqQjtBQUNBLFdBQUssSUFBSUcsQ0FBVCxJQUFjRCxVQUFkLEVBQTBCO0FBQ3hCLFlBQUksQ0FBQ0EsV0FBV0QsY0FBWCxDQUEwQkUsQ0FBMUIsQ0FBTCxFQUFtQztBQUNuQ0osaUJBQVNJLENBQVQsSUFBY0QsV0FBV0MsQ0FBWCxDQUFkO0FBQ0Q7QUFDRixLQU5ELE1BTU87QUFDTEosZUFBU0MsQ0FBVCxJQUFjRixHQUFHRSxDQUFILENBQWQ7QUFDRDtBQUNGOztBQUVELFNBQU9ELFFBQVA7QUFDRCxDQWhCRCIsImZpbGUiOiIuL3NyYy9oZWxwZXJzL2lvcy9mbGF0dGVuT2JqZWN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiogSlVTUEFZIFRlY2hub2xvZ2llcyBQdnQuIEx0ZC4gW2h0dHBzOi8vd3d3Lmp1c3BheS5pbl1cbipcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuKlxuKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuKiBQdWJsaWMgTGljZW5zZSAoR05VIEFHUEwpIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLFxuKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4qXG4qIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBUaGUgZW5kIHVzZXIgd2lsbFxuKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiogZGFtYWdlcywgY2xhaW1zLCBjb3N0LCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leSBmZWUgY2xhaW1lZCBvbiBKdXNwYXkuXG4qIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4qIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuKlxuKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZsYXR0ZW5PYmplY3Qob2IpIHtcbiAgdmFyIHRvUmV0dXJuID0ge307XG4gIGZvciAodmFyIGkgaW4gb2IpIHtcbiAgICBpZiAoIW9iLmhhc093blByb3BlcnR5KGkpKSBjb250aW51ZTtcbiAgICBpZiAoKHR5cGVvZiBvYltpXSkgPT0gJ29iamVjdCcpIHtcbiAgICAgIHZhciBmbGF0T2JqZWN0ID0gZmxhdHRlbk9iamVjdChvYltpXSk7XG4gICAgICBmb3IgKHZhciB4IGluIGZsYXRPYmplY3QpIHtcbiAgICAgICAgaWYgKCFmbGF0T2JqZWN0Lmhhc093blByb3BlcnR5KHgpKSBjb250aW51ZTtcbiAgICAgICAgdG9SZXR1cm5beF0gPSBmbGF0T2JqZWN0W3hdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0b1JldHVybltpXSA9IG9iW2ldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0b1JldHVybjtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/helpers/ios/flattenObject.js\n");

/***/ }),

/***/ "./src/helpers/ios/index.js":
/*!**********************************!*\
  !*** ./src/helpers/ios/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n\tparseParams: __webpack_require__(/*! ./parseParams */ \"./src/helpers/ios/parseParams.js\")\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9pb3MvaW5kZXguanM/OWRkYSJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicGFyc2VQYXJhbXMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxjQUFjQyxtQkFBT0EsQ0FBQyx1REFBUjtBQURFLENBQWpCIiwiZmlsZSI6Ii4vc3JjL2hlbHBlcnMvaW9zL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiogSlVTUEFZIFRlY2hub2xvZ2llcyBQdnQuIEx0ZC4gW2h0dHBzOi8vd3d3Lmp1c3BheS5pbl1cbipcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuKlxuKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuKiBQdWJsaWMgTGljZW5zZSAoR05VIEFHUEwpIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLFxuKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4qXG4qIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBUaGUgZW5kIHVzZXIgd2lsbFxuKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiogZGFtYWdlcywgY2xhaW1zLCBjb3N0LCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leSBmZWUgY2xhaW1lZCBvbiBKdXNwYXkuXG4qIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4qIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuKlxuKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0cGFyc2VQYXJhbXMgOiByZXF1aXJlKFwiLi9wYXJzZVBhcmFtc1wiKSxcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/helpers/ios/index.js\n");

/***/ }),

/***/ "./src/helpers/ios/parseParams.js":
/*!****************************************!*\
  !*** ./src/helpers/ios/parseParams.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _colors = __webpack_require__(/*! ./colors */ \"./src/helpers/ios/colors.js\");\n\nvar _colors2 = _interopRequireDefault(_colors);\n\nvar _flattenObject = __webpack_require__(/*! ./flattenObject */ \"./src/helpers/ios/flattenObject.js\");\n\nvar _flattenObject2 = _interopRequireDefault(_flattenObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\nvar callbackMapper = __webpack_require__(/*! ../common/callbackMapper */ \"./src/helpers/common/callbackMapper.js\");\n\nvar getSetType = 1;\n\n/**\n * Checks the native set window.__DEVICE_DETAILS.mystique_version\n * and checks if mystique version is greater than the passed version.\n * @param {string} version number to be checked against. If passed empty returns true.\n * @return {bool} true if mystique version is greater than passed version else false. Defaults to true.\n */\nfunction isMystiqueVersionGreaterThan(version) {\n  if (window.__DEVICE_DETAILS && window.__DEVICE_DETAILS.mystique_version) {\n    var sdkVersion = parseFloat(window.__DEVICE_DETAILS.mystique_version);\n    if (sdkVersion > 0) {\n      return sdkVersion > parseFloat(version) ? true : false;\n    }\n  }\n  return false;\n}\n\nfunction convertColorToRgba(color) {\n  color = rWS(cS(color));\n\n  var values;\n  var alpha = \"1.00\";\n\n  if (color.length >= 8) {\n    alpha = parseInt(color.substring(1, 3), 16);\n    alpha = (alpha / 255).toFixed(2);\n    color = color.substring(3, 9);\n  } else {\n    color = color.substring(1, color.length);\n  }\n\n  color = convertHexToRgb(rWS(color));\n  values = color.split(',');\n\n  return {\n    r: rWS(values[0]),\n    g: rWS(values[1]),\n    b: rWS(values[2]),\n    a: alpha\n  };\n}\n\nfunction convertHexToRgb(hex) {\n  var r = (parseInt(hex.substring(0, 2), 16) / 255).toFixed(2);\n  var g = (parseInt(hex.substring(2, 4), 16) / 255).toFixed(2);\n  var b = (parseInt(hex.substring(4, 6), 16) / 255).toFixed(2);\n\n  return r + \",\" + g + \",\" + b;\n}\n\nfunction cS(value) {\n  return value ? value + '' : \"\";\n}\n\nfunction rWS(value) {\n  return value.replace(/ /g, '');\n}\n\nfunction self_sizeFromDictionary(width, height) {\n  window.__SIZE_INDEX++;\n\n  return {\n    \"return\": \"size\" + window.__SIZE_INDEX,\n    \"invokeOn\": \"self\",\n    \"methodName\": \"sizeFromDictionary:\",\n    \"values\": [{\n      \"width\": width,\n      \"height\": height\n    }]\n  };\n}\n\nfunction self_setCursorPosition(id, position) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"methodName\": \"setCursorPosition:\",\n    \"values\": [{\n      \"viewId\": id,\n      \"position\": position\n    }]\n  };\n}\n\nfunction this_setContentSize() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setContentSize:\",\n    \"values\": [{ \"name\": \"size\" + window.__SIZE_INDEX, \"computed\": \"true\", \"type\": \"size\" }]\n  };\n}\n\nfunction UIColor_colorWithRGBA(r, g, b, a) {\n  window.__COLOR_INDEX++;\n  return {\n    \"return\": \"color\" + window.__COLOR_INDEX,\n    \"invokeOn\": \"UIColor\",\n    \"methodName\": \"colorWithRed:green:blue:alpha:\",\n    \"values\": [{ \"name\": r, \"type\": \"f\" }, { \"name\": g, \"type\": \"f\" }, { \"name\": b, \"type\": \"f\" }, { \"name\": a, \"type\": \"f\" }]\n  };\n}\n\nfunction this_pivotX(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setPivotX:\",\n    \"values\": [{ \"name\": value + \"\", \"type\": \"s\" }]\n  };\n}\n\nfunction this_pivotY(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setPivotY:\",\n    \"values\": [{ \"name\": value + \"\", \"type\": \"s\" }]\n  };\n}\n\nfunction self_animate_translation(obj, props) {\n  obj.values[0].properties = [{\n    \"key\": \"frame\",\n    \"values\": {\n      \"x\": props.x,\n      \"y\": props.y,\n      \"width\": props.w,\n      \"height\": props.h\n    }\n  }];\n\n  return obj;\n}\n\nfunction self_animate_rotation(obj, props) {\n  obj.values[0].properties = [{\n    \"key\": \"angle\",\n    \"values\": {}\n  }];\n\n  return obj;\n}\n\nfunction this_setTranslationZ(params) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"translationZ:\",\n    \"values\": [{ \"name\": params, type: \"s\" }]\n  };\n}\n\nfunction self_animate(props) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"methodName\": \"animate:\",\n    \"values\": [{\n      \"json\": props.json,\n      \"viewTag\": props.id\n    }]\n  };\n}\n\nfunction this_setBackgroundColor() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setBackgroundColor:\",\n    \"values\": [{ \"name\": \"color\" + window.__COLOR_INDEX, \"computed\": \"true\" }]\n  };\n}\n\nfunction this_superview() {\n  var currViewIndex = window.__VIEW_INDEX;\n\n  window.__VIEW_INDEX++;\n\n  return {\n    \"return\": \"view\" + window.__VIEW_INDEX,\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + currViewIndex,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"superview\"\n  };\n}\n\nfunction this_scrollToIndex(index) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"scrollToIndex:\",\n    \"values\": [{ \"name\": index, type: \"i\" }]\n  };\n}\n\nfunction UIView_bounds() {\n  window.__RECT_INDEX++;\n\n  return {\n    \"return\": \"rect\" + window.__RECT_INDEX,\n    \"fromStore\": \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": \"UIView\",\n    \"methodName\": \"bounds\"\n  };\n}\n\nfunction this_setEnabled(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setEnabled:\",\n    \"values\": [{ \"name\": mode, \"type\": \"i\" }]\n  };\n}\n\nfunction this_scrollEnabled(status) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTableView\",\n    \"methodName\": \"setScrollEnabled:\",\n    \"values\": [{ \"name\": status, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setAutoCorrectionType(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setAutocorrectionType:\",\n    \"values\": [{ \"name\": mode, \"type\": \"i\" }]\n  };\n}\n\nfunction this_setKeyboardType(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setKeyboardType:\",\n    \"values\": [{ \"name\": mode, \"type\": \"i\" }]\n  };\n}\n\nfunction this_setAutoCapitalizationType(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setAutocapitalizationTypes:\",\n    \"values\": [{ \"name\": mode, \"type\": \"i\" }]\n  };\n}\n\nfunction this_setStatusBarStyle(mode) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"methodName\": \"setStatusBarStyle:\",\n    \"values\": [{ \"name\": mode, \"type\": \"s\" }]\n  };\n}\n\nfunction this_becomeFirstResponder(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"focus:\",\n    \"values\": [{ \"name\": mode, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setOnItemClick(callback) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setOnItemClick:\",\n    \"values\": [{ \"name\": callbackMapper.map(callback), \"type\": \"s\" }]\n  };\n}\n\nfunction this_setOnFocusCallback(callback) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setOnFocusCallback:\",\n    \"values\": [{ \"name\": callbackMapper.map(callback), \"type\": \"s\" }]\n  };\n}\n\nfunction this_setOnMerchantViewHeightChangeCallback(callback) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setOnMerchantViewHeightChange:\",\n    \"values\": [{ \"name\": callbackMapper.map(callback), \"type\": \"s\" }]\n  };\n}\n\nfunction this_setOn(enabled) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setOn:animated:\",\n    \"values\": [{ \"name\": enabled, \"type\": \"i\" }, { \"name\": \"1\", \"type\": \"i\" }]\n  };\n}\n\nfunction this_showVerticalScrollBar(enabled) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setShowsVerticalScrollIndicator:\",\n    \"values\": [{ \"name\": enabled, \"type\": \"i\" }]\n  };\n}\n\nfunction this_setSecureTextEntry(enabled) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setSecureTextEntry:\",\n    \"values\": [{ \"name\": enabled, \"type\": \"i\" }]\n  };\n}\n\nfunction UIImage_imageNamed(image) {\n  window.__IMAGE_INDEX++;\n\n  return {\n    \"return\": \"image\" + window.__IMAGE_INDEX,\n    \"invokeOn\": \"self\",\n    \"methodName\": \"imageNamed:\",\n    \"values\": [{ \"name\": image, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setImage() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setImage:\",\n    \"values\": [{ \"name\": \"image\" + window.__IMAGE_INDEX, \"computed\": \"true\" }]\n  };\n}\n\nfunction self_rectFromDictionary(x, y, w, h) {\n  window.__RECT_INDEX++;\n\n  return {\n    \"return\": \"rect\" + window.__RECT_INDEX,\n    \"invokeOn\": \"self\",\n    \"methodName\": \"rectFromDictionary:\",\n    \"values\": [{\n      \"x\": x,\n      \"y\": y,\n      \"width\": w,\n      \"height\": h\n    }]\n  };\n}\n\nfunction this_updateLayoutParams(config) {\n  var data = {\n    \"width\": config.width,\n    \"height\": config.height,\n    \"margin\": config.margin,\n    \"padding\": config.padding,\n    \"weight\": config.weight,\n    \"gravity\": config.gravity,\n    \"visibility\": config.visibility,\n    \"orientation\": config.orientation,\n    \"alignment_rules\": config.alignment_rules\n  };\n  if (data.alignment_rules && data.alignment_rules.length == 0) {\n    delete data.alignment_rules;\n  }\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"this\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"methodName\": \"updateLayoutParams:\",\n    \"values\": [{\n      \"name\": JSON.stringify(data),\n      \"type\": 's'\n    }]\n  };\n}\n\nfunction this_setPadding(padding) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": getSetType ? \"this\" : \"MJPViewAL\",\n    \"methodName\": \"setPaddingLeft:Top:Right:Bottom:\",\n    \"values\": padding.split(',').map(makeUnit)\n  };\n}\n\nfunction this_setMargin(margin) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": getSetType ? \"this\" : \"MJPViewAL\",\n    \"methodName\": \"setMarginLeft:Top:Right:Bottom:\",\n    \"values\": margin.split(',').map(makeUnit)\n  };\n}\n\nfunction makeUnit(v, i, arr) {\n  return { name: v + '', type: 'f' };\n}\n\nfunction this_setHeight(height) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPViewAL\",\n    \"methodName\": \"setHeight:\",\n    \"values\": [{ \"name\": height + '', \"type\": 'i' }]\n  };\n}\n\nfunction this_setWidth(width) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPViewAL\",\n    \"methodName\": \"setWidth:\",\n    \"values\": [{ \"name\": width + '', \"type\": 'i' }]\n  };\n}\n\nfunction this_setFrame() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setFrame:\",\n    \"values\": [{ \"name\": \"rect\" + window.__RECT_INDEX, \"computed\": \"true\", \"type\": \"rect\" }]\n  };\n}\n\nfunction self_alignToParent(type, values) {\n  window.__POINT_INDEX++;\n  return {\n    \"return\": \"point\" + window.__POINT_INDEX,\n    \"invokeOn\": \"self\",\n    \"methodName\": \"alignToParent:\",\n    \"values\": [{\n      \"name\": type,\n      \"x\": values.x,\n      \"y\": values.y,\n      \"yOffset\": values.yOffset,\n      \"xOffset\": values.xOffset\n    }]\n  };\n}\n\nfunction this_setCenter() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setCenter:\",\n    \"values\": [{ \"name\": \"point\" + window.__POINT_INDEX, \"computed\": \"true\", \"type\": \"point\" }]\n  };\n}\n\nfunction this_setText(text) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setText:\",\n    \"values\": [{ \"name\": encodeURI(text), \"type\": \"s\" }]\n  };\n}\n\nfunction this_setRegularExpression(text) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setRegularExpression:\",\n    \"values\": [{ \"name\": text, \"type\": \"s\" }]\n  };\n}\n\nfunction getEncodedData(text) {\n  var encodedString = text;\n  if (isMystiqueVersionGreaterThan(\"1\")) {\n    encodedString = btoa(encodeURIComponent(text));\n  } else if (isMystiqueVersionGreaterThan(\"0\")) {\n    encodedString = btoa(text.replace(/[^\\x00-\\x7F]/g, \"\"));\n  }\n  return encodedString;\n}\n\nfunction this_setHTMLText(text) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setHtmlText:\",\n    \"values\": [{ \"name\": getEncodedData(text),\n      \"type\": \"s\"\n    }]\n  };\n}\n\nfunction this_setPlaceholder(text) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setPlaceholder:\",\n    \"values\": [{ \"name\": text, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setPlaceholderProperties(data) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTextView\",\n    \"methodName\": \"setPlaceholderProperties:\",\n    \"values\": [{ \"name\": data, \"type\": \"s\" }]\n  };\n}\n\nfunction UIFont_systemFontOfSize(size) {\n  window.__FONT_INDEX++;\n\n  return {\n    \"return\": \"font\" + window.__FONT_INDEX,\n    \"invokeOn\": \"UIFont\",\n    \"methodName\": \"systemFontOfSize:\",\n    \"values\": [{ \"name\": size, \"type\": \"f\" }]\n  };\n}\n\nfunction UIFont_fontWithName(name, size) {\n  window.__FONT_INDEX++;\n  return {\n    \"return\": \"font\" + window.__FONT_INDEX,\n    \"invokeOn\": \"MJPFont\",\n    \"methodName\": \"fontWithName:size:\",\n    \"values\": [{ \"name\": name, \"type\": \"s\" }, { \"name\": size.length > 0 ? size : \"14\", \"type\": \"f\" }]\n  };\n}\n\nfunction this_setFont() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setFont:\",\n    \"values\": [{\n      \"name\": \"font\" + window.__FONT_INDEX,\n      \"computed\": \"true\"\n    }]\n  };\n}\n\nfunction this_sizeToFit() {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"sizeToFit\"\n  };\n}\n\nfunction UIFont_boldSystemFontOfSize(size) {\n  window.__FONT_INDEX++;\n\n  return {\n    \"return\": \"font\" + window.__FONT_INDEX,\n    \"invokeOn\": \"UIFont\",\n    \"methodName\": \"boldSystemFontOfSize:\",\n    \"values\": [{ \"name\": size, \"type\": \"f\" }]\n  };\n}\n\nfunction UIFont_systemFontOfSizeWeight(size, weight) {\n  window.__FONT_INDEX++;\n\n  return {\n    \"return\": \"font\" + window.__FONT_INDEX,\n    \"invokeOn\": \"UIFont\",\n    \"methodName\": \"systemFontOfSize:weight:\",\n    \"values\": [{ \"name\": size, \"type\": \"f\" }, { \"name\": weight, \"type\": \"f\" }]\n  };\n}\n\nfunction this_setLineBreakMode(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setLineBreakMode:\",\n    \"values\": [{ \"name\": mode, \"type\": \"i\" }]\n  };\n}\n\nfunction this_setNumberOfLines(count) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setNumberOfLines:\",\n    \"values\": [{ \"name\": count, \"type\": \"i\" }]\n  };\n}\n\nfunction this_setTextAlignment(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setGravity:\",\n    \"values\": [{ \"name\": mode, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setTextColor() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setTextColor:\",\n    \"values\": [{ \"name\": 'color' + window.__COLOR_INDEX, \"computed\": \"true\" }]\n  };\n}\n\nfunction this_setTextLengthLimit(length) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setTextLengthLimit:\",\n    \"values\": [{ \"name\": length + \"\", \"type\": \"i\" }]\n  };\n}\n\nfunction this_removeCell(cellIndex) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"removeObjectAtIndex:\",\n    \"values\": [{ \"name\": cellIndex + \"\", \"type\": \"i\" }]\n  };\n}\n\nfunction UIColor_fromLiteral(color) {\n  window.__COLOR_INDEX++;\n\n  return {\n    \"return\": \"color\" + window.__COLOR_INDEX,\n    \"invokeOn\": \"UIColor\",\n    \"methodName\": color + \"Color\"\n  };\n}\n\nfunction this_layer() {\n  window.__LAYER_INDEX++;\n\n  return {\n    \"return\": \"layer\" + window.__LAYER_INDEX,\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"layer\"\n  };\n}\n\nfunction setCornerRadius(radius) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setMJPCornerRadius:\",\n    \"values\": [{ \"name\": radius + \"\", \"type\": \"f\" }]\n  };\n}\n\nfunction setBorderWidth(width) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setMJPBorderWidth:\",\n    \"values\": [{ \"name\": width + \"\", \"type\": \"f\" }]\n  };\n}\n\nfunction setBorderColor() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setMJPBorderColor:\",\n    \"values\": [{ \"name\": \"color\" + window.__COLOR_INDEX, \"computed\": \"true\", type: \"cgcolor\" }]\n  };\n}\n\nfunction this_setShadow(id, shadowOffset, shadowBlur, shadowSpread, shadowColor, shadowOpacity) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setShadow:\",\n    \"values\": [{\n      \"name\": JSON.stringify({\n        \"viewId\": id,\n        \"color\": shadowColor,\n        \"blur\": shadowBlur,\n        \"opacity\": shadowOpacity,\n        \"offset\": shadowOffset,\n        \"spread\": shadowSpread\n      }),\n      \"type\": \"s\"\n    }]\n  };\n}\n\nfunction this_setGradient(data) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setGradient:\",\n    \"values\": [{\n      \"name\": data,\n      \"type\": \"s\"\n    }]\n  };\n}\n\nfunction this_setBackgroundImage() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setBackgroundImage:\",\n    \"values\": [{\n      \"name\": \"image\" + window.__IMAGE_INDEX,\n      \"computed\": \"true\"\n    }]\n  };\n}\n\nfunction _UILabelLayer_setMasksToBounds() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": \"true\",\n    \"storeKey\": \"layer\" + window.__LAYER_INDEX,\n    \"invokeOn\": \"_UILabelLayer\",\n    \"methodName\": \"setMJPMasksToBounds:\",\n    \"values\": [{ \"name\": \"1\", type: \"i\" }]\n  };\n}\n\nfunction this_setTag(tag) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setTag:\",\n    \"values\": [{ \"name\": tag, type: \"i\" }]\n  };\n}\n\nfunction self_getViewFromTag(tag) {\n  window.__VIEW_INDEX++;\n\n  return {\n    \"return\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": \"self\",\n    \"methodName\": \"getViewFromTag:\",\n    \"values\": [{ \"name\": tag, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setImageURL(id, url, placeholder) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"methodName\": \"setImageWithUrl::::\",\n    \"values\": [{ \"name\": \"\" + id, \"type\": \"s\" }, { \"name\": url, \"type\": \"s\" }, { \"name\": placeholder, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setGif(id, imageName) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"methodName\": \"loadGif:::\",\n    \"values\": [{ \"name\": \"\" + id, \"type\": \"s\" }, { \"name\": imageName, \"type\": \"s\" }]\n  };\n}\n\nfunction this_startGif() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"startGIF\"\n  };\n}\n\nfunction this_stopGif() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"stopGIF\"\n  };\n}\n\nfunction self_setAlpha(alpha) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setAlpha:\",\n    \"values\": [{ \"name\": String(alpha), type: \"f\" }]\n  };\n}\n\nfunction this_setHidden(hidden) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setHidden:\",\n    \"values\": [{ \"name\": hidden === \"gone\" || hidden === \"invisible\" ? \"1\" : \"0\", type: \"i\" }]\n  };\n}\n\nfunction this_setTextProperties(data) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTextView\",\n    \"methodName\": \"setTextProperties:\",\n    \"values\": [{ \"name\": data, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setLetterSpacing(data) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPEditText\",\n    \"methodName\": \"setLetterSpacing:\",\n    \"values\": [{ \"name\": data, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setLineSpacing(data) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPLabel\",\n    \"methodName\": \"setLineSpacing:\",\n    \"values\": [{ \"name\": data, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setCaretColor() {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setTintColor:\",\n    \"values\": [{ \"name\": 'color' + window.__COLOR_INDEX, \"computed\": \"true\" }]\n  };\n}\n\nfunction this_scrollTo(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTableView\",\n    \"methodName\": \"scrollTo:\",\n    \"values\": [{ \"name\": value, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setExpand(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPExpandableCell\",\n    \"methodName\": \"setExpand:\",\n    \"values\": [{ \"name\": value, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setExpandDuration(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPExpandableCell\",\n    \"methodName\": \"setExpandDuration:\",\n    \"values\": [{ \"name\": value, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setExpandAlpha(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPExpandableCell\",\n    \"methodName\": \"setExpandAlpha:\",\n    \"values\": [{ \"name\": value, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setSwype(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTableView\",\n    \"methodName\": \"setSwype:\",\n    \"values\": [{ \"name\": value ? \"true\" : \"false\", \"type\": \"s\" }]\n  };\n}\n\nfunction this_setUserInteraction(hidden) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setUserInteractionEnabled:\",\n    \"values\": [{ \"name\": hidden === \"true\" ? \"1\" : \"0\", type: \"i\" }]\n  };\n}\n\nfunction this_setSeparator(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setSeparator:\",\n    \"values\": [{ \"name\": value, type: \"s\" }]\n  };\n}\n\nfunction this_setSeparatorRepeat(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setSeparatorRepeat:\",\n    \"values\": [{ \"name\": value, type: \"s\" }]\n  };\n}\n\nfunction this_setSwipeCallback(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTableView\",\n    \"methodName\": \"setSwipeCallback:\",\n    \"values\": [{ \"name\": value, type: \"s\" }]\n  };\n}\n\nfunction this_setupList(listData, listItem) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPRepeatTableView\",\n    \"methodName\": \"setupList::\",\n    \"values\": [{ \"name\": listData, type: \"s\" }, { \"name\": listItem, type: \"s\" }]\n  };\n}\n\nfunction this_inlineAnimation(config) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": \"this\",\n    \"methodName\": \"setInlineAnimation:\",\n    \"values\": [{ \"name\": modifyTranslation(config), type: \"s\" }]\n  };\n}\n\nfunction modifyTranslation(config) {\n  var x = config.x || \"0\";\n  var y = config.y || \"0\";\n  var animationArray = JSON.parse(config.inlineAnimation);\n  var animationArray = animationArray.map(function (a) {\n    if (a.hasOwnProperty(\"fromX\")) {\n      a.fromX = parseInt(a.fromX) + parseInt(x) + '';\n      if (!a.hasOwnProperty(\"toX\")) {\n        a.toX = 0 + parseInt(x) + '';\n      }\n    }\n    if (a.hasOwnProperty(\"toX\")) {\n      a.toX = parseInt(a.toX) + parseInt(x) + '';\n    }\n    if (a.hasOwnProperty(\"fromY\")) {\n      a.fromY = parseInt(a.fromY) + parseInt(y) + '';\n      if (!a.hasOwnProperty(\"toY\")) {\n        a.toY = 0 + parseInt(y) + '';\n      }\n    }\n    if (a.hasOwnProperty(\"toY\")) {\n      a.toY = parseInt(a.toY) + parseInt(y) + '';\n    }\n    return a;\n  });\n  return JSON.stringify(animationArray);\n}\n\nfunction this_setCloseSwipe(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTableView\",\n    \"methodName\": \"closeSwipe:\",\n    \"values\": [{ \"name\": value ? \"true\" : \"false\", type: \"s\" }]\n  };\n}\n\nfunction this_setEnableSwype(value) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"MJPTableView\",\n    \"methodName\": \"setSwipeEnabled:\",\n    \"values\": [{ \"name\": value ? \"true\" : \"false\", type: \"s\" }]\n  };\n}\n\nfunction this_bringSubViewToFront(params) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"methodName\": \"bringSubViewToFront:\",\n    \"values\": [{ \"name\": params, type: \"s\" }]\n  };\n}\n\nfunction this_setContentMode(mode) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setContentMode:\",\n    \"values\": [{ \"name\": mode, type: \"i\" }]\n  };\n}\n\nfunction this_adjustViewWithKeyboard(status) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setAdjustViewWithKeyboard:\",\n    \"values\": [{ \"name\": status, type: \"s\" }]\n  };\n}\n\nfunction self_setPopupMenu(popupMenu, onMenuItemClick) {\n  var callback = callbackMapper.map(onMenuItemClick);\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"methodName\": \"createActionSheetWithTitles::\",\n    \"values\": [{ \"name\": popupMenu, \"type\": \"s\" }, { \"name\": callback, \"type\": \"s\" }]\n  };\n}\n\nfunction this_setCornerCurves(corner) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": \"false\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": \"this\",\n    \"methodName\": \"setCornerCurves:\",\n    \"values\": [{ \"name\": corner + \"\", \"type\": \"s\" }]\n  };\n}\n\nfunction this_setClipsToBounds(bounds) {\n  return {\n    \"return\": \"false\",\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"setClipsToBounds:\",\n    \"values\": [{ \"name\": bounds ? \"1\" : \"0\", type: \"i\" }]\n  };\n}\n\nfunction this_fontWithName(name) {\n  window.__FONT_INDEX++;\n  return {\n    \"return\": \"font\" + window.__FONT_INDEX,\n    \"fromStore\": getSetType ? \"false\" : \"true\",\n    \"storeKey\": \"view\" + window.__VIEW_INDEX,\n    \"invokeOn\": getSetType ? \"this\" : \"UIView\",\n    \"methodName\": \"fontWithName:\",\n    \"values\": [{ \"name\": name, \"type\": \"s\" }]\n  };\n}\n\nfunction UIColor_setColor(color) {\n  var values = void 0;\n  var alpha = \"1.00\";\n\n  if (color.length >= 8) {\n    alpha = parseInt(color.substring(1, 3), 16);\n    alpha = (alpha / 255).toFixed(2);\n    color = color.substring(3, 9);\n  } else {\n    color = color.substring(1, color.length);\n  }\n\n  color = convertHexToRgb(rWS(color));\n  values = color.split(',');\n\n  var r = rWS(values[0]);\n  var g = rWS(values[1]);\n  var b = rWS(values[2]);\n  var a = alpha;\n\n  return UIColor_colorWithRGBA(r, g, b, a);\n}\n\nfunction transformKeys(config) {\n  var keys = Object.keys(config);\n  for (var i = 0; i < keys.length; i++) {\n    if (typeof config[keys[i]] == \"undefined\" || config[keys[i]] == null) {\n      delete config[keys[i]];\n    } else if (typeof config[keys[i]] == \"function\") {\n      config[keys[i]] = callbackMapper.map(config[keys[i]]);\n    } else {\n      if (keys[i] !== \"id\" && keys[i] !== \"__filename\" && keys[i] !== \"currChildOffset\" && keys[i] !== \"methods\" && keys[i] !== \"swipeEnable\" && keys[i] !== \"viewPager\" && keys[i] !== \"tableView\") {\n\n        delete config[keys[i]];\n      }\n    }\n  }\n\n  return config;\n}\n\nfunction generateType(type, config) {\n  var modifiedType = \"mJPView\";\n  switch (type) {\n    case \"editText\":\n      {\n        modifiedType = \"mJPEditText\";\n      }\n      break;\n    case \"imageView\":\n      {\n        modifiedType = \"mJPImageView\";\n      }\n      break;\n    case \"textView\":\n      {\n        modifiedType = \"mJPTextView\";\n      }\n      break;\n    case \"scrollView\":\n      {\n        if (config.hasOwnProperty('height') && config.height == 'wrap_content') {\n          modifiedType = \"mJPScrollView\";\n        } else {\n          modifiedType = \"mJPScrollView\";\n        }\n        config.orientation = \"vertical\";\n        break;\n      }\n    case \"horizontalScrollView\":\n      {\n        if (config.hasOwnProperty('width') && config.width == 'wrap_content') {\n          modifiedType = \"mJPScrollView\";\n        } else {\n          modifiedType = \"mJPScrollView\";\n        }\n        config.orientation = \"horizontal\";\n        break;\n      }\n      break;\n    case \"tableView\":\n    case \"listView\":\n      {\n        if (config.hasOwnProperty(\"listData\") && config.hasOwnProperty(\"listItem\")) {\n          modifiedType = \"mJPRepeatTableView\";\n        } else {\n          modifiedType = \"mJPTableView\";\n        }\n      }\n      break;\n    case \"collectionView\":\n    case \"viewPager\":\n      {\n        modifiedType = \"mJPCollectionView\";\n      }\n      break;\n    case \"progressBar\":\n      {\n        modifiedType = \"mJPActivityIndicator\";\n      }\n      break;\n    case \"switch\":\n      {\n        modifiedType = \"mJPSwitch\";\n      }\n      break;\n    case \"swypeLayout\":\n      {\n        modifiedType = \"mJPSwypeLayoutCell\";\n      }\n      break;\n    case \"accordionLayout\":\n      {\n        modifiedType = \"mJPExpandableCell\";\n      }\n      break;\n    case \"linearLayout\":\n      {\n        modifiedType = \"mJPLinearLayout\";\n      }\n      break;\n    case \"relativeLayout\":\n      {\n        modifiedType = \"mJPRelativeLayout\";\n      }\n      break;\n    case \"frameLayout\":\n      {\n        modifiedType = \"mJPRelativeLayout\";\n      }\n      break;\n    default:\n      {\n        modifiedType = \"mJPView\";\n      }\n  }\n  return modifiedType;\n}\n\nfunction changeKeys(config, type) {\n  var map = {\n    \"imageUrl\": \"imageNamed\",\n    \"packageIcon\": \"imageNamed\",\n    \"color\": \"textColor\"\n  };\n\n  var keys = Object.keys(config);\n\n  keys.forEach(function (key) {\n    if (map[key]) {\n      config[map[key]] = config[key];\n      delete config[key];\n    }\n  });\n\n  if (config.stroke) {\n    config.borderWidth = config.stroke.split(\",\")[0];\n    config.borderColor = config.stroke.split(\",\")[1];\n  }\n\n  // Add all view based prop injections below.\n  switch (type.toLowerCase()) {\n    case \"scrollview\":\n      {\n        config.orientation = \"vertical\";\n      }\n      break;\n    case \"horizontalscrollview\":\n      {\n        config.orientation = \"horizontal\";\n      }\n      break;\n  }\n  // Add all view based prop injections above.\n  return config;\n}\n\n// cS - convert to String\n// rWS - remove white spaces\n// fromStore methods dont  use invokeOn\n// the extract className out of the stored object in the store\nmodule.exports = function (type, config, _getSetType) {\n  config = changeKeys((0, _flattenObject2.default)(config), type);\n  type = generateType(type, config);\n  getSetType = _getSetType == \"set\" ? 1 : 0;\n  config.methods = [];\n  config.alignment_rules = [];\n\n  // tag set\n  if (config.id) {\n    var tag = rWS(cS(config.id));\n\n    if (!getSetType) {\n      config.methods.push(self_getViewFromTag(tag));\n    } else {\n      config.methods.push(this_setTag(tag));\n    }\n  }\n\n  // frame\n  if (!config.useConstraits && (config.x || config.y || config.w || config.h)) {\n    var x = rWS(cS(config.x)) || \"0\";\n    var y = rWS(cS(config.y)) || \"0\";\n    var width = rWS(cS(config.w)) || \"0\";\n    var height = rWS(cS(config.h)) || \"0\";\n\n    config.methods.push(self_rectFromDictionary(x, y, width, height));\n    config.methods.push(this_setFrame());\n  }\n\n  if (config.hasOwnProperty(\"useConstraits\") && config.useConstraits && config.hasOwnProperty(\"expand\")) {\n    config.visibility = config.expand ? config.visibility ? config.visibility : \"visible\" : \"gone\";\n  }\n\n  if (config.hasOwnProperty(\"alignParentBottom\") && config.alignParentBottom == \"true,-1\") {\n    config.alignment_rules.push('align_parent_bottom');\n  }\n\n  if (config.useConstraits) {\n    config.methods.push(this_updateLayoutParams(config));\n  }\n\n  if (config.hasOwnProperty(\"letterSpacing\")) {\n    config.methods.push(this_setLetterSpacing(config.letterSpacing));\n  }\n\n  if (config.hasOwnProperty(\"lineSpacing\")) {\n    config.methods.push(this_setLineSpacing(config.lineSpacing));\n  }\n\n  if (config.hasOwnProperty(\"caretColor\")) {\n    config.methods.push(UIColor_setColor(config.caretColor));\n    config.methods.push(this_setCaretColor());\n  }\n\n  // background\n  if (config.background || config.gradient || config.backgroundDrawable) {\n    if (config.hasOwnProperty(\"gradient\")) {\n      var gradient = JSON.parse(config.gradient);\n      var gradientType = gradient.type;\n      var gradientAngle = gradient.angle;\n      var colours = [];\n\n      gradient.values.forEach(function (color) {\n        colours.push(convertColorToRgba(color));\n      });\n\n      gradient = JSON.stringify({\n        colors: colours,\n        type: gradientType,\n        angle: gradientAngle\n      });\n      config.methods.push(this_setGradient(gradient));\n    } else if (config.hasOwnProperty(\"backgroundDrawable\")) {\n      config.methods.push(UIImage_imageNamed(config.backgroundDrawable));\n      config.methods.push(this_setBackgroundImage());\n    } else {\n      config.methods.push(UIColor_setColor(config.background));\n      config.methods.push(this_setBackgroundColor());\n    }\n  }\n\n  // borderColor, radius and width\n  // will work only for uiView and uiLabel\n  if (config.hasOwnProperty(\"cornerRadius\")) {\n    var arg = rWS(cS(config.cornerRadius));\n    config.methods.push(setCornerRadius(arg));\n  }\n\n  if (config.hasOwnProperty(\"borderWidth\")) {\n    var _arg = rWS(cS(config.borderWidth));\n    config.methods.push(setBorderWidth(_arg));\n  }\n\n  if (config.hasOwnProperty(\"borderColor\")) {\n    config.methods.push(UIColor_setColor(config.borderColor));\n    config.methods.push(setBorderColor());\n  }\n\n  if (config.debug) {\n    config.methods.push(this_layer());\n    config.methods.push(setBorderWidth(\"1\"));\n  }\n\n  if (config.shadow) {\n    var shadowValues = config.shadow.split(',');\n    var shadowBlur = rWS(cS(shadowValues[2]));\n    var shadowSpread = rWS(cS(shadowValues[3]));\n    var shadowOpacity = rWS(cS(shadowValues[5]));\n    var shadowOffset = {\n      x: rWS(cS(shadowValues[0])),\n      y: rWS(cS(shadowValues[1]))\n    };\n\n    var shadowColor = convertColorToRgba(shadowValues[4]);\n\n    config.methods.push(this_setShadow(config.id, shadowOffset, shadowBlur, shadowSpread, shadowColor, shadowOpacity));\n  }\n\n  // make child fullWidth and height of parent\n  if (config.fillParent) {\n    config.methods.push(this_superview());\n    config.methods.push(UIView_bounds());\n    config.methods.push(this_setFrame());\n  }\n\n  if (config.hasOwnProperty(\"imageNamed\")) {\n    var id = cS(config.id);\n    var placeholder = config.placeHolder || \"\";\n    if (config.imageNamed.endsWith(\".gif\")) {\n      config.methods.push(this_setGif(id, config.imageNamed));\n    } else {\n      config.methods.push(this_setImageURL(id, config.imageNamed, placeholder));\n    }\n  }\n\n  if (config.hasOwnProperty(\"adjustViewWithKeyboard\")) {\n    config.methods.push(this_adjustViewWithKeyboard(config.adjustViewWithKeyboard));\n  }\n\n  if (config.hasOwnProperty(\"playGif\")) {\n    if (config.playGif) config.methods.push(this_startGif());else config.methods.push(this_stopGif());\n  }\n\n  if (config.hint) {\n    if (config.letterSpacing) {\n      var data = JSON.stringify({\n        'hint': cS(config.hint),\n        'letterSpacing': config.letterSpacing\n      });\n      config.methods.push(this_setPlaceholderProperties(data));\n    } else {\n      config.methods.push(this_setPlaceholder(cS(config.hint)));\n    }\n  }\n\n  if (config.hasOwnProperty(\"separator\")) {\n    var _enabled6 = cS(config.separator);\n    config.methods.push(this_setSeparator(_enabled6));\n  }\n\n  if (config.hasOwnProperty(\"separatorRepeat\")) {\n    var _enabled6 = cS(config.separatorRepeat);\n    config.methods.push(this_setSeparatorRepeat(_enabled6));\n  }\n\n  if (config.translationZ) {\n    config.methods.push(this_setTranslationZ(cS(config.translationZ)));\n  }\n\n  if (config.scrollTo) {\n    var data = config.scrollTo.split(\",\");\n    var parsedData = JSON.stringify({ \"x\": data[0], \"y\": data[1] });\n    config.methods.push(this_scrollTo(cS(parsedData)));\n  }\n\n  if (config.hasOwnProperty(\"expand\")) {\n    config.methods.push(this_setExpand(config.expand ? \"1\" : \"0\"));\n  }\n\n  if (config.hasOwnProperty(\"expandDuration\")) {\n    config.methods.push(this_setExpandDuration(cS(config.expandDuration)));\n  }\n\n  if (config.hasOwnProperty(\"expandAlpha\")) {\n    config.methods.push(this_setExpandAlpha(cS(config.expandAlpha)));\n  }\n\n  //Updated to handle 0 being passed for default alignment\n  if (config.hasOwnProperty(\"textAlignment\")) {\n    config.methods.push(this_setTextAlignment(rWS(cS(config.textAlignment))));\n  }\n\n  if (config.hasOwnProperty(\"textFromHtml\")) {\n    var modifiedHtmlString = \"<span style=\\\"\";\n    if (config.hasOwnProperty(\"fontStyle\")) {\n      modifiedHtmlString += \"font-family:\" + config.fontStyle + \";\";\n    }\n    if (config.hasOwnProperty(\"textSize\")) {\n      modifiedHtmlString += \"font-size:\" + config.textSize + \";\";\n    }\n    if (config.hasOwnProperty(\"textColor\")) {\n      modifiedHtmlString += \"color:\" + config.textColor + \";\";\n    }\n    modifiedHtmlString += \"\\\">\" + config.textFromHtml + \"</span>\";\n    config.methods.push(this_setHTMLText(modifiedHtmlString));\n  }\n\n  if (config.textColor) {\n    config.methods.push(UIColor_setColor(config.textColor));\n    config.methods.push(this_setTextColor());\n  }\n  if (config.hasOwnProperty(\"fontStyle\")) {\n    if (config.hasOwnProperty(\"textSize\")) {\n      config.methods.push(UIFont_fontWithName(config.fontStyle, config.textSize + \"\"));\n    } else {\n      config.methods.push(this_fontWithName(config.fontStyle));\n    }\n    config.methods.push(this_setFont());\n  } else if (config.hasOwnProperty(\"textSize\")) {\n    config.methods.push(UIFont_systemFontOfSize(config.textSize + \"\"));\n    config.methods.push(this_setFont());\n  }\n\n  if (config.scrollEnabled) {\n    var scrollEnabled = cS(config.scrollEnabled);\n    config.methods.push(this_scrollEnabled(scrollEnabled));\n  }\n\n  if (config.fontFamily) {\n    config.methods.push(UIFont_systemFontOfSizeWeight((config.textSize || \"14\") + \"\", config.fontFamily || \"0.0\"));\n    config.methods.push(this_setFont());\n  }\n\n  if (config.hasOwnProperty(\"singleLine\")) {\n    if (!config.singleLine) {\n      config.methods.push(this_setLineBreakMode(\"0\"));\n      config.methods.push(this_setNumberOfLines(\"0\"));\n    }\n  }\n\n  if (!config.useConstraits && config.visibility) {\n    config.methods.push(this_setHidden(config.visibility));\n  }\n\n  if (config.hasOwnProperty(\"clickable\")) {\n    config.methods.push(this_setUserInteraction(rWS(cS(config.clickable))));\n  }\n\n  if (config.translationX) {\n    var props = [{\n      'id': '' + Math.random().toString(36).substring(2),\n      'type': 'translation',\n      'runOnRender': 'true',\n      'easing': 'linear',\n      'delay': '0',\n      'duration': '1',\n      'props': JSON.stringify([{ 'to': '' + config.translationX, 'prop': 'translationX', 'from': '0' }])\n    }];\n\n    config.methods.push(self_animate({ 'id': '' + config.id, 'json': JSON.stringify(props) }));\n  }\n\n  if (config.translationY) {\n    var _props = [{\n      'id': '' + Math.random().toString(36).substring(2),\n      'type': 'translation',\n      'runOnRender': 'true',\n      'easing': 'linear',\n      'delay': '0',\n      'duration': '1',\n      'props': JSON.stringify([{ 'to': '' + config.translationY, 'prop': 'translationY', 'from': '0' }])\n    }];\n\n    config.methods.push(self_animate({ 'id': '' + config.id, 'json': JSON.stringify(_props) }));\n  }\n\n  if (config.a_rotate) {\n    //TODO: FIX THIS BRING IT OUTSIDE\n    var _props2 = {\n      \"duration\": config.a_duration,\n      \"id\": config.id,\n      \"delay\": config.a_delay,\n      \"option\": config.a_option,\n      \"type\": \"rotation\"\n    };\n    config.methods.push(self_animate(_props2));\n  }\n\n  if (config.hasOwnProperty(\"htmlText\")) {\n    config.methods.push(this_setHTMLText(config.htmlText));\n  }\n\n  if (config.hasOwnProperty(\"bringSubViewToFront\")) {\n    var viewTag = cS(config.id);\n    config.methods.push(this_bringSubViewToFront(viewTag));\n  }\n\n  if (config.hasOwnProperty(\"contentMode\")) {\n    var contentMode = cS(config.contentMode);\n    config.methods.push(this_setContentMode(contentMode));\n  }\n\n  if (config.onFocus) {\n    config.methods.push(this_setOnFocusCallback(config.onFocus));\n  }\n\n  if (config.hasOwnProperty(\"onMerchantViewHeightChange\")) {\n    config.methods.push(this_setOnMerchantViewHeightChangeCallback(config.onMerchantViewHeightChange));\n  }\n\n  if (config.hasOwnProperty(\"pivotX\")) {\n    config.methods.push(this_pivotX(config.pivotX + \"\"));\n  }\n\n  if (config.hasOwnProperty(\"pivotY\")) {\n    config.methods.push(this_pivotY(config.pivotY + \"\"));\n  }\n\n  if (config.hasOwnProperty(\"onItemClick\")) {\n    config.methods.push(this_setOnItemClick(config.onItemClick));\n  }\n\n  if (config.statusBarStyle) {\n    var enabled = cS(config.statusBarStyle);\n    config.methods.push(this_setStatusBarStyle(enabled));\n  }\n\n  if (config.hasOwnProperty(\"enabled\")) {\n    var _enabled = cS(config.enabled);\n    config.methods.push(this_setEnabled(_enabled));\n  }\n\n  if (config.hasOwnProperty(\"inputTypeI\")) {\n    var keyboardType = cS(config.inputTypeI);\n    config.methods.push(this_setKeyboardType(keyboardType));\n  }\n\n  if (config.inputType) {\n    var _keyboardType = config.inputType;\n    if (_keyboardType == \"numeric\" || _keyboardType == \"numericWithoutSuggestion\") {\n      config.inputType = 4;\n    } else if (_keyboardType == \"email\") {\n      config.inputType = 7;\n    } else if (_keyboardType == \"numericPassword\") {\n      config.inputType = 4;\n      config.methods.push(this_setSecureTextEntry(\"1\"));\n    } else if (_keyboardType == \"password\") {\n      config.inputType = 0;\n      config.methods.push(this_setSecureTextEntry(\"1\"));\n    } else {\n      config.inputType = 0;\n    }\n    config.methods.push(this_setKeyboardType(cS(config.inputType)));\n  }\n\n  if (config.hasOwnProperty(\"autoCapitalizationType\")) {\n    var _keyboardType2 = cS(config.autoCapitalizationType);\n    config.methods.push(this_setAutoCapitalizationType(_keyboardType2));\n  }\n\n  if (config.hasOwnProperty(\"autoCorrectionType\")) {\n    var autoCorrectionType = cS(config.autoCorrectionType);\n    config.methods.push(this_setAutoCorrectionType(autoCorrectionType));\n  }\n\n  if (config.hasOwnProperty(\"becomeFirstResponder\")) {\n    config.methods.push(this_becomeFirstResponder());\n  }\n\n  if (config.hasOwnProperty(\"setOn\")) {\n    var _enabled2 = cS(config.setOn);\n    config.methods.push(this_setOn(_enabled2));\n  }\n\n  if (config.scrollToIndex) {\n    var _enabled3 = cS(config.scrollToIndex);\n    config.methods.push(this_scrollToIndex(_enabled3));\n  }\n\n  if (config.showVerticalScrollBar) {\n    var _enabled4 = cS(config.showVerticalScrollBar);\n    config.methods.push(this_showVerticalScrollBar(_enabled4));\n  }\n\n  if (config.lengthLimit) {\n    var _enabled5 = cS(config.lengthLimit);\n    config.methods.push(this_setTextLengthLimit(_enabled5));\n  }\n\n  if (config.hasOwnProperty(\"swypeEnabled\")) {\n    config.methods.push(this_setSwype(config.swypeEnabled));\n  }\n\n  if (config.hasOwnProperty(\"focus\")) {\n    config.methods.push(this_becomeFirstResponder(cS(config.focus)));\n  }\n\n  if (config.pattern) {\n    var patStr = cS(config.pattern);\n    var patArr = patStr.split(\",\");\n    var patLen = patArr[patArr.length - 1];\n    patStr = patArr.slice(0, patArr.length - 1).join(\",\");\n\n    config.methods.push(this_setRegularExpression(cS(patStr)));\n    config.methods.push(this_setTextLengthLimit(cS(patLen)));\n  }\n\n  if (config.regExp) {\n    var _enabled7 = cS(config.regExp);\n    config.methods.push(this_setRegularExpression(_enabled7));\n  }\n\n  if (config.removeCell) {\n    var cellIndex = cS(config.removeCell);\n    config.methods.push(this_removeCell(cellIndex));\n  }\n\n  if (config.secureTextEntry) {\n    var _enabled8 = cS(config.secureTextEntry);\n    config.methods.push(this_setSecureTextEntry(_enabled8));\n  }\n\n  if (config.hasOwnProperty('checked')) {\n    config.methods.push(this_setOn(config.checked));\n  }\n\n  if (config.popupMenu) {\n    config.methods.push(self_setPopupMenu(config.popupMenu, config.onMenuItemClick));\n  }\n\n  if (config.hasOwnProperty(\"alpha\")) {\n    config.methods.push(self_setAlpha(config.alpha));\n  }\n\n  if (config.animation) {\n    var animProps = {\n      viewTag: '' + config.id,\n      json: config.animation\n    };\n    config.methods.push(self_animateNew(animProps));\n  }\n\n  if (config.hasOwnProperty(\"text\")) {\n    if (config.letterSpacing) {\n      config.methods.push(this_setLetterSpacing(cS(config.letterSpacing)));\n    }\n    config.methods.push(this_setText(cS(config.text)));\n  }\n\n  if (config.cursorPosition) {\n    config.methods.push(self_setCursorPosition(cS(config.id), cS(config.cursorPosition)));\n  }\n\n  if (config.onSwipe && typeof config.onSwipe === \"function\") {\n    config.methods.push(this_setSwipeCallback(callbackMapper.map(config.onSwipe)));\n  }\n\n  if (config.hasOwnProperty(\"closeSwipe\")) {\n    config.methods.push(this_setCloseSwipe(config.closeSwipe));\n  }\n\n  if (config.hasOwnProperty(\"swypeEnabled\")) {\n    config.methods.push(this_setEnableSwype(config.swypeEnabled));\n  }\n\n  if (config.hasOwnProperty(\"listData\") && config.hasOwnProperty(\"listItem\")) {\n    var item = JSON.parse(config.listItem);\n    item.itemView = Android.createListData(config.id, item.itemView);\n    config.methods.push(this_setupList(config.listData, JSON.stringify(item)));\n  }\n\n  if (config.hasOwnProperty(\"inlineAnimation\")) {\n    config.methods.push(this_inlineAnimation(config));\n  }\n\n  if (config.hasOwnProperty(\"clipsToBounds\")) {\n    config.methods.push(this_setClipsToBounds(config.clipsToBounds));\n  }\n\n  if (config.hasOwnProperty(\"cornerRadii\")) {\n    config.methods.push(this_setCornerCurves(config.cornerRadii));\n  }\n\n  config.currChildOffset = 0;\n  config = transformKeys(config);\n\n  return { config: config, type: type };\n};\n\nfunction self_animateNew(props) {\n  return {\n    \"return\": \"false\",\n    \"invokeOn\": \"self\",\n    \"methodName\": \"animate:\",\n    \"values\": [props]\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/helpers/ios/parseParams.js\n");

/***/ }),

/***/ "./src/init.js":
/*!*********************!*\
  !*** ./src/init.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\n/*\n Used to initialize defaults for window funcions and variables.\n*/\nvar _require = __webpack_require__(/*! ./helper */ \"./src/helper.js\"),\n    merge = _require.merge;\n\nwindow.PrestoUI = __webpack_require__(/*! ./PrestoUIInterface */ \"./src/PrestoUIInterface.js\");\n\nvar getCurrTime = function getCurrTime() {\n    return new Date().getTime();\n};\n\n// window.__OS = getOS()\nif (false) { var getScreenDetails; }\n\nif (false) {} else if (true) {\n    window.Android = __webpack_require__(/*! ./IOS/AndroidInterface */ \"./src/IOS/AndroidInterface.js\");\n    window.JBridge = merge(window.JBridge, {});\n}\n\nif (window.__DEVICE_DETAILS && window.__DEVICE_DETAILS.hasOwnProperty(\"screen_width\")) {\n    window.__WIDTH = window.__DEVICE_DETAILS.screen_width;\n} else {\n    window.__WIDTH = \"1080\";\n}\n\nif (window.__DEVICE_DETAILS && window.__DEVICE_DETAILS.hasOwnProperty(\"screen_height\")) {\n    window.__HEIGHT = window.__DEVICE_DETAILS.screen_height;\n} else {\n    window.__HEIGHT = \"1920\";\n}\n\nvar guid = Math.random().toString(36).substr(2, 9);\n\n//Intializing defaults\nif (false) { var duiShowScreen; } else if (true) {\n    window.__COLOR_INDEX = window.__COLOR_INDEX || 1;\n    window.__FONT_INDEX = window.__FONT_INDEX || 1;\n    window.__RECT_INDEX = window.RECT_INDEX || 1;\n    window.__VIEW_INDEX = window.__VIEW_INDEX || 1;\n    window.__IMAGE_INDEX = window.__IMAGE_INDEX || 1;\n    window.__POINT_INDEX = window.__POINT_INDEX || 1;\n    window.__LAYER_INDEX = window.__LAYER_INDEX || 1;\n    window.__SIZE_INDEX = window.__SIZE_INDEX || 1;\n} else {}\n\nwindow.__ID = 1;\nwindow.__NODE_ID = 1;\nwindow.__SCREEN_INDEX = -1;\n\nwindow.__PROXY_FN = {};\nwindow.__FN_INDEX = 0;\nwindow.__ROOTSCREEN = null;\nwindow.__CACHED_SCREENS = {};\nwindow.__SCREEN_COUNT = 0;\nwindow.__CURR_SCREEN = null;\nwindow.__PREV_SCREEN = null;\nwindow.__ANIMATE_DIR = null;\nwindow.__SCREEN_STACK = [];\nwindow.__LAST_FN_CALLED = null;\nwindow.__THROTTELED_ACTIONS = [];\nwindow.__VIEWS = {};\nwindow.__VIEW_DIMENSIONS = {};\nwindow.__OBSERVERS = {};\nwindow.ZIndex = 0;\n\nwindow.callUICallback = function () {\n    var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n    var fName = args[0];\n    var functionArgs = args.slice(1);\n    var currTime;\n    var timeDiff;\n\n    if (window.__ALL_ONCLICKS && window.__ALL_ONCLICKS.indexOf(fName) != -1 && args[2] == \"feedback\" && JBridge && JBridge.setClickFeedback) {\n        return JBridge.setClickFeedback(args[1]);\n    }\n\n    if (window.__THROTTELED_ACTIONS && window.__THROTTELED_ACTIONS.indexOf(fName) == -1) {\n        window.__PROXY_FN[fName].apply(null, functionArgs);\n    } else if (window.__LAST_FN_CALLED && fName == window.__LAST_FN_CALLED.fName) {\n        currTime = getCurrTime();\n        timeDiff = currTime - window.__LAST_FN_CALLED.timeStamp;\n\n        if (timeDiff >= 300) {\n            window.__PROXY_FN[fName].apply(null, functionArgs);\n            window.__LAST_FN_CALLED.timeStamp = currTime;\n        } else {\n            console.warn(\"function throtteled\", fName);\n            console.warn(\"time diff\", timeDiff);\n        }\n    } else {\n        window.__PROXY_FN[fName].apply(null, functionArgs);\n        window.__LAST_FN_CALLED = {\n            timeStamp: new Date().getTime(),\n            fName: fName\n        };\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/init.js\n");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** multi ./index.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./index.js */"./index.js");


/***/ })

/******/ });