module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\nmodule.exports = {\n\tinit: __webpack_require__(/*! ./src/init */ \"./src/init.js\"),\n\tdoms: __webpack_require__(/*! ./src/doms */ \"./src/doms/index.js\"),\n\thandler: __webpack_require__(/*! ./src/handler */ \"./src/handler.js\"),\n\thelpers: __webpack_require__(/*! ./src/helpers */ \"./src/helpers/index.js\"),\n\tbaseView: __webpack_require__(/*! ./src/baseView */ \"./src/baseView.js\"),\n\tanimations: __webpack_require__(/*! ./src/animations */ \"./src/animations.js\"),\n\tcallbackMapper: __webpack_require__(/*! ./src/helpers/common/callbackMapper */ \"./src/helpers/common/callbackMapper.js\"),\n\tgetOS: __webpack_require__(/*! ./src/helper */ \"./src/helper.js\").getOS,\n\tprestoMerge: __webpack_require__(/*! ./src/helper */ \"./src/helper.js\").merge,\n\tprestoClone: __webpack_require__(/*! ./src/helper */ \"./src/helper.js\").clone\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz80MWY1Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpbml0IiwicmVxdWlyZSIsImRvbXMiLCJoYW5kbGVyIiwiaGVscGVycyIsImJhc2VWaWV3IiwiYW5pbWF0aW9ucyIsImNhbGxiYWNrTWFwcGVyIiwiZ2V0T1MiLCJwcmVzdG9NZXJnZSIsIm1lcmdlIiwicHJlc3RvQ2xvbmUiLCJjbG9uZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0JBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxPQUFNQyxtQkFBT0EsQ0FBQyxpQ0FBUixDQURVO0FBRWhCQyxPQUFPRCxtQkFBT0EsQ0FBQyx1Q0FBUixDQUZTO0FBR2hCRSxVQUFVRixtQkFBT0EsQ0FBQyx1Q0FBUixDQUhNO0FBSWhCRyxVQUFVSCxtQkFBT0EsQ0FBQyw2Q0FBUixDQUpNO0FBS2hCSSxXQUFXSixtQkFBT0EsQ0FBQyx5Q0FBUixDQUxLO0FBTWhCSyxhQUFZTCxtQkFBT0EsQ0FBQyw2Q0FBUixDQU5JO0FBT2hCTSxpQkFBZ0JOLG1CQUFPQSxDQUFDLG1GQUFSLENBUEE7QUFRaEJPLFFBQU9QLG1CQUFPQSxDQUFDLHFDQUFSLEVBQXdCTyxLQVJmO0FBU2hCQyxjQUFhUixtQkFBT0EsQ0FBQyxxQ0FBUixFQUF3QlMsS0FUckI7QUFVaEJDLGNBQWFWLG1CQUFPQSxDQUFDLHFDQUFSLEVBQXdCVztBQVZyQixDQUFqQiIsImZpbGUiOiIuL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiogSlVTUEFZIFRlY2hub2xvZ2llcyBQdnQuIEx0ZC4gW2h0dHBzOi8vd3d3Lmp1c3BheS5pbl1cbipcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuKlxuKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuKiBQdWJsaWMgTGljZW5zZSAoR05VIEFHUEwpIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLFxuKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4qXG4qIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBUaGUgZW5kIHVzZXIgd2lsbFxuKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiogZGFtYWdlcywgY2xhaW1zLCBjb3N0LCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leSBmZWUgY2xhaW1lZCBvbiBKdXNwYXkuXG4qIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4qIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuKlxuKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4qL1xubW9kdWxlLmV4cG9ydHMgPSB7XG5cdGluaXQ6IHJlcXVpcmUoXCIuL3NyYy9pbml0XCIpLCBcblx0ZG9tcyA6IHJlcXVpcmUoXCIuL3NyYy9kb21zXCIpLFxuXHRoYW5kbGVyIDogcmVxdWlyZShcIi4vc3JjL2hhbmRsZXJcIiksXG5cdGhlbHBlcnMgOiByZXF1aXJlKFwiLi9zcmMvaGVscGVyc1wiKSxcblx0YmFzZVZpZXcgOiByZXF1aXJlKFwiLi9zcmMvYmFzZVZpZXdcIiksXG5cdGFuaW1hdGlvbnM6IHJlcXVpcmUoJy4vc3JjL2FuaW1hdGlvbnMnKSxcblx0Y2FsbGJhY2tNYXBwZXI6IHJlcXVpcmUoJy4vc3JjL2hlbHBlcnMvY29tbW9uL2NhbGxiYWNrTWFwcGVyJyksXG5cdGdldE9TOiByZXF1aXJlKCcuL3NyYy9oZWxwZXInKS5nZXRPUyxcblx0cHJlc3RvTWVyZ2U6IHJlcXVpcmUoJy4vc3JjL2hlbHBlcicpLm1lcmdlLFxuXHRwcmVzdG9DbG9uZTogcmVxdWlyZSgnLi9zcmMvaGVscGVyJykuY2xvbmVcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanM/YmMzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIsbUJBQU8sQ0FBQyxzREFBYSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/index.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzP2NlZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLFdBQVcsbUJBQU8sQ0FBQyxnRUFBZ0I7QUFDbkMsWUFBWSxtQkFBTyxDQUFDLDREQUFjO0FBQ2xDLGtCQUFrQixtQkFBTyxDQUFDLHdFQUFvQjtBQUM5QyxlQUFlLG1CQUFPLENBQUMsd0RBQVk7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixZQUFZLE1BQU07QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGtFQUFpQjtBQUN4QyxvQkFBb0IsbUJBQU8sQ0FBQyw0RUFBc0I7QUFDbEQsaUJBQWlCLG1CQUFPLENBQUMsc0VBQW1COztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvRUFBa0I7O0FBRXpDOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanM/N2E3NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQSBgQ2FuY2VsYCBpcyBhbiBvYmplY3QgdGhhdCBpcyB0aHJvd24gd2hlbiBhbiBvcGVyYXRpb24gaXMgY2FuY2VsZWQuXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge3N0cmluZz19IG1lc3NhZ2UgVGhlIG1lc3NhZ2UuXG4gKi9cbmZ1bmN0aW9uIENhbmNlbChtZXNzYWdlKSB7XG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG59XG5cbkNhbmNlbC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuICdDYW5jZWwnICsgKHRoaXMubWVzc2FnZSA/ICc6ICcgKyB0aGlzLm1lc3NhZ2UgOiAnJyk7XG59O1xuXG5DYW5jZWwucHJvdG90eXBlLl9fQ0FOQ0VMX18gPSB0cnVlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/Cancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcz84ZGY0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQywyREFBVTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBDYW5jZWwgPSByZXF1aXJlKCcuL0NhbmNlbCcpO1xuXG4vKipcbiAqIEEgYENhbmNlbFRva2VuYCBpcyBhbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byByZXF1ZXN0IGNhbmNlbGxhdGlvbiBvZiBhbiBvcGVyYXRpb24uXG4gKlxuICogQGNsYXNzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBleGVjdXRvciBUaGUgZXhlY3V0b3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIENhbmNlbFRva2VuKGV4ZWN1dG9yKSB7XG4gIGlmICh0eXBlb2YgZXhlY3V0b3IgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgcmVzb2x2ZVByb21pc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWwobWVzc2FnZSk7XG4gICAgcmVzb2x2ZVByb21pc2UodG9rZW4ucmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnRocm93SWZSZXF1ZXN0ZWQgPSBmdW5jdGlvbiB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICB0aHJvdyB0aGlzLnJlYXNvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcz8yZTY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanM/MGEwNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLHlFQUFxQjtBQUM1Qyx5QkFBeUIsbUJBQU8sQ0FBQyxpRkFBc0I7QUFDdkQsc0JBQXNCLG1CQUFPLENBQUMsMkVBQW1CO0FBQ2pELGtCQUFrQixtQkFBTyxDQUFDLG1FQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBidWlsZFVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBJbnRlcmNlcHRvck1hbmFnZXIgPSByZXF1aXJlKCcuL0ludGVyY2VwdG9yTWFuYWdlcicpO1xudmFyIGRpc3BhdGNoUmVxdWVzdCA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hSZXF1ZXN0Jyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL21lcmdlQ29uZmlnJyk7XG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGluc3RhbmNlQ29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIEF4aW9zKGluc3RhbmNlQ29uZmlnKSB7XG4gIHRoaXMuZGVmYXVsdHMgPSBpbnN0YW5jZUNvbmZpZztcbiAgdGhpcy5pbnRlcmNlcHRvcnMgPSB7XG4gICAgcmVxdWVzdDogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpLFxuICAgIHJlc3BvbnNlOiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKClcbiAgfTtcbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgc3BlY2lmaWMgZm9yIHRoaXMgcmVxdWVzdCAobWVyZ2VkIHdpdGggdGhpcy5kZWZhdWx0cylcbiAqL1xuQXhpb3MucHJvdG90eXBlLnJlcXVlc3QgPSBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25maWcgPSBhcmd1bWVudHNbMV0gfHwge307XG4gICAgY29uZmlnLnVybCA9IGFyZ3VtZW50c1swXTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcgPSBjb25maWcgfHwge307XG4gIH1cblxuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuXG4gIC8vIFNldCBjb25maWcubWV0aG9kXG4gIGlmIChjb25maWcubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRzLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSB0aGlzLmRlZmF1bHRzLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZy5tZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIC8vIEhvb2sgdXAgaW50ZXJjZXB0b3JzIG1pZGRsZXdhcmVcbiAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcbiAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24gdW5zaGlmdFJlcXVlc3RJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHdoaWxlIChjaGFpbi5sZW5ndGgpIHtcbiAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5BeGlvcy5wcm90b3R5cGUuZ2V0VXJpID0gZnVuY3Rpb24gZ2V0VXJpKGNvbmZpZykge1xuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICByZXR1cm4gYnVpbGRVUkwoY29uZmlnLnVybCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLnJlcGxhY2UoL15cXD8vLCAnJyk7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh1dGlscy5tZXJnZShjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmxcbiAgICB9KSk7XG4gIH07XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGRhdGEsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QodXRpbHMubWVyZ2UoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzP2Y2YjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcz84M2I5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLG1GQUEwQjtBQUN0RCxrQkFBa0IsbUJBQU8sQ0FBQywrRUFBd0I7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanM/MmQ4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixtQkFBbUIsbUJBQU8sQ0FBQyxxRUFBZ0I7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxNQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBlbmhhbmNlRXJyb3IgPSByZXF1aXJlKCcuL2VuaGFuY2VFcnJvcicpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBFcnJvciB3aXRoIHRoZSBzcGVjaWZpZWQgbWVzc2FnZSwgY29uZmlnLCBlcnJvciBjb2RlLCByZXF1ZXN0IGFuZCByZXNwb25zZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbY29kZV0gVGhlIGVycm9yIGNvZGUgKGZvciBleGFtcGxlLCAnRUNPTk5BQk9SVEVEJykuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICogQHJldHVybnMge0Vycm9yfSBUaGUgY3JlYXRlZCBlcnJvci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVFcnJvcihtZXNzYWdlLCBjb25maWcsIGNvZGUsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gIHZhciBlcnJvciA9IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgcmV0dXJuIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/createError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzPzUyNzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZO0FBQ2hDLG9CQUFvQixtQkFBTyxDQUFDLHVFQUFpQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsdUVBQW9CO0FBQzNDLGVBQWUsbUJBQU8sQ0FBQyx5REFBYTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzPzM4N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE1BQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZVxuICAgIH07XG4gIH07XG4gIHJldHVybiBlcnJvcjtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/enhanceError.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanM/NGE3YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsbURBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9tZXJnZUNvbmZpZy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAncGFyYW1zJywgJ2RhdGEnXTtcbiAgdmFyIG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzID0gWydoZWFkZXJzJywgJ2F1dGgnLCAncHJveHknXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3VybCcsICd0cmFuc2Zvcm1SZXF1ZXN0JywgJ3RyYW5zZm9ybVJlc3BvbnNlJywgJ3BhcmFtc1NlcmlhbGl6ZXInLFxuICAgICd0aW1lb3V0JywgJ3dpdGhDcmVkZW50aWFscycsICdhZGFwdGVyJywgJ3Jlc3BvbnNlVHlwZScsICd4c3JmQ29va2llTmFtZScsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJywgJ29uVXBsb2FkUHJvZ3Jlc3MnLCAnb25Eb3dubG9hZFByb2dyZXNzJyxcbiAgICAnbWF4Q29udGVudExlbmd0aCcsICd2YWxpZGF0ZVN0YXR1cycsICdtYXhSZWRpcmVjdHMnLCAnaHR0cEFnZW50JyxcbiAgICAnaHR0cHNBZ2VudCcsICdjYW5jZWxUb2tlbicsICdzb2NrZXRQYXRoJ1xuICBdO1xuXG4gIHV0aWxzLmZvckVhY2godmFsdWVGcm9tQ29uZmlnMktleXMsIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICh0eXBlb2YgY29uZmlnMltwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzJbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG1lcmdlRGVlcFByb3BlcnRpZXNLZXlzLCBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKHByb3ApIHtcbiAgICBpZiAodXRpbHMuaXNPYmplY3QoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IHV0aWxzLmRlZXBNZXJnZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSB1dGlscy5kZWVwTWVyZ2UoY29uZmlnMVtwcm9wXSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgY29uZmlnMVtwcm9wXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGNvbmZpZzFbcHJvcF07XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRlZmF1bHRUb0NvbmZpZzJLZXlzLCBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAodHlwZW9mIGNvbmZpZzJbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcyW3Byb3BdO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGNvbmZpZzFbcHJvcF0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBjb25maWcxW3Byb3BdO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMilcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIGZpbHRlckF4aW9zS2V5cyhrZXkpIHtcbiAgICAgIHJldHVybiBheGlvc0tleXMuaW5kZXhPZihrZXkpID09PSAtMTtcbiAgICB9KTtcblxuICB1dGlscy5mb3JFYWNoKG90aGVyS2V5cywgZnVuY3Rpb24gb3RoZXJLZXlzRGVmYXVsdFRvQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBjb25maWcyW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMltwcm9wXTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb25maWcxW3Byb3BdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uZmlnW3Byb3BdID0gY29uZmlnMVtwcm9wXTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzPzQ2N2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCLG1CQUFPLENBQUMsbUVBQWU7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnLi9jcmVhdGVFcnJvcicpO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIHJlc3BvbnNlKSB7XG4gIHZhciB2YWxpZGF0ZVN0YXR1cyA9IHJlc3BvbnNlLmNvbmZpZy52YWxpZGF0ZVN0YXR1cztcbiAgaWYgKCF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz9jNDAxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsTUFBTTtBQUNqQixXQUFXLGVBQWU7QUFDMUIsYUFBYSxFQUFFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS90cmFuc2Zvcm1EYXRhLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8qKlxuICogVHJhbnNmb3JtIHRoZSBkYXRhIGZvciBhIHJlcXVlc3Qgb3IgYSByZXNwb25zZVxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gZGF0YSBUaGUgZGF0YSB0byBiZSB0cmFuc2Zvcm1lZFxuICogQHBhcmFtIHtBcnJheX0gaGVhZGVycyBUaGUgaGVhZGVycyBmb3IgdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2VcbiAqIEBwYXJhbSB7QXJyYXl8RnVuY3Rpb259IGZucyBBIHNpbmdsZSBmdW5jdGlvbiBvciBBcnJheSBvZiBmdW5jdGlvbnNcbiAqIEByZXR1cm5zIHsqfSBUaGUgcmVzdWx0aW5nIHRyYW5zZm9ybWVkIGRhdGFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGRhdGEsIGhlYWRlcnMsIGZucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbihkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzPzI0NDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGtEQUFTO0FBQzdCLDBCQUEwQixtQkFBTyxDQUFDLDhGQUErQjs7QUFFakU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsZ0VBQWdCO0FBQ3RDLEdBQUc7QUFDSDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyxpRUFBaUI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sWUFBWTtBQUNuQjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUnKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG52YXIgZGVmYXVsdHMgPSB7XG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0FjY2VwdCcpO1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7IC8qIElnbm9yZSAqLyB9XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9XG59O1xuXG5kZWZhdWx0cy5oZWFkZXJzID0ge1xuICBjb21tb246IHtcbiAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKidcbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/defaults.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcz8xZDJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanM/MzBiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMscURBQVk7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyU0MC9naSwgJ0AnKS5cbiAgICByZXBsYWNlKC8lM0EvZ2ksICc6JykuXG4gICAgcmVwbGFjZSgvJTI0L2csICckJykuXG4gICAgcmVwbGFjZSgvJTJDL2dpLCAnLCcpLlxuICAgIHJlcGxhY2UoLyUyMC9nLCAnKycpLlxuICAgIHJlcGxhY2UoLyU1Qi9naSwgJ1snKS5cbiAgICByZXBsYWNlKC8lNUQvZ2ksICddJyk7XG59XG5cbi8qKlxuICogQnVpbGQgYSBVUkwgYnkgYXBwZW5kaW5nIHBhcmFtcyB0byB0aGUgZW5kXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgYmFzZSBvZiB0aGUgdXJsIChlLmcuLCBodHRwOi8vd3d3Lmdvb2dsZS5jb20pXG4gKiBAcGFyYW0ge29iamVjdH0gW3BhcmFtc10gVGhlIHBhcmFtcyB0byBiZSBhcHBlbmRlZFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGZvcm1hdHRlZCB1cmxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgcGFyYW1zU2VyaWFsaXplcikge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdmFyIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIGlmIChwYXJhbXNTZXJpYWxpemVyKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtc1NlcmlhbGl6ZXIocGFyYW1zKTtcbiAgfSBlbHNlIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhwYXJhbXMpKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcmFtcy50b1N0cmluZygpO1xuICB9IGVsc2Uge1xuICAgIHZhciBwYXJ0cyA9IFtdO1xuXG4gICAgdXRpbHMuZm9yRWFjaChwYXJhbXMsIGZ1bmN0aW9uIHNlcmlhbGl6ZSh2YWwsIGtleSkge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh1dGlscy5pc0FycmF5KHZhbCkpIHtcbiAgICAgICAga2V5ID0ga2V5ICsgJ1tdJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbCA9IFt2YWxdO1xuICAgICAgfVxuXG4gICAgICB1dGlscy5mb3JFYWNoKHZhbCwgZnVuY3Rpb24gcGFyc2VWYWx1ZSh2KSB7XG4gICAgICAgIGlmICh1dGlscy5pc0RhdGUodikpIHtcbiAgICAgICAgICB2ID0gdi50b0lTT1N0cmluZygpO1xuICAgICAgICB9IGVsc2UgaWYgKHV0aWxzLmlzT2JqZWN0KHYpKSB7XG4gICAgICAgICAgdiA9IEpTT04uc3RyaW5naWZ5KHYpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnRzLnB1c2goZW5jb2RlKGtleSkgKyAnPScgKyBlbmNvZGUodikpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFydHMuam9pbignJicpO1xuICB9XG5cbiAgaWYgKHNlcmlhbGl6ZWRQYXJhbXMpIHtcbiAgICB2YXIgaGFzaG1hcmtJbmRleCA9IHVybC5pbmRleE9mKCcjJyk7XG4gICAgaWYgKGhhc2htYXJrSW5kZXggIT09IC0xKSB7XG4gICAgICB1cmwgPSB1cmwuc2xpY2UoMCwgaGFzaG1hcmtJbmRleCk7XG4gICAgfVxuXG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanM/ZTY4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcz83YWFjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxxREFBWTs7QUFFaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDBDQUEwQztBQUMxQyxTQUFTOztBQUVUO0FBQ0EsNERBQTRELHdCQUF3QjtBQUNwRjtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQywrQkFBK0IsYUFBYSxFQUFFO0FBQzlDO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcz9kOTI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGVcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBVUkwgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHNwZWNpZmllZCBVUkwgaXMgYWJzb2x1dGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkXFwrXFwtXFwuXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzPzM5MzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoXG4gIHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBoYXZlIGZ1bGwgc3VwcG9ydCBvZiB0aGUgQVBJcyBuZWVkZWQgdG8gdGVzdFxuICAvLyB3aGV0aGVyIHRoZSByZXF1ZXN0IFVSTCBpcyBvZiB0aGUgc2FtZSBvcmlnaW4gYXMgY3VycmVudCBsb2NhdGlvbi5cbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgdmFyIG1zaWUgPSAvKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgICAgdmFyIHVybFBhcnNpbmdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgdmFyIG9yaWdpblVSTDtcblxuICAgICAgLyoqXG4gICAgKiBQYXJzZSBhIFVSTCB0byBkaXNjb3ZlciBpdCdzIGNvbXBvbmVudHNcbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gdXJsIFRoZSBVUkwgdG8gYmUgcGFyc2VkXG4gICAgKiBAcmV0dXJucyB7T2JqZWN0fVxuICAgICovXG4gICAgICBmdW5jdGlvbiByZXNvbHZlVVJMKHVybCkge1xuICAgICAgICB2YXIgaHJlZiA9IHVybDtcblxuICAgICAgICBpZiAobXNpZSkge1xuICAgICAgICAvLyBJRSBuZWVkcyBhdHRyaWJ1dGUgc2V0IHR3aWNlIHRvIG5vcm1hbGl6ZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gICAgICAgICAgaHJlZiA9IHVybFBhcnNpbmdOb2RlLmhyZWY7XG4gICAgICAgIH1cblxuICAgICAgICB1cmxQYXJzaW5nTm9kZS5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCBocmVmKTtcblxuICAgICAgICAvLyB1cmxQYXJzaW5nTm9kZSBwcm92aWRlcyB0aGUgVXJsVXRpbHMgaW50ZXJmYWNlIC0gaHR0cDovL3VybC5zcGVjLndoYXR3Zy5vcmcvI3VybHV0aWxzXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaHJlZjogdXJsUGFyc2luZ05vZGUuaHJlZixcbiAgICAgICAgICBwcm90b2NvbDogdXJsUGFyc2luZ05vZGUucHJvdG9jb2wgPyB1cmxQYXJzaW5nTm9kZS5wcm90b2NvbC5yZXBsYWNlKC86JC8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3Q6IHVybFBhcnNpbmdOb2RlLmhvc3QsXG4gICAgICAgICAgc2VhcmNoOiB1cmxQYXJzaW5nTm9kZS5zZWFyY2ggPyB1cmxQYXJzaW5nTm9kZS5zZWFyY2gucmVwbGFjZSgvXlxcPy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhhc2g6IHVybFBhcnNpbmdOb2RlLmhhc2ggPyB1cmxQYXJzaW5nTm9kZS5oYXNoLnJlcGxhY2UoL14jLywgJycpIDogJycsXG4gICAgICAgICAgaG9zdG5hbWU6IHVybFBhcnNpbmdOb2RlLmhvc3RuYW1lLFxuICAgICAgICAgIHBvcnQ6IHVybFBhcnNpbmdOb2RlLnBvcnQsXG4gICAgICAgICAgcGF0aG5hbWU6ICh1cmxQYXJzaW5nTm9kZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJykgP1xuICAgICAgICAgICAgdXJsUGFyc2luZ05vZGUucGF0aG5hbWUgOlxuICAgICAgICAgICAgJy8nICsgdXJsUGFyc2luZ05vZGUucGF0aG5hbWVcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgb3JpZ2luVVJMID0gcmVzb2x2ZVVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG5cbiAgICAgIC8qKlxuICAgICogRGV0ZXJtaW5lIGlmIGEgVVJMIHNoYXJlcyB0aGUgc2FtZSBvcmlnaW4gYXMgdGhlIGN1cnJlbnQgbG9jYXRpb25cbiAgICAqXG4gICAgKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdFVSTCBUaGUgVVJMIHRvIHRlc3RcbiAgICAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luLCBvdGhlcndpc2UgZmFsc2VcbiAgICAqL1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGlzVVJMU2FtZU9yaWdpbihyZXF1ZXN0VVJMKSB7XG4gICAgICAgIHZhciBwYXJzZWQgPSAodXRpbHMuaXNTdHJpbmcocmVxdWVzdFVSTCkpID8gcmVzb2x2ZVVSTChyZXF1ZXN0VVJMKSA6IHJlcXVlc3RVUkw7XG4gICAgICAgIHJldHVybiAocGFyc2VkLnByb3RvY29sID09PSBvcmlnaW5VUkwucHJvdG9jb2wgJiZcbiAgICAgICAgICAgIHBhcnNlZC5ob3N0ID09PSBvcmlnaW5VUkwuaG9zdCk7XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudnMgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcz9jOGFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyxtREFBVTs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCBub3JtYWxpemVkTmFtZSkge1xuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMsIGZ1bmN0aW9uIHByb2Nlc3NIZWFkZXIodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gbm9ybWFsaXplZE5hbWUgJiYgbmFtZS50b1VwcGVyQ2FzZSgpID09PSBub3JtYWxpemVkTmFtZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICBoZWFkZXJzW25vcm1hbGl6ZWROYW1lXSA9IHZhbHVlO1xuICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzP2MzNDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLHFEQUFZOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLGVBQWU7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbi8vIEhlYWRlcnMgd2hvc2UgZHVwbGljYXRlcyBhcmUgaWdub3JlZCBieSBub2RlXG4vLyBjLmYuIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvaHR0cC5odG1sI2h0dHBfbWVzc2FnZV9oZWFkZXJzXG52YXIgaWdub3JlRHVwbGljYXRlT2YgPSBbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXTtcblxuLyoqXG4gKiBQYXJzZSBoZWFkZXJzIGludG8gYW4gb2JqZWN0XG4gKlxuICogYGBgXG4gKiBEYXRlOiBXZWQsIDI3IEF1ZyAyMDE0IDA4OjU4OjQ5IEdNVFxuICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uXG4gKiBDb25uZWN0aW9uOiBrZWVwLWFsaXZlXG4gKiBUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZFxuICogYGBgXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGhlYWRlcnMgSGVhZGVycyBuZWVkaW5nIHRvIGJlIHBhcnNlZFxuICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykge1xuICB2YXIgcGFyc2VkID0ge307XG4gIHZhciBrZXk7XG4gIHZhciB2YWw7XG4gIHZhciBpO1xuXG4gIGlmICghaGVhZGVycykgeyByZXR1cm4gcGFyc2VkOyB9XG5cbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLnNwbGl0KCdcXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHtcbiAgICBpID0gbGluZS5pbmRleE9mKCc6Jyk7XG4gICAga2V5ID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cigwLCBpKSkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7XG5cbiAgICBpZiAoa2V5KSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0gJiYgaWdub3JlRHVwbGljYXRlT2YuaW5kZXhPZihrZXkpID49IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gKHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gOiBbXSkuY29uY2F0KFt2YWxdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcnNlZFtrZXldID0gcGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSArICcsICcgKyB2YWwgOiB2YWw7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gcGFyc2VkO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzPzBkZjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFN5bnRhY3RpYyBzdWdhciBmb3IgaW52b2tpbmcgYSBmdW5jdGlvbiBhbmQgZXhwYW5kaW5nIGFuIGFycmF5IGZvciBhcmd1bWVudHMuXG4gKlxuICogQ29tbW9uIHVzZSBjYXNlIHdvdWxkIGJlIHRvIHVzZSBgRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5YC5cbiAqXG4gKiAgYGBganNcbiAqICBmdW5jdGlvbiBmKHgsIHksIHopIHt9XG4gKiAgdmFyIGFyZ3MgPSBbMSwgMiwgM107XG4gKiAgZi5hcHBseShudWxsLCBhcmdzKTtcbiAqICBgYGBcbiAqXG4gKiBXaXRoIGBzcHJlYWRgIHRoaXMgZXhhbXBsZSBjYW4gYmUgcmUtd3JpdHRlbi5cbiAqXG4gKiAgYGBganNcbiAqICBzcHJlYWQoZnVuY3Rpb24oeCwgeSwgeikge30pKFsxLCAyLCAzXSk7XG4gKiAgYGBgXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/qs/lib/formats.js":
/*!****************************************!*\
  !*** ./node_modules/qs/lib/formats.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXMvbGliL2Zvcm1hdHMuanM/YjMxMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBLFdBQVcsbUJBQU8sQ0FBQywrQ0FBUzs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXMvbGliL2Zvcm1hdHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZXBsYWNlID0gU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlO1xudmFyIHBlcmNlbnRUd2VudGllcyA9IC8lMjAvZztcblxudmFyIHV0aWwgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbnZhciBGb3JtYXQgPSB7XG4gICAgUkZDMTczODogJ1JGQzE3MzgnLFxuICAgIFJGQzM5ODY6ICdSRkMzOTg2J1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB1dGlsLmFzc2lnbihcbiAgICB7XG4gICAgICAgICdkZWZhdWx0JzogRm9ybWF0LlJGQzM5ODYsXG4gICAgICAgIGZvcm1hdHRlcnM6IHtcbiAgICAgICAgICAgIFJGQzE3Mzg6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXBsYWNlLmNhbGwodmFsdWUsIHBlcmNlbnRUd2VudGllcywgJysnKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSRkMzOTg2OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgRm9ybWF0XG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/qs/lib/formats.js\n");

/***/ }),

/***/ "./node_modules/qs/lib/stringify.js":
/*!******************************************!*\
  !*** ./node_modules/qs/lib/stringify.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcXMvbGliL3N0cmluZ2lmeS5qcz80MTI3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQywrQ0FBUztBQUM3QixjQUFjLG1CQUFPLENBQUMsbURBQVc7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixvQkFBb0I7QUFDdkM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsbUJBQW1CLG9CQUFvQjtBQUN2Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9xcy9saWIvc3RyaW5naWZ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgZm9ybWF0cyA9IHJlcXVpcmUoJy4vZm9ybWF0cycpO1xudmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciBhcnJheVByZWZpeEdlbmVyYXRvcnMgPSB7XG4gICAgYnJhY2tldHM6IGZ1bmN0aW9uIGJyYWNrZXRzKHByZWZpeCkge1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgJ1tdJztcbiAgICB9LFxuICAgIGNvbW1hOiAnY29tbWEnLFxuICAgIGluZGljZXM6IGZ1bmN0aW9uIGluZGljZXMocHJlZml4LCBrZXkpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArICdbJyArIGtleSArICddJztcbiAgICB9LFxuICAgIHJlcGVhdDogZnVuY3Rpb24gcmVwZWF0KHByZWZpeCkge1xuICAgICAgICByZXR1cm4gcHJlZml4O1xuICAgIH1cbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbnZhciBwdXNoID0gQXJyYXkucHJvdG90eXBlLnB1c2g7XG52YXIgcHVzaFRvQXJyYXkgPSBmdW5jdGlvbiAoYXJyLCB2YWx1ZU9yQXJyYXkpIHtcbiAgICBwdXNoLmFwcGx5KGFyciwgaXNBcnJheSh2YWx1ZU9yQXJyYXkpID8gdmFsdWVPckFycmF5IDogW3ZhbHVlT3JBcnJheV0pO1xufTtcblxudmFyIHRvSVNPID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc7XG5cbnZhciBkZWZhdWx0Rm9ybWF0ID0gZm9ybWF0c1snZGVmYXVsdCddO1xudmFyIGRlZmF1bHRzID0ge1xuICAgIGFkZFF1ZXJ5UHJlZml4OiBmYWxzZSxcbiAgICBhbGxvd0RvdHM6IGZhbHNlLFxuICAgIGNoYXJzZXQ6ICd1dGYtOCcsXG4gICAgY2hhcnNldFNlbnRpbmVsOiBmYWxzZSxcbiAgICBkZWxpbWl0ZXI6ICcmJyxcbiAgICBlbmNvZGU6IHRydWUsXG4gICAgZW5jb2RlcjogdXRpbHMuZW5jb2RlLFxuICAgIGVuY29kZVZhbHVlc09ubHk6IGZhbHNlLFxuICAgIGZvcm1hdDogZGVmYXVsdEZvcm1hdCxcbiAgICBmb3JtYXR0ZXI6IGZvcm1hdHMuZm9ybWF0dGVyc1tkZWZhdWx0Rm9ybWF0XSxcbiAgICAvLyBkZXByZWNhdGVkXG4gICAgaW5kaWNlczogZmFsc2UsXG4gICAgc2VyaWFsaXplRGF0ZTogZnVuY3Rpb24gc2VyaWFsaXplRGF0ZShkYXRlKSB7XG4gICAgICAgIHJldHVybiB0b0lTTy5jYWxsKGRhdGUpO1xuICAgIH0sXG4gICAgc2tpcE51bGxzOiBmYWxzZSxcbiAgICBzdHJpY3ROdWxsSGFuZGxpbmc6IGZhbHNlXG59O1xuXG52YXIgaXNOb25OdWxsaXNoUHJpbWl0aXZlID0gZnVuY3Rpb24gaXNOb25OdWxsaXNoUHJpbWl0aXZlKHYpIHtcbiAgICByZXR1cm4gdHlwZW9mIHYgPT09ICdzdHJpbmcnXG4gICAgICAgIHx8IHR5cGVvZiB2ID09PSAnbnVtYmVyJ1xuICAgICAgICB8fCB0eXBlb2YgdiA9PT0gJ2Jvb2xlYW4nXG4gICAgICAgIHx8IHR5cGVvZiB2ID09PSAnc3ltYm9sJ1xuICAgICAgICB8fCB0eXBlb2YgdiA9PT0gJ2JpZ2ludCc7XG59O1xuXG52YXIgc3RyaW5naWZ5ID0gZnVuY3Rpb24gc3RyaW5naWZ5KFxuICAgIG9iamVjdCxcbiAgICBwcmVmaXgsXG4gICAgZ2VuZXJhdGVBcnJheVByZWZpeCxcbiAgICBzdHJpY3ROdWxsSGFuZGxpbmcsXG4gICAgc2tpcE51bGxzLFxuICAgIGVuY29kZXIsXG4gICAgZmlsdGVyLFxuICAgIHNvcnQsXG4gICAgYWxsb3dEb3RzLFxuICAgIHNlcmlhbGl6ZURhdGUsXG4gICAgZm9ybWF0dGVyLFxuICAgIGVuY29kZVZhbHVlc09ubHksXG4gICAgY2hhcnNldFxuKSB7XG4gICAgdmFyIG9iaiA9IG9iamVjdDtcbiAgICBpZiAodHlwZW9mIGZpbHRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBvYmogPSBmaWx0ZXIocHJlZml4LCBvYmopO1xuICAgIH0gZWxzZSBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICBvYmogPSBzZXJpYWxpemVEYXRlKG9iaik7XG4gICAgfSBlbHNlIGlmIChnZW5lcmF0ZUFycmF5UHJlZml4ID09PSAnY29tbWEnICYmIGlzQXJyYXkob2JqKSkge1xuICAgICAgICBvYmogPSBvYmouam9pbignLCcpO1xuICAgIH1cblxuICAgIGlmIChvYmogPT09IG51bGwpIHtcbiAgICAgICAgaWYgKHN0cmljdE51bGxIYW5kbGluZykge1xuICAgICAgICAgICAgcmV0dXJuIGVuY29kZXIgJiYgIWVuY29kZVZhbHVlc09ubHkgPyBlbmNvZGVyKHByZWZpeCwgZGVmYXVsdHMuZW5jb2RlciwgY2hhcnNldCwgJ2tleScpIDogcHJlZml4O1xuICAgICAgICB9XG5cbiAgICAgICAgb2JqID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGlzTm9uTnVsbGlzaFByaW1pdGl2ZShvYmopIHx8IHV0aWxzLmlzQnVmZmVyKG9iaikpIHtcbiAgICAgICAgaWYgKGVuY29kZXIpIHtcbiAgICAgICAgICAgIHZhciBrZXlWYWx1ZSA9IGVuY29kZVZhbHVlc09ubHkgPyBwcmVmaXggOiBlbmNvZGVyKHByZWZpeCwgZGVmYXVsdHMuZW5jb2RlciwgY2hhcnNldCwgJ2tleScpO1xuICAgICAgICAgICAgcmV0dXJuIFtmb3JtYXR0ZXIoa2V5VmFsdWUpICsgJz0nICsgZm9ybWF0dGVyKGVuY29kZXIob2JqLCBkZWZhdWx0cy5lbmNvZGVyLCBjaGFyc2V0LCAndmFsdWUnKSldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbZm9ybWF0dGVyKHByZWZpeCkgKyAnPScgKyBmb3JtYXR0ZXIoU3RyaW5nKG9iaikpXTtcbiAgICB9XG5cbiAgICB2YXIgdmFsdWVzID0gW107XG5cbiAgICBpZiAodHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9XG5cbiAgICB2YXIgb2JqS2V5cztcbiAgICBpZiAoaXNBcnJheShmaWx0ZXIpKSB7XG4gICAgICAgIG9iaktleXMgPSBmaWx0ZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgICAgICBvYmpLZXlzID0gc29ydCA/IGtleXMuc29ydChzb3J0KSA6IGtleXM7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmpLZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBrZXkgPSBvYmpLZXlzW2ldO1xuXG4gICAgICAgIGlmIChza2lwTnVsbHMgJiYgb2JqW2tleV0gPT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgICAgICAgICAgcHVzaFRvQXJyYXkodmFsdWVzLCBzdHJpbmdpZnkoXG4gICAgICAgICAgICAgICAgb2JqW2tleV0sXG4gICAgICAgICAgICAgICAgdHlwZW9mIGdlbmVyYXRlQXJyYXlQcmVmaXggPT09ICdmdW5jdGlvbicgPyBnZW5lcmF0ZUFycmF5UHJlZml4KHByZWZpeCwga2V5KSA6IHByZWZpeCxcbiAgICAgICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgICAgIHN0cmljdE51bGxIYW5kbGluZyxcbiAgICAgICAgICAgICAgICBza2lwTnVsbHMsXG4gICAgICAgICAgICAgICAgZW5jb2RlcixcbiAgICAgICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICAgICAgc29ydCxcbiAgICAgICAgICAgICAgICBhbGxvd0RvdHMsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplRGF0ZSxcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXIsXG4gICAgICAgICAgICAgICAgZW5jb2RlVmFsdWVzT25seSxcbiAgICAgICAgICAgICAgICBjaGFyc2V0XG4gICAgICAgICAgICApKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHB1c2hUb0FycmF5KHZhbHVlcywgc3RyaW5naWZ5KFxuICAgICAgICAgICAgICAgIG9ialtrZXldLFxuICAgICAgICAgICAgICAgIHByZWZpeCArIChhbGxvd0RvdHMgPyAnLicgKyBrZXkgOiAnWycgKyBrZXkgKyAnXScpLFxuICAgICAgICAgICAgICAgIGdlbmVyYXRlQXJyYXlQcmVmaXgsXG4gICAgICAgICAgICAgICAgc3RyaWN0TnVsbEhhbmRsaW5nLFxuICAgICAgICAgICAgICAgIHNraXBOdWxscyxcbiAgICAgICAgICAgICAgICBlbmNvZGVyLFxuICAgICAgICAgICAgICAgIGZpbHRlcixcbiAgICAgICAgICAgICAgICBzb3J0LFxuICAgICAgICAgICAgICAgIGFsbG93RG90cyxcbiAgICAgICAgICAgICAgICBzZXJpYWxpemVEYXRlLFxuICAgICAgICAgICAgICAgIGZvcm1hdHRlcixcbiAgICAgICAgICAgICAgICBlbmNvZGVWYWx1ZXNPbmx5LFxuICAgICAgICAgICAgICAgIGNoYXJzZXRcbiAgICAgICAgICAgICkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlcztcbn07XG5cbnZhciBub3JtYWxpemVTdHJpbmdpZnlPcHRpb25zID0gZnVuY3Rpb24gbm9ybWFsaXplU3RyaW5naWZ5T3B0aW9ucyhvcHRzKSB7XG4gICAgaWYgKCFvcHRzKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0cztcbiAgICB9XG5cbiAgICBpZiAob3B0cy5lbmNvZGVyICE9PSBudWxsICYmIG9wdHMuZW5jb2RlciAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRzLmVuY29kZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRW5jb2RlciBoYXMgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICB2YXIgY2hhcnNldCA9IG9wdHMuY2hhcnNldCB8fCBkZWZhdWx0cy5jaGFyc2V0O1xuICAgIGlmICh0eXBlb2Ygb3B0cy5jaGFyc2V0ICE9PSAndW5kZWZpbmVkJyAmJiBvcHRzLmNoYXJzZXQgIT09ICd1dGYtOCcgJiYgb3B0cy5jaGFyc2V0ICE9PSAnaXNvLTg4NTktMScpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGNoYXJzZXQgb3B0aW9uIG11c3QgYmUgZWl0aGVyIHV0Zi04LCBpc28tODg1OS0xLCBvciB1bmRlZmluZWQnKTtcbiAgICB9XG5cbiAgICB2YXIgZm9ybWF0ID0gZm9ybWF0c1snZGVmYXVsdCddO1xuICAgIGlmICh0eXBlb2Ygb3B0cy5mb3JtYXQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICghaGFzLmNhbGwoZm9ybWF0cy5mb3JtYXR0ZXJzLCBvcHRzLmZvcm1hdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZm9ybWF0IG9wdGlvbiBwcm92aWRlZC4nKTtcbiAgICAgICAgfVxuICAgICAgICBmb3JtYXQgPSBvcHRzLmZvcm1hdDtcbiAgICB9XG4gICAgdmFyIGZvcm1hdHRlciA9IGZvcm1hdHMuZm9ybWF0dGVyc1tmb3JtYXRdO1xuXG4gICAgdmFyIGZpbHRlciA9IGRlZmF1bHRzLmZpbHRlcjtcbiAgICBpZiAodHlwZW9mIG9wdHMuZmlsdGVyID09PSAnZnVuY3Rpb24nIHx8IGlzQXJyYXkob3B0cy5maWx0ZXIpKSB7XG4gICAgICAgIGZpbHRlciA9IG9wdHMuZmlsdGVyO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGFkZFF1ZXJ5UHJlZml4OiB0eXBlb2Ygb3B0cy5hZGRRdWVyeVByZWZpeCA9PT0gJ2Jvb2xlYW4nID8gb3B0cy5hZGRRdWVyeVByZWZpeCA6IGRlZmF1bHRzLmFkZFF1ZXJ5UHJlZml4LFxuICAgICAgICBhbGxvd0RvdHM6IHR5cGVvZiBvcHRzLmFsbG93RG90cyA9PT0gJ3VuZGVmaW5lZCcgPyBkZWZhdWx0cy5hbGxvd0RvdHMgOiAhIW9wdHMuYWxsb3dEb3RzLFxuICAgICAgICBjaGFyc2V0OiBjaGFyc2V0LFxuICAgICAgICBjaGFyc2V0U2VudGluZWw6IHR5cGVvZiBvcHRzLmNoYXJzZXRTZW50aW5lbCA9PT0gJ2Jvb2xlYW4nID8gb3B0cy5jaGFyc2V0U2VudGluZWwgOiBkZWZhdWx0cy5jaGFyc2V0U2VudGluZWwsXG4gICAgICAgIGRlbGltaXRlcjogdHlwZW9mIG9wdHMuZGVsaW1pdGVyID09PSAndW5kZWZpbmVkJyA/IGRlZmF1bHRzLmRlbGltaXRlciA6IG9wdHMuZGVsaW1pdGVyLFxuICAgICAgICBlbmNvZGU6IHR5cGVvZiBvcHRzLmVuY29kZSA9PT0gJ2Jvb2xlYW4nID8gb3B0cy5lbmNvZGUgOiBkZWZhdWx0cy5lbmNvZGUsXG4gICAgICAgIGVuY29kZXI6IHR5cGVvZiBvcHRzLmVuY29kZXIgPT09ICdmdW5jdGlvbicgPyBvcHRzLmVuY29kZXIgOiBkZWZhdWx0cy5lbmNvZGVyLFxuICAgICAgICBlbmNvZGVWYWx1ZXNPbmx5OiB0eXBlb2Ygb3B0cy5lbmNvZGVWYWx1ZXNPbmx5ID09PSAnYm9vbGVhbicgPyBvcHRzLmVuY29kZVZhbHVlc09ubHkgOiBkZWZhdWx0cy5lbmNvZGVWYWx1ZXNPbmx5LFxuICAgICAgICBmaWx0ZXI6IGZpbHRlcixcbiAgICAgICAgZm9ybWF0dGVyOiBmb3JtYXR0ZXIsXG4gICAgICAgIHNlcmlhbGl6ZURhdGU6IHR5cGVvZiBvcHRzLnNlcmlhbGl6ZURhdGUgPT09ICdmdW5jdGlvbicgPyBvcHRzLnNlcmlhbGl6ZURhdGUgOiBkZWZhdWx0cy5zZXJpYWxpemVEYXRlLFxuICAgICAgICBza2lwTnVsbHM6IHR5cGVvZiBvcHRzLnNraXBOdWxscyA9PT0gJ2Jvb2xlYW4nID8gb3B0cy5za2lwTnVsbHMgOiBkZWZhdWx0cy5za2lwTnVsbHMsXG4gICAgICAgIHNvcnQ6IHR5cGVvZiBvcHRzLnNvcnQgPT09ICdmdW5jdGlvbicgPyBvcHRzLnNvcnQgOiBudWxsLFxuICAgICAgICBzdHJpY3ROdWxsSGFuZGxpbmc6IHR5cGVvZiBvcHRzLnN0cmljdE51bGxIYW5kbGluZyA9PT0gJ2Jvb2xlYW4nID8gb3B0cy5zdHJpY3ROdWxsSGFuZGxpbmcgOiBkZWZhdWx0cy5zdHJpY3ROdWxsSGFuZGxpbmdcbiAgICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBvcHRzKSB7XG4gICAgdmFyIG9iaiA9IG9iamVjdDtcbiAgICB2YXIgb3B0aW9ucyA9IG5vcm1hbGl6ZVN0cmluZ2lmeU9wdGlvbnMob3B0cyk7XG5cbiAgICB2YXIgb2JqS2V5cztcbiAgICB2YXIgZmlsdGVyO1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmZpbHRlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBmaWx0ZXIgPSBvcHRpb25zLmZpbHRlcjtcbiAgICAgICAgb2JqID0gZmlsdGVyKCcnLCBvYmopO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShvcHRpb25zLmZpbHRlcikpIHtcbiAgICAgICAgZmlsdGVyID0gb3B0aW9ucy5maWx0ZXI7XG4gICAgICAgIG9iaktleXMgPSBmaWx0ZXI7XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBbXTtcblxuICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cblxuICAgIHZhciBhcnJheUZvcm1hdDtcbiAgICBpZiAob3B0cyAmJiBvcHRzLmFycmF5Rm9ybWF0IGluIGFycmF5UHJlZml4R2VuZXJhdG9ycykge1xuICAgICAgICBhcnJheUZvcm1hdCA9IG9wdHMuYXJyYXlGb3JtYXQ7XG4gICAgfSBlbHNlIGlmIChvcHRzICYmICdpbmRpY2VzJyBpbiBvcHRzKSB7XG4gICAgICAgIGFycmF5Rm9ybWF0ID0gb3B0cy5pbmRpY2VzID8gJ2luZGljZXMnIDogJ3JlcGVhdCc7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgYXJyYXlGb3JtYXQgPSAnaW5kaWNlcyc7XG4gICAgfVxuXG4gICAgdmFyIGdlbmVyYXRlQXJyYXlQcmVmaXggPSBhcnJheVByZWZpeEdlbmVyYXRvcnNbYXJyYXlGb3JtYXRdO1xuXG4gICAgaWYgKCFvYmpLZXlzKSB7XG4gICAgICAgIG9iaktleXMgPSBPYmplY3Qua2V5cyhvYmopO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25zLnNvcnQpIHtcbiAgICAgICAgb2JqS2V5cy5zb3J0KG9wdGlvbnMuc29ydCk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmpLZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBrZXkgPSBvYmpLZXlzW2ldO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNraXBOdWxscyAmJiBvYmpba2V5XSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcHVzaFRvQXJyYXkoa2V5cywgc3RyaW5naWZ5KFxuICAgICAgICAgICAgb2JqW2tleV0sXG4gICAgICAgICAgICBrZXksXG4gICAgICAgICAgICBnZW5lcmF0ZUFycmF5UHJlZml4LFxuICAgICAgICAgICAgb3B0aW9ucy5zdHJpY3ROdWxsSGFuZGxpbmcsXG4gICAgICAgICAgICBvcHRpb25zLnNraXBOdWxscyxcbiAgICAgICAgICAgIG9wdGlvbnMuZW5jb2RlID8gb3B0aW9ucy5lbmNvZGVyIDogbnVsbCxcbiAgICAgICAgICAgIG9wdGlvbnMuZmlsdGVyLFxuICAgICAgICAgICAgb3B0aW9ucy5zb3J0LFxuICAgICAgICAgICAgb3B0aW9ucy5hbGxvd0RvdHMsXG4gICAgICAgICAgICBvcHRpb25zLnNlcmlhbGl6ZURhdGUsXG4gICAgICAgICAgICBvcHRpb25zLmZvcm1hdHRlcixcbiAgICAgICAgICAgIG9wdGlvbnMuZW5jb2RlVmFsdWVzT25seSxcbiAgICAgICAgICAgIG9wdGlvbnMuY2hhcnNldFxuICAgICAgICApKTtcbiAgICB9XG5cbiAgICB2YXIgam9pbmVkID0ga2V5cy5qb2luKG9wdGlvbnMuZGVsaW1pdGVyKTtcbiAgICB2YXIgcHJlZml4ID0gb3B0aW9ucy5hZGRRdWVyeVByZWZpeCA9PT0gdHJ1ZSA/ICc/JyA6ICcnO1xuXG4gICAgaWYgKG9wdGlvbnMuY2hhcnNldFNlbnRpbmVsKSB7XG4gICAgICAgIGlmIChvcHRpb25zLmNoYXJzZXQgPT09ICdpc28tODg1OS0xJykge1xuICAgICAgICAgICAgLy8gZW5jb2RlVVJJQ29tcG9uZW50KCcmIzEwMDAzOycpLCB0aGUgXCJudW1lcmljIGVudGl0eVwiIHJlcHJlc2VudGF0aW9uIG9mIGEgY2hlY2ttYXJrXG4gICAgICAgICAgICBwcmVmaXggKz0gJ3V0Zjg9JTI2JTIzMTAwMDMlM0ImJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGVuY29kZVVSSUNvbXBvbmVudCgn4pyTJylcbiAgICAgICAgICAgIHByZWZpeCArPSAndXRmOD0lRTIlOUMlOTMmJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBqb2luZWQubGVuZ3RoID4gMCA/IHByZWZpeCArIGpvaW5lZCA6ICcnO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/qs/lib/stringify.js\n");

/***/ }),

/***/ "./node_modules/qs/lib/utils.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/utils.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/qs/lib/utils.js\n");

/***/ }),

/***/ "./src/PrestoUIInterface.js":
/*!**********************************!*\
  !*** ./src/PrestoUIInterface.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar prestoDom = __webpack_require__(/*! ./doms */ \"./src/doms/index.js\");\nvar helpers = __webpack_require__(/*! ./helpers */ \"./src/helpers/index.js\");\nvar webParseParams;\nvar iOSParseParams;\nvar parseParams;\nvar helper = __webpack_require__(/*! ./helper */ \"./src/helper.js\");\n\nif (true) {\n  webParseParams = helpers.web.parseParams;\n} else {}\n\nfunction domAll(elem) {\n  if (!elem.__ref) {\n    elem.__ref = createPrestoElement();\n  }\n\n  if (elem.props.id) {\n    elem.__ref.__id = parseInt(elem.props.id, 10) || elem.__ref.__id;\n  }\n\n  var type = helper.clone(elem.type, null);\n  var props = helper.clone(elem.props, null);\n\n  if (props.focus == false && \"WEB\" === \"ANDROID\") {\n    delete props.focus;\n  }\n\n  var children = [];\n\n  for (var i = 0; i < elem.children.length; i++) {\n    children.push(domAll(elem.children[i]));\n  }\n\n  if (__OS == \"WEB\" && props.onResize) {\n    window.__resizeEvent = props.onResize;\n  }\n\n  props.id = elem.__ref.__id;\n  if (elem.parentType && \"WEB\" == \"ANDROID\") return prestoDom({ elemType: type, parentType: elem.parentType }, props, children);\n\n  return prestoDom(type, props, children);\n}\n\nfunction getDomToRender(elem) {\n  var res = domAll(elem);\n  if (false) {} else {\n    return res;\n  }\n}\n\n// Not exported\nfunction cmdForAndroid(config, set, type) {\n  if (set) {\n    if (config.id) {\n      var obj = parseParams(type, config, \"set\");\n      var cmd = obj.runInUI.replace(\"this->setId\", \"set_view=ctx->findViewById\").replace(/this->/g, \"get_view->\");\n      cmd = cmd.replace(/PARAM_CTR_HOLDER[^;]*/g, \"get_view->getLayoutParams;\");\n      obj.runInUI = cmd;\n      return obj;\n    } else {\n      console.error(\"ID null, this is not supposed to happen. Debug this or/and raise a issue in bitbucket.\");\n    }\n    return {};\n  }\n\n  var _id = config.id;\n  var cmd = \"set_view=ctx->findViewById:i_\" + _id + \";\";\n  // var runInUI;\n  delete config.id;\n  config.root = \"true\";\n  var obj = parseParams(type, config, \"get\");\n  obj.runInUI = cmd + obj.runInUI + ';';\n  obj.id = _id;\n  return obj;\n}\n\nfunction getRunInUICmd(prop) {\n  var cmd;\n  if (false) {} else if (false) {} else {\n    cmd = webParseParams(\"linearLayout\", prop, \"set\");\n  }\n  return cmd;\n}\n\n// Not exported\nfunction applyProp(element, attribute, set) {\n  var prop = {\n    id: element.__ref.__id\n  };\n  prop[attribute.value0] = attribute.value1;\n\n  if (attribute.value0 == 'focus' && attribute.value1 == false && \"WEB\" == \"ANDROID\") {\n    return;\n  }\n\n  if (false) { var cmd; } else if (false) {} else {\n    Android.runInUI(webParseParams(\"linearLayout\", prop, \"set\"));\n  }\n  // Android.runInUI(parseParams(\"linearLayout\", prop, \"set\"));\n}\n\nfunction replaceView(element, attribute, removeProp) {\n  // console.log(\"REPLACE VIEW\", element.__ref.__id, element.props);\n  var props = helper.clone(element.props, null);\n  props.id = element.__ref.__id;\n  var rep;\n  var viewGroups = [\"linearLayout\", \"relativeLayout\", \"scrollView\", \"frameLayout\", \"horizontalScrollView\"];\n\n  if (viewGroups.indexOf(element.type) != -1) {\n    props.root = true;\n    rep = prestoDom(element.type, props, []);\n  } else if (false) {} else {\n    rep = prestoDom(element.type, props, []);\n  }\n  if (false) {} else {\n    Android.replaceView(rep, element.__ref.__id);\n  }\n}\n\nfunction createPrestoElement() {\n  if (typeof window.__ui_id_sequence != \"undefined\" && window.__ui_id_sequence != null) {\n    return { __id: ++window.__ui_id_sequence };\n  } else {\n    window.__ui_id_sequence = typeof Android.getNewID == \"function\" ? parseInt(Android.getNewID()) * 1000000 : window.__PRESTO_ID;\n    return { __id: ++window.__ui_id_sequence };\n  }\n};\n\nfunction moveChild(child, parent, index) {\n  Android.moveView(child.__ref.__id, index);\n}\n\nfunction removeChild(child, parent, index) {\n  // console.log(\"Remove child :\", child.type);\n  Android.removeView(child.__ref.__id + \"\");\n}\n\nfunction addChild(child, parent, index) {\n  if (child.type == null) {\n    console.warn(\"child null\");\n  }\n  // console.log(\"Add child :\", child.__ref.__id, child.type);\n  var viewGroups = [\"linearLayout\", \"relativeLayout\", \"scrollView\", \"frameLayout\", \"horizontalScrollView\"];\n  if (false) {} else Android.addViewToParent(parent.__ref.__id, domAll(child), index, null, null);\n}\n\nfunction addAttribute(element, attribute) {\n  // console.log(\"add attr :\", attribute);\n  element.props[attribute.value0] = attribute.value1;\n  applyProp(element, attribute, true);\n}\n\nfunction removeAttribute(element, attribute) {\n  // console.log(\"remove attr :\", attribute);\n  replaceView(element, attribute, true);\n}\n\nfunction updateAttribute(element, attribute) {\n  // console.log(\"update attr :\", attribute);\n  element.props[attribute.value0] = attribute.value1;\n\n  applyProp(element, attribute, false);\n}\n\nfunction insertDom(root, dom, cb) {\n  root.children.push(dom);\n  dom.parentNode = root;\n  dom.__ref = createPrestoElement();\n  window.N = root;\n\n  var rootId = window.__ROOTSCREEN.idSet.root;\n\n  dom.props.root = true;\n\n  var length = window.__ROOTSCREEN.idSet.child.push(dom.__ref.__id);\n\n  var callback = window.callbackMapper(executePostProcess(cb));\n  if (false) {} else {\n    Android.addViewToParent(rootId, domAll(dom), length - 1, callback, null);\n  }\n\n  return dom.__ref.__id;\n}\n\nfunction executePostProcess(cb) {\n  return function () {\n    cb();\n\n    if (window.__dui_screen && window[\"afterRender\"]) {\n      for (var tag in window[\"afterRender\"][window.__dui_screen]) {\n        try {\n          window[\"afterRender\"][window.__dui_screen][tag]()();\n          window[\"afterRender\"][window.__dui_screen][\"executed\"] = true;\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n    }\n\n    if (JBridge && JBridge.setShadow) {\n      for (var tag in window.shadowObject) {\n        JBridge.setShadow(window.shadowObject[tag][\"level\"], JSON.stringify(window.shadowObject[tag][\"viewId\"]), JSON.stringify(window.shadowObject[tag][\"backgroundColor\"]), JSON.stringify(window.shadowObject[tag][\"blurValue\"]), JSON.stringify(window.shadowObject[tag][\"shadowColor\"]), JSON.stringify(window.shadowObject[tag][\"dx\"]), JSON.stringify(window.shadowObject[tag][\"dy\"]), JSON.stringify(window.shadowObject[tag][\"spread\"]), JSON.stringify(window.shadowObject[tag][\"factor\"]));\n      }\n    }\n  };\n}\n\nmodule.exports = {\n  domAll: domAll,\n  getDomToRender: getDomToRender,\n  getRunInUICmd: getRunInUICmd,\n  replaceView: replaceView,\n  createPrestoElement: createPrestoElement,\n  moveChild: moveChild,\n  removeChild: removeChild,\n  addChild: addChild,\n  addAttribute: addAttribute,\n  removeAttribute: removeAttribute,\n  updateProperty: updateAttribute,\n  addProperty: addAttribute,\n  insertDom: insertDom\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/PrestoUIInterface.js\n");

/***/ }),

/***/ "./src/WEB/AndroidInterface.js":
/*!*************************************!*\
  !*** ./src/WEB/AndroidInterface.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\nvar _require = __webpack_require__(/*! ./Render */ \"./src/WEB/Render.js\"),\n    inflateView = _require.inflateView,\n    computeChildDimens = _require.computeChildDimens,\n    List = _require.List,\n    postComputeLayoutDimens = _require.postComputeLayoutDimens,\n    preComputeLayoutDimens = _require.preComputeLayoutDimens;\n\nvar helper = __webpack_require__(/*! ../helper */ \"./src/helper.js\");\nvar callbackInvoker = __webpack_require__(/*! ../helpers/common/callbackInvoker */ \"./src/helpers/common/callbackInvoker.js\");\n\nvar _require2 = __webpack_require__(/*! ./ListPresto */ \"./src/WEB/ListPresto.js\"),\n    diffArray = _require2.diffArray;\n\nvar _require3 = __webpack_require__(/*! ./Utils */ \"./src/WEB/Utils.js\"),\n    addToContainerList = _require3.addToContainerList,\n    getContainer = _require3.getContainer,\n    getParentView = _require3.getParentView;\n\nfunction getScreenDimensions(namespace) {\n  var element = getContainer(namespace);\n  return JSON.stringify({\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  });\n}\n\n// Due to jos, PrestoDOM's document is different from the DOM Document which actaully contains the nodes.\n// This utility function allows PrestoDOM to acquire an actual DOM object.\nfunction getUIElement(id) {\n  var ele = document.getElementById(id);\n  return ele;\n}\n\nfunction findSiblingView(parentView, id) {\n  for (var i = 0; i < parentView.children.length; i++) {\n    if (parentView.children[i].props.id == id) {\n      if (i != 0) return parentView.children[i - 1];else return parentView;\n    }\n  }\n  return null;\n}\n\nfunction isOrientatationChanged(props) {\n  if (props['orientation']) return false;\n  return true;\n}\n\nfunction runInUI(cmd) {\n  if (typeof cmd == \"string\") return;\n\n  var id = cmd.id;\n  if (id) {\n    var elem = document.getElementById(id);\n\n    if (elem) {\n      var view = window.__VIEWS[id];\n      if (cmd.itemView) {\n        return;\n      }\n      if (!cmd.listData && view.listData) return;\n\n      if (cmd.listData) {\n        //diffing arrrays to find the difference between old data and new data\n        //console.time('diffArray')\n        console.log(\"diff\");\n        view.props.diffArray = List.diffArray(view.props.itemDatas, JSON.parse(cmd.listData));\n        //console.dir(view.props.diffArray)\n        //console.timeEnd('diffArray')\n\n        //no difference in data\n        if (view.props.diffArray == []) {\n          return;\n        }\n      }\n      view.props = helper.merge(view.props, cmd);\n\n      var parentId = null;\n      var _parentElement = null;\n      var parentView = null;\n\n      var stopChild = !isOrientatationChanged(cmd);\n\n      if (view.type == 'modal') {\n        parentId = elem.getAttribute('virtual_parent');\n\n        if (parentId) {\n          parentView = window.__VIEWS[parentId];\n          _parentElement = document.getElementById(parentId);\n\n          if (_parentElement && parentView) {\n            inflateView({ view: view, parentElement: _parentElement, stopChild: true });\n          }\n        }\n      } else {\n        parentId = elem.parentNode.id;\n\n        if (parentId) {\n          parentView = window.__VIEWS[parentId];\n          _parentElement = document.getElementById(parentId);\n\n          if (_parentElement && parentView) {\n            var siblingView = findSiblingView(parentView, id);\n            computeChildDimens(parentView);\n            inflateView({ view: view, parentElement: _parentElement, siblingView: siblingView, renderStyle: true, stopChild: stopChild, isListItem: true });\n          }\n        }\n      }\n    }\n  }\n  //recompute()\n  //Render.runInUI(cmd)\n}\n\nfunction Render(view, cb, namespace) {\n  var parentElement = getContainer(namespace);\n  // console.debug(\"presto content element found?? \",parentElement);\n  var parentView = getParentView(namespace, view);\n\n  if (parentView.oldView) {\n    addViewToParent(parentElement.id, view, parentView.children.indexOf(view), cb, false);\n  } else {\n    computeChildDimens(parentView);\n    inflateView({ view: view, parentElement: parentElement });\n    if (cb) callbackInvoker.invoke(cb);\n  }\n}\n\nfunction getUpdatedChildren(parent, view, index) {\n  var children = parent.children;\n  children.splice(children.indexOf(view), 1);\n  children.splice(index, 0, view);\n  return children;\n}\n\nfunction moveView(id, index) {\n  if (!window.__VIEWS[id]) {\n    return console.error(new Error(\"MoveView: Invalid view ID: \" + id));\n  }\n  var view = window.__VIEWS[id];\n  var viewElem = document.getElementById(id);\n  var parentId = viewElem.parentNode.id;\n  var parent = window.__VIEWS[parentId];\n  var children = getUpdatedChildren(parent, view, index);\n\n  computeChildDimens(parent);\n\n  children.forEach(function (child) {\n    inflateView({ view: child, parentElement: parentElement });\n  });\n}\n\n// Android.addViewToParent(rootId, dom_all, length (window.__ROOTSCREEN.idSet.child) - 1 , callback, null); -- call to this function\nfunction addViewToParent(id, view, index, cb, replace) {\n  // console.log(\"addViewToParent document location is\",document.location);\n  var parentElement = document.getElementById(id);\n  var parentView = window.__VIEWS[id];\n  view.parent = parentView;\n  var siblingView = null;\n\n  if (!parentElement || !parentView) return;\n\n  parentView.children.splice(index, 0, view);\n\n  if (index == 0) siblingView = parentView;else siblingView = parentView.children[index - 1];\n\n  preComputeLayoutDimens(parentView);\n  var elem = inflateView({ view: view, siblingView: siblingView }); // pass parent element as null, so that the element created doesn't immediately get attached to the DOM\n  var pv = parentView;\n  var pe = parentElement;\n  while (pv.state && pv.state.practicalHeight == \"wrap_content\") {\n    postComputeLayoutDimens(pv, pe);\n    pv = pv.parent;\n    pe = pe.parentElement;\n  }\n  // attach the elem to live dom once the elem has been constructed (parentElem is the liveDOM)\n  if (parentElement) {\n    var siblingElement = siblingView ? document.getElementById(siblingView.props.id) : null;\n\n    if (siblingElement && siblingElement != undefined) {\n      if (parentElement == siblingElement) {\n        // Prepend\n        parentElement.insertBefore(elem, parentElement.childNodes[0]);\n      } else {\n        // Insert in specified position\n        var nextSiblingElement = siblingElement.nextSibling;\n        parentElement.insertBefore(elem, nextSiblingElement);\n      }\n    } else {\n      parentElement.appendChild(elem);\n    }\n  }\n\n  if (window.focusedElement !== undefined) {\n    var c = document.getElementById(window.focusedElement);\n    if (c) {\n      console.debug(\"now focusing\");\n      c.focus();\n    }\n  }\n\n  if (cb) callbackInvoker.invoke(cb);\n}\n\nfunction getChildModalViews(view) {\n  var modalViews = [];\n\n  if (view.children) {\n    for (var i = 0; i < view.children.length; i++) {\n      var childView = view.children[i];\n\n      if (childView.type == 'modal') {\n        modalViews.push(childView);\n      } else {\n        var items = getChildModalViews(childView);\n        if (items && items.length > 0) {\n          if (modalViews.length > 0) {\n            modalViews = items;\n          } else {\n            modalViews = modalViews.concat(items);\n          }\n        }\n      }\n    }\n  }\n\n  return modalViews;\n}\n\nfunction removeView(id) {\n  var viewElem = document.getElementById(id);\n  if (!viewElem) {\n    helper.clearViewExternals(view);\n    return;\n  }\n\n  var parentId = viewElem.parentNode.id;\n  if (!parentId) {\n    helper.clearViewExternals(view);\n    viewElem.remove();\n    return;\n  }\n\n  var parentElem = document.getElementById(parentId);\n  if (!parentElem) {\n    helper.clearViewExternals(view);\n    viewElem.remove();\n    return;\n  }\n\n  var view = window.__VIEWS[id];\n\n  if (!view || !view.type) return;\n\n  var parent = null;\n  var idx = void 0;\n\n  if (view.type == 'modal') {\n    var virtualParentId = viewElem.getAttribute('virtual_parent');\n    parent = window.__VIEWS[virtualParentId];\n\n    idx = parent.children.indexOf(view);\n    parent.children.splice(idx, 1);\n\n    helper.clearViewExternals(view);\n    parentElem.remove();\n  } else {\n    /* Modal view among children */\n    var childModalViews = getChildModalViews(view);\n    if (childModalViews && childModalViews.length > 0) {\n      for (var i = 0; i < childModalViews.length; i++) {\n        var modalView = childModalViews[i];\n        var modalElem = document.getElementById(modalView.props.id);\n\n        if (modalElem) {\n          var backdropId = modalElem.parentNode.id;\n          var backdropElem = document.getElementById(backdropId);\n\n          backdropElem.remove();\n        }\n      }\n    }\n    /* Modal view among children end */\n\n    parent = window.__VIEWS[parentId];\n    if (parent) {\n      idx = parent.children.indexOf(view);\n      parent.children.splice(idx, 1);\n      helper.clearViewExternals(view);\n    }\n\n    viewElem.remove();\n  }\n}\n\nfunction replaceModalView(view, id) {\n  var elem = document.getElementById(id);\n  if (!elem) return;\n\n  var backdropId = elem.parentNode.id;\n  var backdropElem = document.getElementById(backdropId);\n\n  var parentId = elem.getAttribute('virtual_parent');\n  var parentView = window.__VIEWS[parentId];\n  var parentElem = document.getElementById(parentId);\n\n  var oldView = null;\n\n  for (var i = 0; i < parentView.children.length; i++) {\n    if (parentView.children[i].props.id == id) {\n      oldView = parentView.children[i];\n      break;\n    }\n  }\n\n  if (!oldView) return;\n\n  /* Get Children */\n  var childrenElem = [];\n  var children = oldView.children;\n\n  if (elem && children) {\n    for (var _i = 0; _i < children.length; _i++) {\n      var childId = children[_i].props.id;\n      var childElem = document.getElementById(childId);\n\n      if (childElem) childrenElem.push(childElem);\n    }\n  }\n  /* Get Children End */\n\n  oldView.props = view.props;\n  backdropElem.remove();\n  inflateView({ view: oldView, parentElement: parentElem, stopChild: true });\n  window.__VIEWS[id] = oldView;\n\n  /* Append Children */\n  elem = document.getElementById(id);\n\n  if (elem && childrenElem.length > 0) {\n    for (var _i2 = 0; _i2 < childrenElem.length; _i2++) {\n      elem.appendChild(childrenElem[_i2]);\n    }\n  }\n  /* Append Children End */\n}\n\nfunction replaceView(view, id) {\n  if (view.type == 'modal') {\n    replaceModalView(view, id);\n    return;\n  }\n\n  var elem = document.getElementById(id);\n  if (!elem) return;\n\n  var parentId = elem.parentNode.id;\n  var parentElem = document.getElementById(parentId);\n  var parentView = window.__VIEWS[parentId];\n\n  var oldView = null;\n  var siblingView = null;\n\n  for (var i = 0; i < parentView.children.length; i++) {\n    if (parentView.children[i].props.id == id) {\n      oldView = parentView.children[i];\n\n      if (i != 0) siblingView = parentView.children[i - 1];else siblingView = parentView;\n      break;\n    }\n  }\n\n  if (!oldView) return;\n\n  /* Get Children */\n  var childrenElem = [];\n  var children = oldView.children;\n\n  if (elem && children) {\n    for (var _i3 = 0; _i3 < children.length; _i3++) {\n      var childId = children[_i3].props.id;\n      var childElem = document.getElementById(childId);\n\n      if (childElem) childrenElem.push(childElem);\n    }\n  }\n  /* Get Children End */\n\n  oldView.props = view.props;\n  parentElem.removeChild(elem);\n  inflateView({ view: oldView, parentElement: parentElem, siblingView: siblingView, stopChild: true });\n  window.__VIEWS[id] = oldView;\n\n  /* Append Children */\n  elem = document.getElementById(id);\n\n  if (elem && childrenElem.length > 0) {\n    for (var _i4 = 0; _i4 < childrenElem.length; _i4++) {\n      elem.appendChild(childrenElem[_i4]);\n    }\n  }\n  /* Append Children End */\n}\n\nfunction recompute() {\n  var rootnode = document.getElementById('content');\n  var child = rootnode.firstElementChild;\n  var rootview = window.__VIEWS[child.id];\n  Render(rootview, null);\n}\n\nfunction getNewID() {\n  window.JOS_PRESTO_ID = window.JOS_PRESTO_ID || 1;\n  return window.JOS_PRESTO_ID++;\n}\n\nfunction getWindow() {\n  return window;\n}\n\nfunction getDocument() {\n  return window.document;\n}\n\nmodule.exports = {\n  getScreenDimensions: getScreenDimensions,\n\n  getUIElement: getUIElement,\n\n  runInUI: runInUI,\n\n  Render: Render,\n\n  moveView: moveView,\n\n  addViewToParent: addViewToParent,\n\n  getChildModalViews: getChildModalViews,\n\n  removeView: removeView,\n\n  replaceModalView: replaceModalView,\n\n  replaceView: replaceView,\n\n  recompute: recompute,\n\n  getNewID: getNewID,\n\n  getWindow: getWindow,\n\n  getDocument: getDocument,\n\n  addToContainerList: addToContainerList\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEB/AndroidInterface.js\n");

/***/ }),

/***/ "./src/WEB/JBridgeInterface.js":
/*!*************************************!*\
  !*** ./src/WEB/JBridgeInterface.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\nvar ViewPageAdapter = __webpack_require__(/*! ./ViewPageAdapter */ \"./src/WEB/ViewPageAdapter.js\");\nvar Renderer = __webpack_require__(/*! ./Render */ \"./src/WEB/Render.js\");\nvar axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\nvar callbackInvoker = __webpack_require__(/*! ../helpers/common/callbackInvoker */ \"./src/helpers/common/callbackInvoker.js\");\nvar qsstringify = __webpack_require__(/*! qs/lib/stringify */ \"./node_modules/qs/lib/stringify.js\");\nvar logs_state = {\n  session_id: '',\n  sn: ''\n};\nvar hasLocalStorage = true;\ntry {\n  _typeof(window.localStorage) !== undefined;\n} catch (e) {\n  hasLocalStorage = false;\n}\nfunction parseJson(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return str;\n  }\n}\n\nfunction sendAnalytics(data) {\n  var url = \"https://logs.juspay.in/godel/analytics\";\n  if (navigator.sendBeacon) {\n    navigator.sendBeacon(url, JSON.stringify({ data: data }));\n  } else {\n    // try {\n    //   var xhr = new XMLHttpRequest();\n    //   xhr.open(\"POST\", url, false); // third parameter of `false` means synchronous\n    //   xhr.send(JSON.stringify({data}));\n    // } catch(err) {\n    //   //\n    // }\n  }\n}\n\nfunction utoa(data) {\n  return btoa(unescape(encodeURIComponent(data)));\n}\n\nmodule.exports = {\n  getSymbol: function getSymbol(type) {\n    switch (type) {\n      case \"tick\":\n        return \"\\u2713\";\n      case \"rupee\":\n        return \"\\u20B9\";\n      default:\n        return \"symbol\";\n    }\n  },\n  setLogsState: function setLogsState(session, sn) {\n    logs_state.session_id = session;\n    logs_state.sn = sn;\n  },\n  listViewAdapter: function listViewAdapter(id, jsx, callback, type, more) {\n    var parent = document.getElementById(id);\n    if (!parent) {\n      console.error(new Error(\"Listview parent null\"));\n      return;\n    }\n    while (parent.firstElementChild) {\n      parent.removeChild(parent.firstElementChild);\n    }var view = JSON.parse(jsx);\n    var parentView = window.__VIEWS[parent.id];\n    view.map(function (x, i) {\n      parentView.children.push(x.view);\n      parentView.type = \"linearLayout\";\n      Renderer.computeChildDimens(parentView);\n      parentView.type = \"listView\";\n      var elem = Renderer.inflateView(x.view, parent);\n      elem.addEventListener(\"click\", function () {\n        window.callUICallback(callback, [i]);\n      });\n      Android.runInUI(x.value);\n    });\n    if (more) {\n      var elem = document.createElement(\"div\");\n      elem.style.width = \"100%\";\n      elem.style.height = \"100px\";\n      elem.style.borderBottom = \"1px solid #eee\";\n      parent.appendChild(elem);\n\n      Renderer.inflateView(JSON.parse(more), elem);\n    }\n  },\n\n  callAPI: function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(method, url, data, headers, shouldEncodeToFormData, isSSLPinnedURL, callback) {\n      var something, resp, json;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log(\"Presto-UI Call API called in JBridge at location\",document.location);\n              // console.log(\"Presto-UI Call API called in JBridget with callback string as\",callback);\n              callback = callback || isSSLPinnedURL; // backward comaptibility\n              headers = parseJson(headers);\n              data = parseJson(data);\n              something = false;\n\n              if (headers[\"Content-Type\"] === \"application/x-www-form-urlencoded\") {\n                if ((typeof data === \"undefined\" ? \"undefined\" : _typeof(data)) == \"object\") {\n                  something = true;\n                  data = qsstringify(data);\n                }\n              } else {\n                data = JSON.stringify(data);\n              }\n              if ([\"GET\", \"HEAD\"].includes(method)) {\n                data = undefined;\n              }\n              _context.prev = 6;\n              _context.next = 9;\n              return axios({ url: url, method: method, data: data, headers: headers });\n\n            case 9:\n              resp = _context.sent;\n              json = resp.data; //await resp.data.json();\n\n              callbackInvoker.invoke(callback, \"success\", utoa(JSON.stringify(json)), resp.status);\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](6);\n\n              console.error(\"ERR\", _context.t0);\n              callbackInvoker.invoke(callback, \"failure\", btoa(\"{}\"), 50);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[6, 14]]);\n    }));\n\n    function callAPI(_x, _x2, _x3, _x4, _x5, _x6, _x7) {\n      return _ref.apply(this, arguments);\n    }\n\n    return callAPI;\n  }(),\n\n  getFromSharedPrefs: function getFromSharedPrefs(key) {\n    return hasLocalStorage ? localStorage.getItem(key) || \"__failed\" : \"__failed\";\n  },\n\n  setInSharedPrefs: function setInSharedPrefs(key, value) {\n    if (hasLocalStorage) localStorage.setItem(key, value);\n  },\n\n  getKeysInSharedPrefs: function getKeysInSharedPrefs(key) {\n    return hasLocalStorage ? localStorage.getItem(key) || \"__failed\" : \"__failed\";\n  },\n\n  setKeysInSharedPrefs: function setKeysInSharedPrefs(key, value) {\n    if (hasLocalStorage) localStorage.setItem(key, value);\n  },\n\n  removeKeysInSharedPrefs: function removeKeysInSharedPrefs(key) {\n    if (hasLocalStorage) localStorage.removeItem(key);\n  },\n\n  viewPagerAdapter: function viewPagerAdapter(id, jsx, tabJsx, cb) {\n    ViewPageAdapter.createTabs(id, jsx, tabJsx, cb);\n  },\n\n  switchToViewPagerIndex: function switchToViewPagerIndex(index) {\n    ViewPageAdapter.toggleView(index);\n  },\n\n  getKey: function getKey(key, defaultValue) {\n    return hasLocalStorage ? localStorage.getItem(key) || defaultValue : defaultValue;\n  },\n\n  setKey: function setKey(key, value) {\n    return hasLocalStorage ? localStorage.setItem(key, value) : value;\n  },\n\n  getResourceByName: function getResourceByName(tag) {\n    return \"2.0.0\";\n  },\n\n  getSessionAttribute: function getSessionAttribute(v1, v2) {\n    return JSON.stringify({ a: v1 });\n  },\n\n  setAnalyticsEndPoint: function setAnalyticsEndPoint(url) {\n    return;\n  },\n\n  getSessionInfo: function getSessionInfo() {\n    return JSON.stringify({});\n  },\n\n  attach: function attach() {\n    return;\n  },\n\n  addToLogList: function addToLogList(data) {\n\n    var newLog = JSON.parse(data);\n    var logsArr = Array.isArray(newLog) ? newLog : [newLog];\n    for (var i = 0; i < logsArr.length; i++) {\n      logsArr[i].session_id = logs_state.session_id;\n      logsArr[i].sn = ++logs_state.sn;\n    }\n    // console.warn(logsArr)\n\n    sendAnalytics(logsArr);\n  },\n  saveToLocal: function saveToLocal(a, b, c) {\n    if (hasLocalStorage) {\n      try {\n        window.localStorage.removeItem(c + \":\" + \"defOptionType\");\n        window.localStorage.removeItem(c + \":\" + \"defOption\");\n      } catch (e) {}\n      window.localStorage.setItem(c + \":\" + 'defOptionType', a);\n      window.localStorage.setItem(c + \":\" + 'defOption', JSON.stringify(b));\n    }\n  },\n  deleteFromLocal: function deleteFromLocal(c) {\n\n    if (hasLocalStorage) {\n      try {\n        window.localStorage.removeItem(c + \":\" + \"defOptionType\");\n        window.localStorage.removeItem(c + \":\" + \"defOption\");\n      } catch (e) {}\n    }\n  },\n  loadFromLocal: function loadFromLocal(key) {\n    if (hasLocalStorage) {\n      if (window.localStorage.getItem(key) == undefined) return \"\";\n      try {\n        var a = JSON.parse(window.localStorage.getItem(key));\n        if (a == undefined) return \"\";\n        return a;\n      } catch (e) {\n        return window.localStorage.getItem(key);\n      }\n    }\n  },\n  postLogs: function postLogs(endPoint, logs) {\n    return;\n  },\n\n\n  submitAllLogs: function submitAllLogs() {\n    return;\n  },\n\n  getLogList: function getLogList() {\n    return JSON.stringify([]);\n  },\n\n  updateLogList: function updateLogList() {\n    return JSON.stringify({});\n  },\n\n  isOnline: function isOnline() {\n    return true;\n  },\n\n  getDeviceDetails: function getDeviceDetails() {\n    var deviceDetails = {\n      appVersion: \"\",\n      osVersion: \"\",\n      os: \"\",\n      macAddress: \"\",\n      isDual: \"\",\n      manufacturer: \"\",\n      isRooted: \"\",\n      androidId: \"\",\n      appPackageName: \"\",\n      networkOperator: \"\",\n      simOperatorName: \"\",\n      screenHeight: \"\",\n      screenWidth: \"\",\n      screenPpi: \"\",\n      brand: \"\",\n      model: \"\"\n    };\n    return JSON.stringify(deviceDetails);\n  },\n\n  getDeviceInfo: function getDeviceInfo() {\n    return JSON.stringify({});\n  },\n\n  getUUID: function getUUID() {\n    function s4() {\n      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n    }\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n  },\n\n  renewFile: function renewFile(file) {\n    return;\n  },\n  hideKeyboardOnNavigation: function hideKeyboardOnNavigation() {\n    return;\n  },\n  runInJuspayBrowser: function runInJuspayBrowser(eventName, arg2, arg3) {\n    //\n  },\n  loadFileInDUI: function loadFileInDUI(fileName) {\n    return \"<html><body><div id='loaderBrand'></div><div id='content'></div><script src='\" + fileName + \"'></script></body></html>\";\n  },\n  setSessionAttribute: function setSessionAttribute() {},\n  getMd5: function getMd5() {\n    return \"\";\n  },\n  setSessionDetails: function setSessionDetails(key, value) {\n    window.session = window.session || {};\n    window.session[key] = value;\n  },\n  getSessionDetails: function getSessionDetails() {\n    return JSON.stringify(window.session || {});\n  },\n  requestKeyboardShow: function requestKeyboardShow() {},\n\n  requestKeyboardHide: function requestKeyboardHide() {},\n  /**\n   * @method setFCMToken\n   * @description Sets token for GCM notifications\n   *\n   * Note: Only for Android/iOS. This is just an empty stub in web\n   */\n  setFCMToken: function setFCMToken() {\n    return;\n  },\n  /**\n   * @method requestLocation\n   * @description Requests permission to access location\n   *\n   * Note: Only for Android/iOS. This is just an empty stub in web\n   */\n  requestLocation: function requestLocation() {\n    return;\n  },\n\n  doesSimplExist: function doesSimplExist() {\n    return \"false\";\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEB/JBridgeInterface.js\n");

/***/ }),

/***/ "./src/WEB/ListPresto.js":
/*!*******************************!*\
  !*** ./src/WEB/ListPresto.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//view.data= itemView && holderViews\n//itemView=template\n//holderViews= array of props that will be changed from the template\n\nvar _require = __webpack_require__(/*! ../compute */ \"./src/compute.js\"),\n    computeChildDimens = _require.computeChildDimens;\n\nvar availableHolders = ['text', 'imageUrl', 'packageIcon', 'background', 'color', 'visibility', 'textSize', 'fontStyle', 'alpha'];\n\n//sets the holder attributes\nvar setChildAttributes = function setChildAttributes(view, holder, itemData) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = availableHolders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var prop = _step.value;\n\n\n            if (holder[prop]) {\n                // console.log('HELLO WORLD')\n                // console.log(holder[prop])\n                // console.log(prop +\" to \"+ holder[prop] + \" to \"+itemData[holder[prop]]);\n                if (itemData[holder[prop]]) view.props[prop] = itemData[holder[prop]];\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n};\nvar setList = function setList(view, holderViews, itemData) {\n    var currentHolderObject = null;\n    if (listIndex == holderViews.length) return view;\n    currentHolderObject = holderViews[listIndex];\n    if (view.props.holderId == currentHolderObject.id) {\n        setChildAttributes(view, currentHolderObject, itemData);\n        listIndex++;\n    }\n    for (var i = 0; i < view.children.length; i++) {\n        setList(view.children[i], holderViews, itemData);\n    }\n    return view;\n};\n\n//gets the mapped view\nvar getItemView = function getItemView(view, holderViews, itemData) {\n    var currentHolderObject = null;\n    // if(!holderViews)\n    //     console.log(\"doajdfadf\");\n    if (listIndex == holderViews.length) return view;\n    currentHolderObject = holderViews[listIndex];\n    if (view.props.holderId == currentHolderObject.id) {\n        // console.log(\"FOUND ONE EQUAL\")\n        setChildAttributes(view, currentHolderObject, itemData);\n        listIndex++;\n    }\n    if (view.children) for (var i = 0; i < view.children.length; i++) {\n        setList(view.children[i], holderViews, itemData);\n    }\n    return view;\n};\nvar listIndex = void 0;\n\n//returns \"filter\" if arrays are of different length\n//returns the indexes which have different elements in it\nfunction diffArray(oldItems, newItems) {\n    if (oldItems.length != newItems.length) return \"filter\";\n    var diffIndexes = [];\n    var limit = 10;\n    limit = newItems.length > 10 ? 10 : newItems.length;\n    for (var i = 0; i < newItems.length; i++) {\n        var keys = Object.keys(newItems[i]);\n        if (keys) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = keys[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var key = _step2.value;\n\n                    if (newItems[i][key] != oldItems[i][key]) {\n                        diffIndexes.push(i);\n                        break;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    }\n    return diffIndexes;\n}\n\n//generates the list items views\nfunction createListView(view) {\n\n    //console.log(\"lendth of the list is \"+view.props.itemDatas.length)\n    view.children = [];\n    changeItemView(view.props.data.itemView);\n    for (var i = 0; i < view.props.itemDatas.length; i++) {\n        listIndex = 0;\n        var cloneTemplate = JSON.parse(JSON.stringify(view.props.data.itemView));\n        if (view.props.hasOwnProperty('onItemClick')) {\n            var onItemClick = view.props.onItemClick;\n            cloneTemplate.props.onClick = itemClick(onItemClick)(i);\n        }\n        var childView = getItemView(cloneTemplate, view.props.data.holderViews, view.props.itemDatas[i]);\n        view.children.push(childView);\n    }\n}\n\nvar itemClick = function itemClick(onItemClick) {\n    return function (i) {\n        return function () {\n            onItemClick(i);\n        };\n    };\n};\n\n//Get the child element for a particular index\nvar getChildItemViewByIndex = function getChildItemViewByIndex(view, i) {\n    listIndex = 0;\n    var cloneTemplate = JSON.parse(JSON.stringify(view.props.data.itemView));\n    if (view.props.hasOwnProperty('onItemClick')) {\n        var onItemClick = view.props.onItemClick;\n        cloneTemplate.props.onClick = itemClick(onItemClick)(i);\n    }\n    var res = getItemView(cloneTemplate, view.props.data.holderViews, view.props.itemDatas[i]);\n    return res;\n};\n\n//reformat the template\nfunction changeItemView(view) {\n    view.props.holderId = view.props.id;\n    view.props.id = undefined;\n    if (view.children) {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = view.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var child = _step3.value;\n\n                changeItemView(child);\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n    }\n}\n\nmodule.exports = { diffArray: diffArray, createListView: createListView, getItemView: getItemView, getChildItemViewByIndex: getChildItemViewByIndex };\n\n//newinflated -> isNewInflated\n//add spaces\n//add summary\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvV0VCL0xpc3RQcmVzdG8uanM/ZWUzMSJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29tcHV0ZUNoaWxkRGltZW5zIiwiYXZhaWxhYmxlSG9sZGVycyIsInNldENoaWxkQXR0cmlidXRlcyIsInZpZXciLCJob2xkZXIiLCJpdGVtRGF0YSIsInByb3AiLCJwcm9wcyIsInNldExpc3QiLCJob2xkZXJWaWV3cyIsImN1cnJlbnRIb2xkZXJPYmplY3QiLCJsaXN0SW5kZXgiLCJsZW5ndGgiLCJob2xkZXJJZCIsImlkIiwiaSIsImNoaWxkcmVuIiwiZ2V0SXRlbVZpZXciLCJkaWZmQXJyYXkiLCJvbGRJdGVtcyIsIm5ld0l0ZW1zIiwiZGlmZkluZGV4ZXMiLCJsaW1pdCIsImtleXMiLCJPYmplY3QiLCJrZXkiLCJwdXNoIiwiY3JlYXRlTGlzdFZpZXciLCJjaGFuZ2VJdGVtVmlldyIsImRhdGEiLCJpdGVtVmlldyIsIml0ZW1EYXRhcyIsImNsb25lVGVtcGxhdGUiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJoYXNPd25Qcm9wZXJ0eSIsIm9uSXRlbUNsaWNrIiwib25DbGljayIsIml0ZW1DbGljayIsImNoaWxkVmlldyIsImdldENoaWxkSXRlbVZpZXdCeUluZGV4IiwicmVzIiwidW5kZWZpbmVkIiwiY2hpbGQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUVBO0FBQ0E7QUFDQTs7ZUFFK0JBLG1CQUFPQSxDQUFDLG9DQUFSLEM7SUFBdkJDLGtCLFlBQUFBLGtCOztBQUdSLElBQUlDLG1CQUFtQixDQUFDLE1BQUQsRUFBUSxVQUFSLEVBQW9CLGFBQXBCLEVBQW1DLFlBQW5DLEVBQWlELE9BQWpELEVBQTBELFlBQTFELEVBQXdFLFVBQXhFLEVBQW9GLFdBQXBGLEVBQWlHLE9BQWpHLENBQXZCOztBQUdBO0FBQ0EsSUFBSUMscUJBQXFCLFNBQXJCQSxrQkFBcUIsQ0FBU0MsSUFBVCxFQUFjQyxNQUFkLEVBQXFCQyxRQUFyQixFQUE4QjtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUNuRCw2QkFBZ0JKLGdCQUFoQiw4SEFBaUM7QUFBQSxnQkFBekJLLElBQXlCOzs7QUFFN0IsZ0JBQUdGLE9BQU9FLElBQVAsQ0FBSCxFQUNBO0FBQ0k7QUFDQTtBQUNBO0FBQ0Esb0JBQUdELFNBQVNELE9BQU9FLElBQVAsQ0FBVCxDQUFILEVBQ0lILEtBQUtJLEtBQUwsQ0FBV0QsSUFBWCxJQUFtQkQsU0FBU0QsT0FBT0UsSUFBUCxDQUFULENBQW5CO0FBRVA7QUFDSjtBQVprRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBYXRELENBYkQ7QUFjQSxJQUFJRSxVQUFVLFNBQVZBLE9BQVUsQ0FBU0wsSUFBVCxFQUFjTSxXQUFkLEVBQTBCSixRQUExQixFQUFtQztBQUM3QyxRQUFJSyxzQkFBc0IsSUFBMUI7QUFDQSxRQUFHQyxhQUFXRixZQUFZRyxNQUExQixFQUNJLE9BQU9ULElBQVA7QUFDSk8sMEJBQXNCRCxZQUFZRSxTQUFaLENBQXRCO0FBQ0EsUUFBR1IsS0FBS0ksS0FBTCxDQUFXTSxRQUFYLElBQXVCSCxvQkFBb0JJLEVBQTlDLEVBQWlEO0FBQzdDWiwyQkFBbUJDLElBQW5CLEVBQXdCTyxtQkFBeEIsRUFBNkNMLFFBQTdDO0FBQ0FNO0FBQ0g7QUFDRCxTQUFJLElBQUlJLElBQUUsQ0FBVixFQUFZQSxJQUFFWixLQUFLYSxRQUFMLENBQWNKLE1BQTVCLEVBQW1DRyxHQUFuQyxFQUF1QztBQUNuQ1AsZ0JBQVFMLEtBQUthLFFBQUwsQ0FBY0QsQ0FBZCxDQUFSLEVBQTBCTixXQUExQixFQUF1Q0osUUFBdkM7QUFDSDtBQUNELFdBQU9GLElBQVA7QUFFSCxDQWREOztBQWdCQTtBQUNBLElBQUljLGNBQWMsU0FBZEEsV0FBYyxDQUFTZCxJQUFULEVBQWNNLFdBQWQsRUFBMEJKLFFBQTFCLEVBQW1DO0FBQ2pELFFBQUlLLHNCQUFzQixJQUExQjtBQUNBO0FBQ0E7QUFDQSxRQUFHQyxhQUFXRixZQUFZRyxNQUExQixFQUNJLE9BQU9ULElBQVA7QUFDSk8sMEJBQXNCRCxZQUFZRSxTQUFaLENBQXRCO0FBQ0EsUUFBR1IsS0FBS0ksS0FBTCxDQUFXTSxRQUFYLElBQXVCSCxvQkFBb0JJLEVBQTlDLEVBQWlEO0FBQzdDO0FBQ0FaLDJCQUFtQkMsSUFBbkIsRUFBd0JPLG1CQUF4QixFQUE2Q0wsUUFBN0M7QUFDQU07QUFDSDtBQUNELFFBQUdSLEtBQUthLFFBQVIsRUFDQSxLQUFJLElBQUlELElBQUUsQ0FBVixFQUFZQSxJQUFFWixLQUFLYSxRQUFMLENBQWNKLE1BQTVCLEVBQW1DRyxHQUFuQyxFQUF1QztBQUNuQ1AsZ0JBQVFMLEtBQUthLFFBQUwsQ0FBY0QsQ0FBZCxDQUFSLEVBQTBCTixXQUExQixFQUF1Q0osUUFBdkM7QUFDSDtBQUNELFdBQU9GLElBQVA7QUFFSCxDQWxCRDtBQW1CQSxJQUFJUSxrQkFBSjs7QUFJQTtBQUNBO0FBQ0EsU0FBU08sU0FBVCxDQUFtQkMsUUFBbkIsRUFBNEJDLFFBQTVCLEVBQXFDO0FBQ2pDLFFBQUdELFNBQVNQLE1BQVQsSUFBaUJRLFNBQVNSLE1BQTdCLEVBQ0ksT0FBTyxRQUFQO0FBQ0osUUFBSVMsY0FBWSxFQUFoQjtBQUNBLFFBQUlDLFFBQVEsRUFBWjtBQUNBQSxZQUFRRixTQUFTUixNQUFULEdBQWdCLEVBQWhCLEdBQW1CLEVBQW5CLEdBQXNCUSxTQUFTUixNQUF2QztBQUNBLFNBQUksSUFBSUcsSUFBRyxDQUFYLEVBQWFBLElBQUVLLFNBQVNSLE1BQXhCLEVBQStCRyxHQUEvQixFQUNBO0FBQ0ksWUFBSVEsT0FBT0MsT0FBT0QsSUFBUCxDQUFZSCxTQUFTTCxDQUFULENBQVosQ0FBWDtBQUNBLFlBQUdRLElBQUg7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFDQSxzQ0FBZUEsSUFBZixtSUFDQTtBQUFBLHdCQURRRSxHQUNSOztBQUNJLHdCQUFHTCxTQUFTTCxDQUFULEVBQVlVLEdBQVosS0FBb0JOLFNBQVNKLENBQVQsRUFBWVUsR0FBWixDQUF2QixFQUF3QztBQUNwQ0osb0NBQVlLLElBQVosQ0FBaUJYLENBQWpCO0FBQ0E7QUFDSDtBQUNKO0FBUEQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBUUg7QUFDRCxXQUFPTSxXQUFQO0FBQ0g7O0FBV0Q7QUFDQSxTQUFTTSxjQUFULENBQXdCeEIsSUFBeEIsRUFBNkI7O0FBRXpCO0FBQ0FBLFNBQUthLFFBQUwsR0FBYyxFQUFkO0FBQ0FZLG1CQUFlekIsS0FBS0ksS0FBTCxDQUFXc0IsSUFBWCxDQUFnQkMsUUFBL0I7QUFDQSxTQUFJLElBQUlmLElBQUUsQ0FBVixFQUFZQSxJQUFFWixLQUFLSSxLQUFMLENBQVd3QixTQUFYLENBQXFCbkIsTUFBbkMsRUFBMENHLEdBQTFDLEVBQThDO0FBQzFDSixvQkFBVSxDQUFWO0FBQ0EsWUFBSXFCLGdCQUFnQkMsS0FBS0MsS0FBTCxDQUFXRCxLQUFLRSxTQUFMLENBQWVoQyxLQUFLSSxLQUFMLENBQVdzQixJQUFYLENBQWdCQyxRQUEvQixDQUFYLENBQXBCO0FBQ0EsWUFBRzNCLEtBQUtJLEtBQUwsQ0FBVzZCLGNBQVgsQ0FBMEIsYUFBMUIsQ0FBSCxFQUE0QztBQUN4QyxnQkFBSUMsY0FBY2xDLEtBQUtJLEtBQUwsQ0FBVzhCLFdBQTdCO0FBQ0FMLDBCQUFjekIsS0FBZCxDQUFvQitCLE9BQXBCLEdBQThCQyxVQUFVRixXQUFWLEVBQXVCdEIsQ0FBdkIsQ0FBOUI7QUFDSDtBQUNELFlBQUl5QixZQUFZdkIsWUFBWWUsYUFBWixFQUEwQjdCLEtBQUtJLEtBQUwsQ0FBV3NCLElBQVgsQ0FBZ0JwQixXQUExQyxFQUFzRE4sS0FBS0ksS0FBTCxDQUFXd0IsU0FBWCxDQUFxQmhCLENBQXJCLENBQXRELENBQWhCO0FBQ0FaLGFBQUthLFFBQUwsQ0FBY1UsSUFBZCxDQUFtQmMsU0FBbkI7QUFDSDtBQUNKOztBQUVELElBQUlELFlBQVksU0FBWkEsU0FBWSxDQUFTRixXQUFULEVBQXFCO0FBQ2pDLFdBQU8sVUFBU3RCLENBQVQsRUFBVztBQUNkLGVBQU8sWUFBVTtBQUNic0Isd0JBQVl0QixDQUFaO0FBQ0gsU0FGRDtBQUdILEtBSkQ7QUFLSCxDQU5EOztBQVFBO0FBQ0EsSUFBSTBCLDBCQUEwQixTQUExQkEsdUJBQTBCLENBQVN0QyxJQUFULEVBQWNZLENBQWQsRUFBZ0I7QUFDMUNKLGdCQUFVLENBQVY7QUFDQSxRQUFJcUIsZ0JBQWdCQyxLQUFLQyxLQUFMLENBQVdELEtBQUtFLFNBQUwsQ0FBZWhDLEtBQUtJLEtBQUwsQ0FBV3NCLElBQVgsQ0FBZ0JDLFFBQS9CLENBQVgsQ0FBcEI7QUFDQSxRQUFHM0IsS0FBS0ksS0FBTCxDQUFXNkIsY0FBWCxDQUEwQixhQUExQixDQUFILEVBQTRDO0FBQ3hDLFlBQUlDLGNBQWNsQyxLQUFLSSxLQUFMLENBQVc4QixXQUE3QjtBQUNBTCxzQkFBY3pCLEtBQWQsQ0FBb0IrQixPQUFwQixHQUE2QkMsVUFBVUYsV0FBVixFQUF1QnRCLENBQXZCLENBQTdCO0FBQ0g7QUFDRCxRQUFJMkIsTUFBS3pCLFlBQVllLGFBQVosRUFBMEI3QixLQUFLSSxLQUFMLENBQVdzQixJQUFYLENBQWdCcEIsV0FBMUMsRUFBc0ROLEtBQUtJLEtBQUwsQ0FBV3dCLFNBQVgsQ0FBcUJoQixDQUFyQixDQUF0RCxDQUFUO0FBQ0EsV0FBTzJCLEdBQVA7QUFDSCxDQVREOztBQVlBO0FBQ0EsU0FBU2QsY0FBVCxDQUF3QnpCLElBQXhCLEVBQ0E7QUFDSUEsU0FBS0ksS0FBTCxDQUFXTSxRQUFYLEdBQXNCVixLQUFLSSxLQUFMLENBQVdPLEVBQWpDO0FBQ0FYLFNBQUtJLEtBQUwsQ0FBV08sRUFBWCxHQUFnQjZCLFNBQWhCO0FBQ0EsUUFBR3hDLEtBQUthLFFBQVI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFDSSxrQ0FBa0JiLEtBQUthLFFBQXZCO0FBQUEsb0JBQVM0QixLQUFUOztBQUNJaEIsK0JBQWVnQixLQUFmO0FBREo7QUFESjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHSDs7QUFHREMsT0FBT0MsT0FBUCxHQUFlLEVBQUM1QixvQkFBRCxFQUFXUyw4QkFBWCxFQUEwQlYsd0JBQTFCLEVBQXNDd0IsZ0RBQXRDLEVBQWY7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vc3JjL1dFQi9MaXN0UHJlc3RvLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbi8vdmlldy5kYXRhPSBpdGVtVmlldyAmJiBob2xkZXJWaWV3c1xuLy9pdGVtVmlldz10ZW1wbGF0ZVxuLy9ob2xkZXJWaWV3cz0gYXJyYXkgb2YgcHJvcHMgdGhhdCB3aWxsIGJlIGNoYW5nZWQgZnJvbSB0aGUgdGVtcGxhdGVcblxuY29uc3QgeyBjb21wdXRlQ2hpbGREaW1lbnMgfSA9IHJlcXVpcmUoXCIuLi9jb21wdXRlXCIpO1xuXG5cbmxldCBhdmFpbGFibGVIb2xkZXJzID0gWyd0ZXh0JywnaW1hZ2VVcmwnLCAncGFja2FnZUljb24nLCAnYmFja2dyb3VuZCcsICdjb2xvcicsICd2aXNpYmlsaXR5JywgJ3RleHRTaXplJywgJ2ZvbnRTdHlsZScsICdhbHBoYSddO1xuXG5cbi8vc2V0cyB0aGUgaG9sZGVyIGF0dHJpYnV0ZXNcbmxldCBzZXRDaGlsZEF0dHJpYnV0ZXMgPSBmdW5jdGlvbih2aWV3LGhvbGRlcixpdGVtRGF0YSl7XG4gICAgZm9yKGxldCBwcm9wIG9mIGF2YWlsYWJsZUhvbGRlcnMpe1xuXG4gICAgICAgIGlmKGhvbGRlcltwcm9wXSlcbiAgICAgICAge1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ0hFTExPIFdPUkxEJylcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGhvbGRlcltwcm9wXSlcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb3AgK1wiIHRvIFwiKyBob2xkZXJbcHJvcF0gKyBcIiB0byBcIitpdGVtRGF0YVtob2xkZXJbcHJvcF1dKTtcbiAgICAgICAgICAgIGlmKGl0ZW1EYXRhW2hvbGRlcltwcm9wXV0pXG4gICAgICAgICAgICAgICAgdmlldy5wcm9wc1twcm9wXSA9IGl0ZW1EYXRhW2hvbGRlcltwcm9wXV1cbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxufVxubGV0IHNldExpc3QgPSBmdW5jdGlvbih2aWV3LGhvbGRlclZpZXdzLGl0ZW1EYXRhKXtcbiAgICBsZXQgY3VycmVudEhvbGRlck9iamVjdCA9IG51bGw7XG4gICAgaWYobGlzdEluZGV4PT1ob2xkZXJWaWV3cy5sZW5ndGgpXG4gICAgICAgIHJldHVybiB2aWV3O1xuICAgIGN1cnJlbnRIb2xkZXJPYmplY3QgPSBob2xkZXJWaWV3c1tsaXN0SW5kZXhdO1xuICAgIGlmKHZpZXcucHJvcHMuaG9sZGVySWQgPT0gY3VycmVudEhvbGRlck9iamVjdC5pZCl7XG4gICAgICAgIHNldENoaWxkQXR0cmlidXRlcyh2aWV3LGN1cnJlbnRIb2xkZXJPYmplY3QsIGl0ZW1EYXRhKTtcbiAgICAgICAgbGlzdEluZGV4Kys7XG4gICAgfVxuICAgIGZvcihsZXQgaT0wO2k8dmlldy5jaGlsZHJlbi5sZW5ndGg7aSsrKXtcbiAgICAgICAgc2V0TGlzdCh2aWV3LmNoaWxkcmVuW2ldLCBob2xkZXJWaWV3cywgaXRlbURhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gdmlldztcbiAgICBcbn1cblxuLy9nZXRzIHRoZSBtYXBwZWQgdmlld1xubGV0IGdldEl0ZW1WaWV3ID0gZnVuY3Rpb24odmlldyxob2xkZXJWaWV3cyxpdGVtRGF0YSl7XG4gICAgbGV0IGN1cnJlbnRIb2xkZXJPYmplY3QgPSBudWxsO1xuICAgIC8vIGlmKCFob2xkZXJWaWV3cylcbiAgICAvLyAgICAgY29uc29sZS5sb2coXCJkb2FqZGZhZGZcIik7XG4gICAgaWYobGlzdEluZGV4PT1ob2xkZXJWaWV3cy5sZW5ndGgpXG4gICAgICAgIHJldHVybiB2aWV3O1xuICAgIGN1cnJlbnRIb2xkZXJPYmplY3QgPSBob2xkZXJWaWV3c1tsaXN0SW5kZXhdO1xuICAgIGlmKHZpZXcucHJvcHMuaG9sZGVySWQgPT0gY3VycmVudEhvbGRlck9iamVjdC5pZCl7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiRk9VTkQgT05FIEVRVUFMXCIpXG4gICAgICAgIHNldENoaWxkQXR0cmlidXRlcyh2aWV3LGN1cnJlbnRIb2xkZXJPYmplY3QsIGl0ZW1EYXRhKTtcbiAgICAgICAgbGlzdEluZGV4Kys7XG4gICAgfVxuICAgIGlmKHZpZXcuY2hpbGRyZW4pXG4gICAgZm9yKGxldCBpPTA7aTx2aWV3LmNoaWxkcmVuLmxlbmd0aDtpKyspe1xuICAgICAgICBzZXRMaXN0KHZpZXcuY2hpbGRyZW5baV0sIGhvbGRlclZpZXdzLCBpdGVtRGF0YSk7XG4gICAgfVxuICAgIHJldHVybiB2aWV3O1xuICAgIFxufVxubGV0IGxpc3RJbmRleDtcblxuXG5cbi8vcmV0dXJucyBcImZpbHRlclwiIGlmIGFycmF5cyBhcmUgb2YgZGlmZmVyZW50IGxlbmd0aFxuLy9yZXR1cm5zIHRoZSBpbmRleGVzIHdoaWNoIGhhdmUgZGlmZmVyZW50IGVsZW1lbnRzIGluIGl0XG5mdW5jdGlvbiBkaWZmQXJyYXkob2xkSXRlbXMsbmV3SXRlbXMpe1xuICAgIGlmKG9sZEl0ZW1zLmxlbmd0aCE9bmV3SXRlbXMubGVuZ3RoKVxuICAgICAgICByZXR1cm4gXCJmaWx0ZXJcIjtcbiAgICBsZXQgZGlmZkluZGV4ZXM9W107XG4gICAgbGV0IGxpbWl0ID0gMTBcbiAgICBsaW1pdCA9IG5ld0l0ZW1zLmxlbmd0aD4xMD8xMDpuZXdJdGVtcy5sZW5ndGg7XG4gICAgZm9yKGxldCBpID0wO2k8bmV3SXRlbXMubGVuZ3RoO2krKylcbiAgICB7XG4gICAgICAgIGxldCBrZXlzID0gT2JqZWN0LmtleXMobmV3SXRlbXNbaV0pO1xuICAgICAgICBpZihrZXlzKVxuICAgICAgICBmb3IobGV0IGtleSBvZiBrZXlzKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZihuZXdJdGVtc1tpXVtrZXldICE9IG9sZEl0ZW1zW2ldW2tleV0pe1xuICAgICAgICAgICAgICAgIGRpZmZJbmRleGVzLnB1c2goaSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRpZmZJbmRleGVzO1xufVxuXG5cblxuXG5cbiAgXG5cblxuXG5cbi8vZ2VuZXJhdGVzIHRoZSBsaXN0IGl0ZW1zIHZpZXdzXG5mdW5jdGlvbiBjcmVhdGVMaXN0Vmlldyh2aWV3KXtcblxuICAgIC8vY29uc29sZS5sb2coXCJsZW5kdGggb2YgdGhlIGxpc3QgaXMgXCIrdmlldy5wcm9wcy5pdGVtRGF0YXMubGVuZ3RoKVxuICAgIHZpZXcuY2hpbGRyZW49W11cbiAgICBjaGFuZ2VJdGVtVmlldyh2aWV3LnByb3BzLmRhdGEuaXRlbVZpZXcpO1xuICAgIGZvcihsZXQgaT0wO2k8dmlldy5wcm9wcy5pdGVtRGF0YXMubGVuZ3RoO2krKyl7XG4gICAgICAgIGxpc3RJbmRleD0wO1xuICAgICAgICBsZXQgY2xvbmVUZW1wbGF0ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodmlldy5wcm9wcy5kYXRhLml0ZW1WaWV3KSk7XG4gICAgICAgIGlmKHZpZXcucHJvcHMuaGFzT3duUHJvcGVydHkoJ29uSXRlbUNsaWNrJykpe1xuICAgICAgICAgICAgbGV0IG9uSXRlbUNsaWNrID0gdmlldy5wcm9wcy5vbkl0ZW1DbGljaztcbiAgICAgICAgICAgIGNsb25lVGVtcGxhdGUucHJvcHMub25DbGljayA9IGl0ZW1DbGljayhvbkl0ZW1DbGljaykoaSk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNoaWxkVmlldyA9IGdldEl0ZW1WaWV3KGNsb25lVGVtcGxhdGUsdmlldy5wcm9wcy5kYXRhLmhvbGRlclZpZXdzLHZpZXcucHJvcHMuaXRlbURhdGFzW2ldKVxuICAgICAgICB2aWV3LmNoaWxkcmVuLnB1c2goY2hpbGRWaWV3KTtcbiAgICB9XG59XG5cbmxldCBpdGVtQ2xpY2sgPSBmdW5jdGlvbihvbkl0ZW1DbGljayl7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGkpe1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIG9uSXRlbUNsaWNrKGkpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vL0dldCB0aGUgY2hpbGQgZWxlbWVudCBmb3IgYSBwYXJ0aWN1bGFyIGluZGV4XG5sZXQgZ2V0Q2hpbGRJdGVtVmlld0J5SW5kZXggPSBmdW5jdGlvbih2aWV3LGkpe1xuICAgIGxpc3RJbmRleD0wO1xuICAgIGxldCBjbG9uZVRlbXBsYXRlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2aWV3LnByb3BzLmRhdGEuaXRlbVZpZXcpKTtcbiAgICBpZih2aWV3LnByb3BzLmhhc093blByb3BlcnR5KCdvbkl0ZW1DbGljaycpKXtcbiAgICAgICAgbGV0IG9uSXRlbUNsaWNrID0gdmlldy5wcm9wcy5vbkl0ZW1DbGljaztcbiAgICAgICAgY2xvbmVUZW1wbGF0ZS5wcm9wcy5vbkNsaWNrID1pdGVtQ2xpY2sob25JdGVtQ2xpY2spKGkpO1xuICAgIH1cbiAgICBsZXQgcmVzPSBnZXRJdGVtVmlldyhjbG9uZVRlbXBsYXRlLHZpZXcucHJvcHMuZGF0YS5ob2xkZXJWaWV3cyx2aWV3LnByb3BzLml0ZW1EYXRhc1tpXSlcbiAgICByZXR1cm4gcmVzO1xufVxuXG5cbi8vcmVmb3JtYXQgdGhlIHRlbXBsYXRlXG5mdW5jdGlvbiBjaGFuZ2VJdGVtVmlldyh2aWV3KVxue1xuICAgIHZpZXcucHJvcHMuaG9sZGVySWQgPSB2aWV3LnByb3BzLmlkO1xuICAgIHZpZXcucHJvcHMuaWQgPSB1bmRlZmluZWQ7XG4gICAgaWYodmlldy5jaGlsZHJlbilcbiAgICAgICAgZm9yKCBsZXQgY2hpbGQgb2Ygdmlldy5jaGlsZHJlbilcbiAgICAgICAgICAgIGNoYW5nZUl0ZW1WaWV3KGNoaWxkKTtcbn1cblxuXG5tb2R1bGUuZXhwb3J0cz17ZGlmZkFycmF5LGNyZWF0ZUxpc3RWaWV3LGdldEl0ZW1WaWV3LGdldENoaWxkSXRlbVZpZXdCeUluZGV4fTtcblxuLy9uZXdpbmZsYXRlZCAtPiBpc05ld0luZmxhdGVkXG4vL2FkZCBzcGFjZXNcbi8vYWRkIHN1bW1hcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEB/ListPresto.js\n");

/***/ }),

/***/ "./src/WEB/MapAttributes.js":
/*!**********************************!*\
  !*** ./src/WEB/MapAttributes.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./Utils */ \"./src/WEB/Utils.js\");\n\nfunction mapPropToStyle(element, props, type) {\n    var ele_style = \"\";\n    ele_style += addProps(props);\n    ele_style += addFontProp(props);\n    ele_style += addTransformProp(props);\n    ele_style += addStrokeProp(props);\n    ele_style += addGradientProp(props);\n    ele_style += addRotateProp(props);\n    ele_style += addShadowProp(props);\n    ele_style += addTypeSpecificProp(type, props);\n\n    // TODO: mapPropToStyle should not do these side effect, when merging Render.js and MapAttributes.js, seperate out these functions from here.\n    ele_style += addSetInputTypeProp(element, props); // also sets an attribute on mutable element\n    // setElemAttributes(element,props);\n\n    return ele_style;\n}\n\nvar initializeShow = function initializeShow(elem, props, type) {\n    var style = \"\";\n    if (type == 'linearLayout') {\n        if (props.hasOwnProperty('width') && props.width == 'wrap_content') {\n            style += \"display: inline-flex;\";\n            style += \"width: max-content;\";\n            // elem.style.display = 'inline-flex';\n            // elem.style.width = 'max-content';\n        } else {\n            style += \"display: flex;\";\n            //elem.style.display = \"flex\";\n        }\n    } else {\n        if (props.hasOwnProperty('width') && props.width == 'wrap_content') {\n            style += \"display:inline-bloack;\";\n            style += \"width:max-content;\";\n            // elem.style.display = 'inline-block';\n            // elem.style.width = 'max-content';\n        } else {\n                // style += \"display:'';\";\n                //    elem.style.display = '';\n            }\n    }\n    return style;\n};\n\n// Author's Note: Haskel's pattern matching would've made this code prettier. - Convert Presto to Purs?\n// fontStyle take precedence over fontFamily\nfunction addProps(props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty(\"onClick\") || props.hasOwnProperty(\"onClickEvent\")) {\n        if (window.innerWidth > 550 && !props.cursorType) {\n            ele_style += \"cursor:pointer;\";\n        }\n    }\n\n    if (props.hasOwnProperty(\"cursorType\")) {\n        ele_style += \"cursor: \" + props.cursorType + \";\";\n    }\n\n    if (props.hasOwnProperty(\"textSize\")) {\n        ele_style += \"font-size: \" + props.textSize + \"px;\";\n    }\n\n    if (props.hasOwnProperty(\"fontSize\")) {\n        ele_style += \"font-size: \" + props.fontSize + \"px;\";\n    }\n\n    if (props.hasOwnProperty(\"backgroundColor\")) {\n        ele_style += \"background-color: \" + utils.parseColors(props.backgroundColor) + \";\";\n    };\n\n    if (props.hasOwnProperty(\"background\")) {\n        ele_style += \"background: \" + utils.parseColors(props.background) + \";\";\n    };\n\n    if (props.hasOwnProperty(\"backgroundDrawable\")) {\n        ele_style += \"background-image: \" + \"url('\" + props.backgroundDrawable + \"')\" + \";\";\n    };\n\n    if (props.hasOwnProperty(\"color\")) {\n        ele_style += \"color: \" + utils.parseColors(props.color) + \";\";\n    };\n\n    if (props.hasOwnProperty(\"position\")) {\n        ele_style += \"position: \" + props.position + \";\";\n    };\n\n    if (props.hasOwnProperty(\"bottomFixed\")) {\n        ele_style += \"bottom: \" + props.bottomFixed + \";\";\n    };\n\n    if (props.hasOwnProperty(\"topFixed\")) {\n        ele_style += \"top: \" + props.topFixed + \";\";\n    };\n\n    if (props.hasOwnProperty(\"leftFixed\")) {\n        ele_style += \"left: \" + props.leftFixed + \";\";\n    };\n\n    if (props.hasOwnProperty(\"rightFixed\")) {\n        ele_style += \"right: \" + props.rightFixed + \";\";\n    };\n\n    if (props.hasOwnProperty(\"zIndex\")) {\n        ele_style += \"z-index:\" + props.zIndex + \";\";\n    };\n\n    if (props.hasOwnProperty(\"cornerRadius\")) {\n        ele_style += \"border-radius:\" + props.cornerRadius + \"px;\";\n    };\n\n    if (props.hasOwnProperty(\"alpha\")) {\n        ele_style += \"opacity:\" + props.alpha + \";\";\n    };\n\n    if (props.hasOwnProperty(\"fontFamily\")) {\n        ele_style += \"font-family:\" + props.fontFamily + \";\";\n    };\n\n    if (props.hasOwnProperty(\"blurBackground\") && props.blurBackground) {\n        ele_style += \"backdrop-filter: blur(3px)\";\n    }\n\n    if (props.hasOwnProperty(\"lineHeight\")) {\n        ele_style += \"line-height: \" + props.lineHeight + \";\";\n    }\n\n    if (props.hasOwnProperty(\"objectFit\")) {\n        ele_style += \"object-fit: \" + props.objectFit + \";\";\n    }\n\n    if (props.hasOwnProperty(\"clickable\")) {\n        ele_style += \"pointer-events: \" + (props.clickable ? \"auto\" : \"none\") + \";\";\n    }\n\n    if (props.hasOwnProperty(\"display\")) {\n        ele_style += \"display:\" + props.display + \";\";\n    }\n\n    return ele_style;\n}\n\n// These values are hardcoded likely since same prestoDOM property is being used for Android, iOS and Web\nfunction addFontProp(props) {\n\n    var ele_style = \"\";\n\n    if (props.typeface) {\n        switch (props.typeface) {\n            case 'normal':\n                ele_style += \"font-weight: 400;\";\n                break;\n            case 'bold':\n                ele_style += \"font-weight: 700;\";\n                break;\n            case 'italic':\n                ele_style += \"font-style: italic;\";\n                break;\n            case 'bold_italic':\n                ele_style += \"font-weight: 700;\";\n                ele_style += \"font-style: italic;\";\n                break;\n            case 'underline':\n                ele_style += \"text-decoration: underline;\";\n                break;\n        }\n    }\n\n    if (props.fontStyle) {\n\n        var match = props.fontStyle.match(/[/-]/);\n        var fontName = match ? props.fontStyle.slice(0, match.index) : props.fontStyle;\n\n        ele_style += \"font-family:\" + fontName + \";\";\n\n        if (match) {\n            var type = props.fontStyle.slice(match.index + 1);\n            type = type.replace(/[-/]/g, '');\n            type = type.toLowerCase();\n\n            if (type.indexOf('italic') != -1) ele_style += \"font-style: italic;\";\n\n            var fontWeight = 0;\n\n            if (type.indexOf('extralight') != -1) fontWeight = 200;else if (type.indexOf('light') != -1) fontWeight = 300;else if (type.indexOf('regular') != -1 || type.indexOf('book') != -1) fontWeight = 400;else if (type.indexOf('semibold') != -1 || type.indexOf('medium') != -1) fontWeight = 500;else if (type.indexOf('bold') != -1 || type.indexOf('heavy') != -1) fontWeight = 700;else if (type.indexOf('black') != -1) fontWeight = 900;\n\n            if (fontWeight > 0) ele_style += \"font-weight:\" + fontWeight + \";\";\n        }\n    }\n\n    return ele_style;\n}\n\nfunction addTransformProp(props) {\n    var ele_style = \"\";\n    var transform = \"\";\n    if (props.translationX) {\n        transform += \"translateX(\" + props.translationX + \"px) \";\n    };\n\n    if (props.translationY) {\n        transform += \"translateY(\" + props.translationY + \"px) \";\n    };\n\n    if (props.scaleX) {\n        transform += \"scaleX(\" + props.scaleX + \") \";\n    };\n\n    if (props.scaleY) {\n        transform += \"scaleY(\" + props.scaleY + \") \";\n    };\n\n    if (props.rotation) {\n        transform += \"rotate(\" + props.rotation + \") \";\n    };\n\n    if (props.rotationX) {\n        transform += \"rotateX(\" + props.rotationX + \") \";\n    };\n\n    if (props.rotationY) {\n        transform += \"rotateY(\" + props.rotationY + \") \";\n    };\n\n    // if (key == \"translationZ\") {\n    //     var v = config[key];\n    //     config.style[\"-webkit-box-shadow\"] = \"0 0 \"+v.toString()+\"px rgba(0,0,0, .1)\";\n    //     config.style[\"-moz-box-shadow\"]= \"0 0 \"+v.toString()+\"px rgba(0,0,0, .1)\";\n    //     config.style[\"box-shadow\"]=  \"0 0 \"+v.toString()+\"px rgba(0,0,0, .1)\";\n\n    //   }\n    if (transform.length > 0) {\n        ele_style += \"transform : \" + transform + \";\";\n    };\n    return ele_style;\n}\n\nfunction addStrokeProp(props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty(\"stroke\")) {\n\n        var values = props.stroke.split(\",\");\n\n        if (values.length == 2) {\n            ele_style += \"border: \" + values[0] + \"px solid \" + values[1] + \";\";\n        } else if (values.length == 3) {\n\n            if (values[2] == \"rbl\") {\n                ele_style += \"border-bottom: \" + values[0] + \"px solid \" + values[1] + \";\";\n                ele_style += \"border-left: \" + values[0] + \"px solid \" + values[1] + \";\";\n                ele_style += \"border-right: \" + values[0] + \"px solid \" + values[1] + \";\";\n            } else if (values[2] == \"b\") {\n                ele_style += \"border-bottom: \" + values[0] + \"px solid \" + values[1] + \";\";\n            } else if (values[2] == \"r\") {\n                ele_style += \"border-right: \" + values[0] + \"px solid \" + values[1] + \";\";\n            } else if (values[2] == \"rb\") {\n                ele_style += \"border-bottom: \" + values[0] + \"px solid \" + values[1] + \";\";\n                ele_style += \"border-right: \" + values[0] + \"px solid \" + values[1] + \";\";\n            } else ele_style += \"border: \" + values[0] + \"px  \" + values[1] + \" \" + values[2] + \";\";\n        }\n    }\n\n    if (props.hasOwnProperty(\"strokeTop\")) {\n        var _values = props.strokeTop.split(\",\");\n        if (_values.length == 2) ele_style += \"border-top: \" + _values[0] + \"px solid \" + _values[1] + \";\";else if (_values.length == 3) ele_style += \"border-top: \" + _values[0] + \"px  \" + _values[1] + \" \" + _values[2] + \";\";\n    }\n\n    if (props.hasOwnProperty(\"strokeRight\")) {\n        var _values2 = props.strokeRight.split(\",\");\n        if (_values2.length == 2) ele_style += \"border-right: \" + _values2[0] + \"px solid \" + _values2[1] + \";\";else if (_values2.length == 3) ele_style += \"border-right: \" + _values2[0] + \"px  \" + _values2[1] + \" \" + _values2[2] + \";\";\n    }\n\n    if (props.hasOwnProperty(\"strokeBottom\")) {\n        var _values3 = props.strokeBottom.split(\",\");\n        if (_values3.length == 2) ele_style += \"border-bottom: \" + _values3[0] + \"px solid \" + _values3[1] + \";\";else if (_values3.length == 3) ele_style += \"border-bottom: \" + _values3[0] + \"px  \" + _values3[1] + \" \" + _values3[2] + \";\";\n    }\n\n    if (props.hasOwnProperty(\"strokeRight\")) {\n        var _values4 = props.strokeRight.split(\",\");\n        if (_values4.length == 2) ele_style += \"border-right: \" + _values4[0] + \"px solid \" + _values4[1] + \";\";else if (_values4.length == 3) ele_style += \"border-right: \" + _values4[0] + \"px  \" + _values4[1] + \" \" + _values4[2] + \";\";\n    }\n\n    if (props.hasOwnProperty(\"strokeLeft\")) {\n        var _values5 = props.strokeLeft.split(\",\");\n        if (_values5.length == 2) ele_style += \"border-left: \" + _values5[0] + \"px solid \" + _values5[1] + \";\";else if (_values5.length == 3) ele_style += \"border-left: \" + _values5[0] + \"px  \" + _values5[1] + \" \" + _values5[2] + \";\";\n    }\n\n    return ele_style;\n}\n\nfunction addGradientProp(props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty(\"gradient\")) {\n        var gradientObj = JSON.parse(props.gradient);\n        if (gradientObj.type == \"linear\") {\n            var angle = gradientObj.angle;\n            var values = gradientObj.values;\n            var colors = values.join(\", \");\n            ele_style += \"background-image: \" + \"linear-gradient(\" + angle + \"deg, \" + colors + \");\";\n        } else {\n            var values = gradientObj.values;\n            var colors = values.join(\", \");\n            ele_style += \"background-image: \" + \"radial-gradient(\" + colors + \");\";\n        }\n    }\n\n    return ele_style;\n}\n\nfunction addTransitionValue(props) {\n    //let elem_transition = props.transition == undefined ? \"0ms all\" : props.transition // It will always be undefined lol\n    var transition_val = [String(props.a_duration || 0) + \"ms\", \"all\", props.transitionTimingFunction].filter(Boolean).join(\" \");\n    return \"transition:\" + transition_val + \";\";\n}\nfunction addSize() {\n    var view = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\n    var props = view.props;\n    var parentView = view.parent || {};\n    parentView.state = parentView.state || {};\n    view.state = view.state || {};\n    var parentProps = parentView.props || {};\n    // Add elem as an argument if you are gonna uncomment it\n    // elem.style.width = 'auto';\n    // elem.style.height = 'auto';\n    var elem_style = \"width : auto; \";\n    elem_style += \"height: auto; \";\n\n    if (props.hasOwnProperty('width')) {\n        if (props.width == 'match_parent' && !parentView.state.treatMatchParentAsWrapWidth) {\n            // treat parent wrap content as wrap_content instead of match_parent\n            if (props.hasOwnProperty('margin')) {\n                var margin = props.margin.split(\",\");\n                elem_style += \"width:\" + \"calc(100% - \" + (parseInt(margin[0]) + parseInt(margin[2])).toString() + \"px );\";\n            } else elem_style += \"width : 100%; \";\n            //elem.style.width = '100%';\n        } else if (props.width == 'match_parent' && parentView.state.treatMatchParentAsWrapWidth) {\n            view.state.practicalWidth = 'wrap_content';\n        } else if (props.width == 'wrap_content') {\n            view.state.practicalWidth = 'wrap_content';\n        } else if (!isNaN(props.width)) {\n            if (props.hasOwnProperty('percentWidth') && props.percentWidth) elem_style += \"width: \" + props.width + \"%;\";\n            // elem.style.width = props.width + '%';\n            else elem_style += \"width: \" + props.width + \"px;\";\n            //elem.style.width = props.width + 'px';\n        }\n    }\n    if (props.hasOwnProperty('height')) {\n        if (props.height == 'match_parent' && !parentView.state.treatMatchParentAsWrapHeight) {\n            elem_style += \"height: 100%;\";\n            // elem.style.height = '100%';\n        } else if (props.height == 'match_parent' && parentView.state.treatMatchParentAsWrapHeight) {\n            view.state.practicalHeight = 'wrap_content';\n            elem_style += \"height: auto;\";\n            //elem.style.height = \"auto\";\n            // You see below\n        } else if (props.height == 'wrap_content') {\n            view.state.practicalHeight = 'wrap_content';\n        } else if (!isNaN(props.height)) {\n            if (props.hasOwnProperty('percentHeight') && props.percentHeight) elem_style += \"height: \" + props.height + \"%;\";\n            //                elem.style.height = props.height + '%';\n            else elem_style += \"height: \" + props.height + \"px;\";\n            //            elem.style.height = props.height + 'px';\n        }\n    }\n\n    if (props.hasOwnProperty('minWidth') && !isNaN(props.minWidth)) {\n        if (props.percentMinWidth) elem_style += \"min-width: \" + props.minWidth + \"%;\";\n        //            elem.style.minWidth = props.minWidth + '%';\n        else elem_style += \"min-width: \" + props.minWidth + \"px;\";\n\n        //    elem.style.minWidth = props.minWidth + 'px';\n    }\n\n    if (props.hasOwnProperty('minHeight') && !isNaN(props.minHeight)) {\n        if (props.percentMinHeight) elem_style += \"min-height: \" + props.minHeight + \"%;\";\n        // elem.style.minHeight = props.minHeight + '%';\n        else elem_style += \"min-height: \" + props.minHeight + \"px;\";\n        // elem.style.minHeight = props.minHeight + 'px';\n    }\n\n    if (props.hasOwnProperty('maxWidth') && !isNaN(props.maxWidth)) {\n        if (props.percentMaxWidth) elem_style += \"max-width: \" + props.maxWidth + \"%;\";\n        //            elem.style.maxWidth = props.maxWidth + '%';\n        else elem_style += \"max-width: \" + props.maxWidth + \"px;\";\n        //            elem.style.maxWidth = props.maxWidth + 'px';\n    }\n\n    if (props.hasOwnProperty('maxHeight') && !isNaN(props.maxHeight)) {\n        if (props.percentMaxHeight) elem_style += \"max-height: \" + props.maxHeight + \"%;\";\n        // elem.style.maxHeight = props.maxHeight + '%';\n        else elem_style += \"max-height: \" + props.maxHeight + \"px;\";\n        //elem.style.maxHeight = props.maxHeight + 'px';\n    }\n    return elem_style;\n}\n\nfunction addBorder(props) {\n    var elem_style = \"\";\n    if (props.hasOwnProperty('padding')) {\n        var padding = props.padding.split(',').map(function (a) {\n            return a * 1;\n        });\n        elem_style += \"padding: \" + padding[1] + \"px \" + padding[2] + \"px \" + padding[3] + \"px \" + padding[0] + \"px;\";\n        //        elem.style['padding'] = padding[1] + 'px ' + padding[2] + 'px ' + padding[3] + 'px ' + padding[0] + 'px';\n    }\n\n    if (props.hasOwnProperty('margin')) {\n        var margin = props.margin.split(',').map(function (a) {\n            return a * 1;\n        });\n        elem_style += \"margin: \" + margin[1] + \"px \" + margin[2] + \"px \" + margin[3] + \"px \" + margin[0] + \"px;\";\n        //        elem.style['margin'] = margin[1] + 'px ' + margin[2] + 'px ' + margin[3] + 'px ' + margin[0] + 'px';\n    }\n    return elem_style;\n}\n\nfunction addVisibility(elem, props, type) {\n    var elem_style = \"\";\n    if (props.hasOwnProperty('visibility')) {\n        var visibility = props.visibility;\n        if (visibility == 'invisible') elem_style += \"visibility: hidden;\";\n        //elem.style.visibility = \"hidden\";\n        else if (visibility == 'gone') elem_style += \"display: none;\";\n            //elem.style.display = \"none\";\n            else {\n                    // elem_style += \"visibility: '';\";\n                    //elem.style.visibility = '';\n                    elem_style += initializeShow(elem, props, type);\n                }\n    } else {\n        elem_style += initializeShow(elem, props, type);\n    }\n    return elem_style;\n}\n\nfunction addExpandability(elem, props, type) {\n    var elem_style = \"\";\n    if (props.hasOwnProperty('expand')) {\n        var visibility = props.expand + '';\n        if (visibility == 'true') {\n            // elem_style += \"visibility: '';\";\n            // elem.style.visibility = '';\n            elem_style += initializeShow(elem, props, type);\n        } else elem_style += \"display: none;\";\n        //    elem.style.display = \"none\";\n    }\n    return elem_style;\n}\nfunction addOverFlow(props) {\n    var elem_style = \"\";\n    if (props.hasOwnProperty('overFlowVisible')) {\n        if (props.overFlowVisible) {\n            elem_style += \"overflow: visible;\";\n            // elem.style.overflow = \"visible\"\n        }\n    }\n    return elem_style;\n}\nfunction setGravityStylesForRow(elem, props) {\n\n    var gravity_row_style = \"\";\n\n    if (!props.hasOwnProperty('gravity') || !props.gravity) {\n        props.gravity = '';\n        //return;\n    }\n\n    switch (props.gravity) {\n        case 'center_vertical':\n            gravity_row_style += \"align-items: center;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n\n            // elem.gravity_row_style['align-items'] = 'center';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n        case 'center_horizontal':\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: center;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'center';\n            break;\n        case 'center':\n            gravity_row_style += \"align-items: center;\";\n            gravity_row_style += \"justify-content: center;\";\n            // elem.gravity_row_style['align-items'] = \"center\";\n            // elem.gravity_row_style['justify-content'] = \"center\";\n            break;\n        case 'left':\n        case 'start':\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n        case 'right':\n        case 'end':\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: flex-end;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'flex-end';\n            break;\n        case 'stretch':\n            gravity_row_style += \"align-items: stretch;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n            // elem.gravity_row_style['align-items'] = 'stretch';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n        default:\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n    }\n\n    return gravity_row_style;\n}\nfunction setGravityStylesForColumn(elem, props) {\n\n    var gravity_col_style = \"\";\n    if (!props.hasOwnProperty('gravity') || !props.gravity) {\n        props.gravity = '';\n        //return;\n    }\n\n    switch (props.gravity) {\n        case 'center_vertical':\n            gravity_col_style += \"align-items: flex-start;\";\n            gravity_col_style += \"justify-content: center;\";\n            // elem.style['align-items'] = 'flex-start';\n            // elem.style['justify-content'] = 'center';\n            break;\n        case 'center_horizontal':\n            gravity_col_style += \"align-items: center;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'center';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n        case 'center':\n            gravity_col_style += \"align-items: center;\";\n            gravity_col_style += \"justify-content: center;\";\n            // elem.style[\"align-items\"] = \"center\";\n            // elem.style[\"justify-content\"] = \"center\";\n            break;\n        case 'left':\n        case 'start':\n            gravity_col_style += \"align-items: flex-start;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['justify-content'] = 'flex-start';\n            // elem.style['align-items'] = 'flex-start';\n            break;\n        case 'right':\n        case 'end':\n            gravity_col_style += \"align-items: flex-end;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'flex-end';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n        case 'stretch':\n            gravity_col_style += \"align-items: stretch;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'stretch';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n        default:\n            gravity_col_style += \"align-items: flex-start;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'flex-start';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n    }\n    return gravity_col_style;\n}\n\nfunction addLayout(elem, type, props) {\n\n    var scrollBarX = props.hasOwnProperty('scrollBarX') ? props.scrollBarX : true;\n    var scrollBarY = props.hasOwnProperty('scrollBarY') ? props.scrollBarX : true;\n    var elem_style = \"\";\n    switch (type) {\n        case 'linearLayout':\n            elem_style += \"box-sizing: border-box;\";\n            //elem.style[\"box-sizing\"] = \"border-box\";\n\n            if (props.hasOwnProperty('fixedWrap') && !props.fixedWrap) {\n                elem_style += \"flex-wrap: nowrap;\";\n                //elem.style[\"flex-wrap\"] = \"nowrap\";\n            } else {\n                elem_style += \"flex-wrap: wrap;\";\n                //elem.style[\"flex-wrap\"] = \"wrap\";\n            }\n\n            var orient = props.orientation == \"horizontal\" || props.orientation == null ? \"row\" : \"column\";\n            elem_style += \"flex-direction: \" + orient + \";\";\n            // elem.style[\"flex-direction\"] =\n\n            if (orient == 'row') elem_style += setGravityStylesForRow(elem, props);else elem_style += setGravityStylesForColumn(elem, props);\n\n            // if (elem.style[\"flex-direction\"] == 'row')\n            //     setGravityStylesForRow(elem, props);\n            // else\n            //     setGravityStylesForColumn(elem, props);\n\n            if (props.hasOwnProperty('scrollBarX')) {\n                if (props.scrollBarX) elem_style += \"overflow-x: auto;\";\n                //                  elem.style.overflowX = 'auto'\n                else elem_style += \"overflow-x: hidden;\";\n                //              elem.style.overflowX = 'hidden'\n            }\n\n            if (props.hasOwnProperty('scrollBarY')) {\n                if (props.scrollBarY) elem_style += \"overflow-y: auto;\";\n                // elem.style.overflowY = 'auto'\n                else elem_style += \"overflow-y: hidden;\";\n                // elem.style.overflowY = 'hidden'\n            }\n            break;\n        case \"horizontaScrollView\":\n            elem_style += \"overflow-x: auto;\";\n            elem_style += \"overflow-y: hidden;\";\n            // elem.style.overflowX = \"auto\";\n            // elem.style.overflowY = \"hidden\";\n\n            // if (!scrollBarX)\n            //     elem_style += \"overflow-x: hidden;\";\n            break;\n        case 'listView':\n            elem_style += \"overflow-x: hidden;\";\n            elem_style += \"overflow-y: auto;\";\n\n            // elem.style.overflowY = \"auto\";\n            // elem.style.overflowX = \"hidden\";\n\n            // if (!scrollBarY)\n            //     elem_style += \"overflow-y: hidden;\";\n            // elem.style.overflowY = 'hidden';\n            break;\n        case 'scrollView':\n            elem_style += \"overflow-x: auto;\";\n            elem_style += \"overflow-y: auto;\";\n\n            // elem.style.overflowX = 'auto';\n            // elem.style.overflowY = 'auto';\n\n            // if (!scrollBarX)\n            //     elem_style += \"overflow-x: hidden;\";\n            // if (!scrollBarY)\n            //     elem_style += \"overflow-y: hidden;\";\n            break;\n        case 'relativeLayout':\n            elem_style += \"position: relative;\";\n            // elem.style.position = 'relative';\n\n            if (props.hasOwnProperty('scrollBarX')) {\n                if (props.scrollBarX) elem_style += \"overflow-x: auto;\";\n                // elem.style.overflowX = 'auto'\n                else elem_style += \"overflow-x: hidden;\";\n                // elem.style.overflowX = 'hidden'\n            }\n\n            if (props.hasOwnProperty('scrollBarY')) {\n                if (props.scrollBarY) elem_style += \"overflow-y: auto;\";\n                //  elem.style.overflowY = 'auto'\n                else elem_style += \"overflow-y: hidden;\";\n                //          elem.style.overflowY = 'hidden'\n            }\n    }\n\n    return elem_style;\n}\n\nfunction addImage(type, props, elem) {\n    if (type == 'imageView') {\n        if (props.imageUrl) {\n            var imageUrl = props.imageUrl;\n\n            if (props.rawData) {\n                // Do Nothing\n            } else {\n                var temp = imageUrl.split('.');\n                var ext = '';\n                if (temp && temp.length > 0) ext = temp[temp.length - 1];\n\n                var exts = [\"jpeg\", \"jpg\", \"png\", \"bmp\", \"svg\", \"gif\"];\n                ext = ext.toLowerCase();\n\n                if (!imageUrl.includes(\"data:image/\") && !exts.includes(ext)) {\n                    imageUrl += '.png';\n                }\n            }\n\n            elem.setAttribute('src', imageUrl);\n        }\n    }\n}\nfunction findArticle(children) {\n    var article = null;\n    if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n            if (children[i].nodeName.toLowerCase() == 'article') {\n                article = children[i];\n                break;\n            }\n        }\n    }\n    return article ? article : document.createElement('Article');\n}\nfunction getArticle(children, config) {\n    var article = findArticle(children);\n\n    if (config.isHtmlContent) article.innerHTML = config.textFromHtml;else article.innerText = config.text;\n    article.style.wordBreak = \"break-word\";\n    article.style.display = \"inline\";\n    return article;\n}\nfunction getTextStyle(config) {\n    var text = \"white-space:initial;\";\n    return config.letterSpacing ? text + \"letter-spacing:\" + config.letterSpacing + \";\" : text;\n}\nfunction createTextElement(elem, config) {\n\n    var text_style = getTextStyle(config);\n    var article = getArticle(elem.childNodes, config);\n    elem.appendChild(article);\n    return text_style;\n}\nfunction addTextProperties(props, elem, type) {\n    var elem_style = \"\";\n    if (props.hasOwnProperty(\"text\")) {\n        if (type == \"editText\") elem.value = props.text;else elem_style += createTextElement(elem, props);\n    }\n\n    if (props.hasOwnProperty(\"textFromHtml\")) {\n        props.isHtmlContent = true;\n        if (type == \"editText\") elem.value = props.textFromHtml;else elem_style += createTextElement(elem, props);\n    }\n    return elem_style;\n}\nfunction addClassNameProperties(props, elem) {\n    if (props.hasOwnProperty(\"className\")) {\n        if ((props.className || \"\").trim() !== \"\") {\n            props.className.split(\" \").map(function (className) {\n                elem.classList.add(className);\n            });\n        }\n    }\n\n    if (props.hasOwnProperty(\"classList\")) {\n        JSON.parse(props.classList).forEach(function (obj) {\n            elem.classList.add(obj);\n        });\n    }\n\n    if (props.hasOwnProperty(\"removeClassList\")) {\n        JSON.parse(props.removeClassList).forEach(function (obj) {\n            elem.classList.remove(obj);\n        });\n    }\n}\nfunction addFunctions(props, elem) {\n    var elem_style = \"\";\n    for (var key in props) {\n        if (props[key] && typeof props[key] == \"function\") {\n            var eventType = key.substring(2, key.length).toLowerCase();\n            var elemCB = props[key];\n            elem_style += \"user-select: none;\";\n            //elem.style.userSelect = 'none';\n            if (eventType == \"change\") {\n                eventType = \"input\";\n            }\n\n            elem.addEventListener('blur', function () {\n                var inputValue = elem.value;\n                if (inputValue == \"\") {\n                    elem.classList.remove(\"filled\");\n                    elem.parentNode.classList.remove('focused');\n                } else {\n                    elem.classList.add('filled');\n                }\n            });\n\n            elem['onfocus'] = function (e) {\n                elem.parentNode.classList.add('focused');\n                if (eventType == \"focus\") {\n                    e.stopPropagation();\n                    elemCB(e);\n                }\n            };\n        }\n    }\n    return elem_style;\n}\nfunction addAnimationAttributes(props) {\n    var elem_style = \"\";\n    var animation_transition = getAnimeTransition(props);\n\n    var animation_transform = getAnimeTransform(props);\n\n    var animation_opacity = getAnimeOpacity(props);\n\n    if (animation_transition.length > 0 && animation_transform.length + animation_opacity.length > 0) {\n        // this will need to be renamed actually to VDOM output's\n        var afterTransition = function afterTransition() {\n            elem_style += animation_transition;\n            if (animation_transform.length > 0) elem_style += animation_transform;\n            if (animation_opacity.length > 0) {\n                elem_style += animation_opacity;\n            }\n        };\n\n        if (props.style.transform || props.style.opacity) {\n            setTimeout(afterTransition, 100); // Why is a time out here?\n        } else {\n            afterTransition();\n        }\n    }\n    return elem_style;\n}\n\nfunction addTypeSpecificProp(type, props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty('visibility')) {\n        if (props.visibility == \"gone\") return ele_style;\n    }\n\n    if (props.hasOwnProperty('display')) {\n        if (props.display == \"none\") return ele_style;\n    }\n\n    if (type == \"textView\" && props.hasOwnProperty(\"gravity\")) {\n        ele_style += \"text-align:\" + props.gravity + \";\";\n\n        if (props.gravity == \"center_vertical\") {\n            ele_style += \"align-items:center;\";\n            ele_style += \"display:flex;\";\n        } else if (props.gravity == \"center_horizontal\") {\n            ele_style += \"justify-content:center;\";\n            ele_style += \"display:flex;\";\n        } else if (props.gravity == \"center\") {\n            ele_style += \"justify-content:center;\";\n            ele_style += \"align-items:center;\";\n            ele_style += \"display:flex;\";\n        }\n    }\n\n    if (type == \"linearLayout\" && props.hasOwnProperty(\"gravity\")) {\n        if (props.margin && props.gravity == \"center_vertical\") {\n\n            var margin = props.margin.split(\",\");\n            if (props.width == \"match_parent\") {\n                var width = \"calc(100% - \" + (parseInt(margin[0]) + parseInt(margin[2])).toString() + \"px )\";\n                ele_style += \"width:\" + width + \";\";\n            }\n        }\n    }\n\n    return ele_style;\n}\n\nfunction addRotateProp(props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty(\"rotateImage\")) {\n        if (props.rotateImage) {\n            ele_style += \"-webkit-animation:load3 4s infinite linear;\";\n            ele_style += \"animation-duration:4s;\";\n            ele_style += \"animation-timing-function:linear;\";\n            ele_style += \"animation-delay:0s;\";\n            ele_style += \"animation-iteration-count:infinite;\";\n            ele_style += \"animation-direction:normal;\";\n            ele_style += \"animation-fill-mode:none;\";\n            ele_style += \"animation-play-state:running;\";\n            ele_style += \"animation-name:rotation;\";\n        }\n    }\n\n    return ele_style;\n}\n\nfunction addShadowProp(props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty(\"shadow\")) {\n        var shadowValues = props.shadow.split(props.shadowSeparator || ',');\n        var shadowBlur = utils.rWS(utils.cS(shadowValues[2]));\n        var shadowSpread = utils.rWS(utils.cS(shadowValues[3]));\n        var shadowOpacity = utils.rWS(utils.cS(shadowValues[5]));\n        var shadowOffset = {\n            x: utils.rWS(utils.cS(shadowValues[0])),\n            y: utils.rWS(utils.cS(shadowValues[1]))\n        };\n\n        var shadowColor = utils.convertColorToRgba(shadowValues[4]);\n        var shadowType = props.shadowType ? props.shadowType + \" \" : '';\n\n        ele_style += \"box-shadow:\" + shadowType + parseInt(shadowOffset.x) + \"px \" + parseInt(shadowOffset.y) + \"px \" + parseInt(shadowBlur) + \"px \" + parseInt(shadowSpread) + \"px rgba(\" + shadowColor.r + \", \" + shadowColor.g + \", \" + shadowColor.b + \", \" + shadowColor.a + \");\";\n    }\n\n    return ele_style;\n}\n\nfunction addSetInputTypeProp(ele, props) {\n\n    var ele_style = \"\";\n\n    if (props.hasOwnProperty(\"inputType\")) {\n\n        var inputType = \"text\";\n\n        if (props.inputType == \"numericPassword\" || props.inputType == \"password\") {\n            if (props.inputTypeI == 4 && window.innerWidth < 550) {\n                // This feels like a very specific use-case? Investigate\n                inputType = \"tel\";\n                ele_style += \"-webkit-text-security:disc;\";\n                ele_style += \"-moz-text-security:disc;\";\n                ele_style += \"text-security:disc;\";\n            } else {\n                ele.setAttribute(\"autocomplete\", \"new-password\");\n                inputType = \"password\";\n            }\n        } else if (props.inputType == \"disabled\") {\n            ele.setAttribute(\"disabled\", \"disabled\");\n        } else if (props.inputType == \"numeric\") {\n            inputType = \"number\";\n        }\n\n        if (props.hasOwnProperty(\"separator\")) {\n            if (props.inputType == \"numeric\") {\n                inputType = \"tel\";\n            } else {\n                inputType = \"text\";\n            }\n        }\n\n        ele.setAttribute(\"type\", inputType);\n    }\n\n    return ele_style;\n}\n\nfunction getAnimeTransform(props) {\n\n    var elem_style_value = \"\";\n\n    if (props.hasOwnProperty(\"a_translationY\")) {\n        elem_style_value += \"translateY(\" + props[\"a_translationY\"] + \"px) \";\n    }\n\n    if (props.hasOwnProperty(\"a_translationX\")) {\n        elem_style_value += \"translateX(\" + props[\"a_translationX\"] + \"px) \";\n    }\n\n    if (props.hasOwnProperty(\"a_scaleX\")) {\n        elem_style_value += \"scaleX(\" + props[\"a_scaleX\"] + \") \";\n    }\n\n    if (props.hasOwnProperty(\"a_scaleY\")) {\n        elem_style_value += \"scaleY(\" + props[\"a_scaleY\"] + \") \";\n    }\n\n    if (props.hasOwnProperty(\"a_rotation\")) {\n        elem_style_value += \"rotate(\" + props[\"a_rotation\"] + \"deg) \";\n    }\n\n    if (props.hasOwnProperty(\"a_rotationX\")) {\n        elem_style_value += \"rotateX(\" + props[\"a_rotationX\"] + \"deg) \";\n    }\n\n    if (props.hasOwnProperty(\"a_rotationY\")) {\n        elem_style_value += \"rotateY(\" + props[\"a_rotationY\"] + \"deg) \";\n    }\n\n    if (elem_style_value.length > 0) return \" transform: \" + elem_style_value + \";\";else return \"\";\n}\n\nfunction getAnimeOpacity(props) {\n    if (props.hasOwnProperty(\"a_alpha\")) {\n        return \"opacity: \" + props[\"a_alpha\"] + \"; \";\n    } else return \"\";\n}\n\nfunction getAnimeTransition(props) {\n\n    if (props.hasOwnProperty(\"a_duration\") && !isNaN(props[\"a_duration\"])) {\n        var suffix = props.transitionTimingFunction ? \" \" + props.transitionTimingFunction : \"\";\n        return \"transition: \" + props[\"a_duration\"] + 'ms all' + suffix + \";\";\n    } else return \"\";\n}\n\n// add attributes to the mutable element\nfunction setElemAttributes(element, props) {\n\n    if (props.hasOwnProperty(\"url\")) {\n        element.setAttribute('src', url);\n    }\n\n    if (props.hasOwnProperty(\"autofocus\") && navigator.userAgent.indexOf(\"iPhone\") == -1) {\n        element.setAttribute('autofocus', 'autofocus');\n    }; // device should not be an iphone\n\n\n    if (props.hasOwnProperty(\"focus\")) {\n        if (props.focus && props.id) {\n            var doc = document.getElementById(props.id);\n            if (doc) {\n                doc.focus();\n            }\n        }\n    }\n\n    if (props.hasOwnProperty('contentEditable')) {\n        element.setAttribute('contentEditable', 'true');\n    };\n\n    if (props.hasOwnProperty('hint')) {\n        element.setAttribute('hint', props.hint);\n    };\n\n    if (props.hasOwnProperty(\"pattern\")) {\n        element.setAttribute(\"data-pattern\", props.pattern);\n        var data = props.pattern.split(',');\n        var length = parseInt(data.pop());\n        if (length > 10) {\n            length = 10;\n        }\n        element.setAttribute(\"size\", length);\n    }\n\n    if (props.hasOwnProperty(\"separator\")) {\n        element.setAttribute(\"separator\", props.separator);\n    }\n\n    if (props.hasOwnProperty(\"separatorRepeat\")) {\n        element.setAttribute(\"separatorRepeat\", props.separatorRepeat);\n    }\n\n    return element;\n\n    // if (props.hasOwnProperty(\"myAttr\")) {\n    //     element.setAttribute(config.myAttr,config.myAttr);\n    // }\n}\n\nmodule.exports = {\n    mapPropToStyle: mapPropToStyle,\n    getAnimeTransform: getAnimeTransform,\n    getAnimeOpacity: getAnimeOpacity,\n    getAnimeTransition: getAnimeTransition,\n    setElemAttributes: setElemAttributes,\n    addAnimationAttributes: addAnimationAttributes,\n    addTransitionValue: addTransitionValue,\n    addSize: addSize,\n    addBorder: addBorder,\n    addVisibility: addVisibility,\n    addExpandability: addExpandability,\n    addOverFlow: addOverFlow,\n    addLayout: addLayout,\n    addImage: addImage,\n    addTextProperties: addTextProperties,\n    addClassNameProperties: addClassNameProperties,\n    addFunctions: addFunctions\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEB/MapAttributes.js\n");

/***/ }),

/***/ "./src/WEB/Render.js":
/*!***************************!*\
  !*** ./src/WEB/Render.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\nvar _require = __webpack_require__(/*! ../compute */ \"./src/compute.js\"),\n    computeChildDimens = _require.computeChildDimens;\n\nvar _require2 = __webpack_require__(/*! ../component */ \"./src/component.js\"),\n    renderComponent = _require2.renderComponent;\n\nvar helper = __webpack_require__(/*! ../helper */ \"./src/helper.js\");\nvar mapAttributes = __webpack_require__(/*! ./MapAttributes */ \"./src/WEB/MapAttributes.js\");\nvar List = __webpack_require__(/*! ./ListPresto */ \"./src/WEB/ListPresto.js\");\n\nfunction initiateElement(type, props, elem) {\n    if (type == \"editText\" && elem.tagName.toLowerCase() == \"input\") {\n\n        var isIPhone = navigator.userAgent.indexOf(\"iPhone\") !== -1;\n        if (elem.autofocus && !isIPhone) {\n            elem.focus();\n        }\n        if (window.preponeSpace) {\n            elem.addEventListener('input', separatorInputKeyDownHandlerNew);\n        } else {\n            elem.addEventListener('input', separatorInputKeyDownHandler);\n        }\n    }\n\n    var events = ['onClick', 'onEnterPressedEvent', 'onChange', 'onMouseDown', 'onMouseUp', 'onMouseEnter', 'onMouseOver', 'onMouseMove', 'onMouseOut', 'onMouseLeave', 'onFocus', 'onPaste'];\n\n    for (var i = 0; i < events.length; i++) {\n        var key = events[i];\n        var eventType = key.substring(2, key.length).toLowerCase();\n        if (props.hasOwnProperty(key) && typeof props[key] == \"function\") {\n            (function () {\n                var callback = props[key];\n                if (key == \"onEnterPressedEvent\") {\n                    elem.addEventListener('keyup', function (e) {\n                        e.stopPropagation();\n\n                        if (e.keyCode == 13) {\n                            callback(e);\n                        }\n                    });\n                }\n                if (eventType == \"change\") {\n                    elem.addEventListener('input', function (e) {\n                        callback(e.target.value);\n                    });\n                } else if (eventType == \"focus\") {\n                    elem.addEventListener('focus', function (e) {\n                        callback(true);\n                    });\n                    elem.addEventListener('blur', function (e) {\n                        callback(false);\n                    });\n                } else {\n                    elem.addEventListener(eventType, function (e) {\n                        e.stopPropagation();\n                        callback(e);\n                    });\n                }\n            })();\n        }\n    }\n}\n\n// not being used in hyper-widget web\nfunction popup(elem, props) {\n    var menuItems = props[\"popupMenu\"].split(',');\n    var menuBar = document.createElement(\"div\");\n    menuBar.setAttribute(\"class\", \"popupMenu\");\n    menuBar.style.cssText = \"display: none; position: absolute; right: 20px; top:20px; z-index: 5;\" + \"box-shadow: 0px 5px 10px #888888;\";\n    document.body.appendChild(menuBar);\n    var clickCb = \"onMenuItemClick\";\n\n    var _loop = function _loop(i) {\n        var menuDiv = document.createElement(\"div\");\n        menuDiv.setAttribute(\"class\", \"menuItem\");\n        menuDiv.textContent = menuItems[i];\n        menuBar.appendChild(menuDiv);\n        var index = i;\n        if (props[clickCb] && typeof props[clickCb] == \"function\") {\n            menuDiv.addEventListener(\"click\", function () {\n                props[clickCb](index);\n            });\n        }\n    };\n\n    for (var i = 0; i < menuItems.length; i++) {\n        _loop(i);\n    }\n    elem.addEventListener(\"click\", function () {\n        if (menuBar.style.display == \"none\") menuBar.style.display = \"\";else menuBar.style.display = \"none\";\n    });\n}\n\nfunction setGravityStylesForRow(elem, props) {\n\n    var gravity_row_style = \"\";\n\n    if (!props.hasOwnProperty('gravity') || !props.gravity) {\n        props.gravity = '';\n        //return;\n    }\n\n    switch (props.gravity) {\n        case 'center_vertical':\n            gravity_row_style += \"align-items: center;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n\n            // elem.gravity_row_style['align-items'] = 'center';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n        case 'center_horizontal':\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: center;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'center';\n            break;\n        case 'center':\n            gravity_row_style += \"align-items: center;\";\n            gravity_row_style += \"justify-content: center;\";\n            // elem.gravity_row_style['align-items'] = \"center\";\n            // elem.gravity_row_style['justify-content'] = \"center\";\n            break;\n        case 'left':\n        case 'start':\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n        case 'right':\n        case 'end':\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: flex-end;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'flex-end';\n            break;\n        case 'stretch':\n            gravity_row_style += \"align-items: stretch;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n            // elem.gravity_row_style['align-items'] = 'stretch';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n        default:\n            gravity_row_style += \"align-items: flex-start;\";\n            gravity_row_style += \"justify-content: flex-start;\";\n            // elem.gravity_row_style['align-items'] = 'flex-start';\n            // elem.gravity_row_style['justify-content'] = 'flex-start';\n            break;\n    }\n\n    return gravity_row_style;\n}\n\nfunction setGravityStylesForColumn(elem, props) {\n\n    var gravity_col_style = \"\";\n    if (!props.hasOwnProperty('gravity') || !props.gravity) {\n        props.gravity = '';\n        //return;\n    }\n\n    switch (props.gravity) {\n        case 'center_vertical':\n            gravity_col_style += \"align-items: flex-start;\";\n            gravity_col_style += \"justify-content: center;\";\n            // elem.style['align-items'] = 'flex-start';\n            // elem.style['justify-content'] = 'center';\n            break;\n        case 'center_horizontal':\n            gravity_col_style += \"align-items: center;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'center';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n        case 'center':\n            gravity_col_style += \"align-items: center;\";\n            gravity_col_style += \"justify-content: center;\";\n            // elem.style[\"align-items\"] = \"center\";\n            // elem.style[\"justify-content\"] = \"center\";\n            break;\n        case 'left':\n        case 'start':\n            gravity_col_style += \"align-items: flex-start;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['justify-content'] = 'flex-start';\n            // elem.style['align-items'] = 'flex-start';\n            break;\n        case 'right':\n        case 'end':\n            gravity_col_style += \"align-items: flex-end;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'flex-end';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n        case 'stretch':\n            gravity_col_style += \"align-items: stretch;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'stretch';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n        default:\n            gravity_col_style += \"align-items: flex-start;\";\n            gravity_col_style += \"justify-content: flex-start;\";\n            // elem.style['align-items'] = 'flex-start';\n            // elem.style['justify-content'] = 'flex-start';\n            break;\n    }\n    return gravity_col_style;\n}\n\nfunction setAnimationStyles(elem, props) {\n\n    var animation_style = \"\";\n    if (!props.hasOwnProperty('hasAnimation') || !props.hasAnimation) {\n        return animation_style;\n    }\n\n    var keyframeName = \"keyframe_\" + props.id;\n    if (!window.__RENDERED_KEYFRAMES.includes(keyframeName)) {\n        var styleElem = document.getElementById(window.__STYLE_ID);\n\n        if (!styleElem) {\n            return animation_style;\n        }\n\n        var data = null;\n\n        if (props.inlineAnimation) {\n            data = JSON.parse(props.inlineAnimation);\n            if (data && data.length > 0) {\n                data = data[0];\n            }\n        }\n\n        if (!data) {\n            return animation_style;\n        }\n\n        var css = \"\";\n        css += \"@keyframes \" + keyframeName + \"{\";\n        css += \"from {\";\n        if (data.hasOwnProperty('fromX')) {\n            css += \"margin-left: \" + data.fromX + \"px;\";\n        }\n\n        if (data.hasOwnProperty('fromY')) {\n            css += \"margin-top: \" + data.fromY + \"px;\";\n        }\n\n        if (data.hasOwnProperty('fromAlpha')) {\n            css += \"opacity: \" + data.fromAlpha + \";\";\n        }\n\n        if (data.hasOwnProperty('fromScale')) {\n            css += \"transform: scale(\" + data.fromScale + \");\";\n        } else if (data.hasOwnProperty('fromScaleX') && data.hasOwnProperty('fromScaleY')) {\n            css += \"transform: scale(\" + data.fromScaleX + \", \" + data.fromScaleY + \");\";\n        } else if (data.hasOwnProperty('fromScaleX')) {\n            css += \"transform: scaleX(\" + data.fromScaleX + \");\";\n        } else if (data.hasOwnProperty('fromScaleY')) {\n            css += \"transform: scaleY(\" + data.fromScaleY + \");\";\n        }\n\n        if (data.hasOwnProperty('fromRotation')) {\n            css += \"transform: rotate(\" + data.fromRotation + \");\";\n        } else {\n            if (data.hasOwnProperty('fromRotationX')) {\n                css += \"transform: rotateX(\" + data.fromRotationX + \");\";\n            } else if (data.hasOwnProperty('fromRotationY')) {\n                css += \"transform: rotateY(\" + data.fromRotationY + \");\";\n            }\n        }\n        css += \"} \";\n        css += \"to {\";\n        if (data.hasOwnProperty('toX')) {\n            css += \"margin-left: \" + data.toX + \"px;\";\n        }\n\n        if (data.hasOwnProperty('toY')) {\n            css += \"margin-top: \" + data.toY + \"px;\";\n        }\n\n        if (data.hasOwnProperty('toAlpha')) {\n            css += \"opacity: \" + data.toAlpha + \";\";\n        }\n\n        if (data.hasOwnProperty('toScale')) {\n            css += \"transform: scale(\" + data.toScale + \");\";\n        } else if (data.hasOwnProperty('toScaleX') && data.hasOwnProperty('toScaleY')) {\n            css += \"transform: scale(\" + data.toScaleX + \", \" + data.toScaleY + \");\";\n        } else if (data.hasOwnProperty('toScaleX')) {\n            css += \"transform: scaleX(\" + data.toScaleX + \");\";\n        } else if (data.hasOwnProperty('toScaleY')) {\n            css += \"transform: scaleY(\" + data.toScaleY + \");\";\n        }\n\n        if (data.hasOwnProperty('toRotation')) {\n            css += \"transform: rotate(\" + data.toRotation + \");\";\n        } else {\n            if (data.hasOwnProperty('toRotationX')) {\n                css += \"transform: rotateX(\" + data.toRotationX + \");\";\n            } else if (data.hasOwnProperty('toRotationY')) {\n                css += \"transform: rotateY(\" + data.toRotationY + \");\";\n            }\n        }\n        css += \"} \";\n        css += \"}\";\n\n        if (styleElem.styleSheet) {\n            styleElem.styleSheet.cssText += css;\n        } else {\n            styleElem.appendChild(document.createTextNode(css));\n        }\n\n        animation_style += \"animation-name:\" + keyframeName + \";\";\n        animation_style += \"animation-duration: 1s;\";\n\n        // elem.style.animationName = keyframeName\n        //elem.style.animationDuration = \"1s\"\n        if (data.hasOwnProperty('duration') && !isNaN(data.duration)) {\n            var duration = parseFloat(parseFloat(data.duration) / 1000).toFixed(2);\n            animation_style += \"animation-duration:\" + duration + \"s;\";\n            //elem.style.animationDuration = duration + \"s\"\n        }\n\n        if (data.hasOwnProperty('repeatCount')) {\n            if (data.repeatCount == \"-1\" || data.repeatCount == -1) {\n                animation_style += \"animation-iteration-count:infinite;\";\n                // elem.style.animationIterationCount = \"infinite\"\n            } else {\n                animation_style += \"animation-iteration-count:\" + data.repeatCount + \";\";\n                // elem.style.animationIterationCount = data.repeatCount\n            }\n        }\n\n        if (data.hasOwnProperty(\"interpolator\")) {\n            animation_style += \"animation-timing-function:\" + \"cubic-bezier(\" + data.interpolator + \")\" + \";\";\n            //   elem.style.animationTimingFunction = \"cubic-bezier(\" + data.interpolator + \")\";\n        }\n\n        window.__RENDERED_KEYFRAMES.push(keyframeName);\n    }\n    return animation_style;\n}\n\nfunction setComputedStyles(elem, props) {\n    var computed_styles = \"\";\n    /* Computed Styles */\n    // LinearLayout Styles\n    if (props.hasOwnProperty('activeDimen') && props.hasOwnProperty('activeWeight')) {\n        var activeDimen = props.activeDimen;\n        var weight = props.activeWeight;\n\n        if (weight > 0) {\n            computed_styles += \"flex:\" + weight + \";\";\n            //elem.style.flex = weight;\n\n            if (activeDimen == 'w') {\n                //elem.style.width = 'auto';\n            } else {\n                computed_styles += \"height:auto;\";\n                // elem.style.height = 'auto';\n            }\n        } else {\n            computed_styles += \"flex:none;\";\n            //elem.style.flex = 'none';\n        }\n    } else {\n        computed_styles += \"flex:none;\";\n        //        elem.style.flex = 'none';\n    }\n\n    // RelativeLayout Styles\n    if (props.hasOwnProperty('absolute') && props.absolute) {\n        computed_styles += \"position: absolute;\";\n        //elem.style.position = 'absolute';\n\n        if (props.hasOwnProperty(\"fromTop\")) {\n            if (isNaN(props.fromTop)) computed_styles += \"top: \" + props.fromTop + \";\";\n            // elem.style.top = props.fromTop;\n            else computed_styles += \"top: \" + props.fromTop + \"px;\";\n            // elem.style.top = props.fromTop + 'px';\n        }\n\n        if (props.hasOwnProperty(\"fromBottom\")) {\n            if (isNaN(props.fromBottom)) computed_styles += \"bottom: \" + props.fromBottom + \";\";\n            //elem.style.bottom = props.fromBottom;\n            else computed_styles += \"bottom: \" + props.fromBottom + \"px;\";\n            //elem.style.bottom = props.fromBottom + 'px';\n        }\n\n        if (props.hasOwnProperty(\"fromLeft\")) {\n            if (isNaN(props.fromLeft)) computed_styles += \"left: \" + props.fromLeft + \";\";\n            // elem.style.left = props.fromLeft;\n            else computed_styles += \"left: \" + props.fromLeft + \"px;\";\n            // elem.style.left = props.fromLeft + 'px';\n        }\n\n        if (props.hasOwnProperty(\"fromRight\")) {\n            if (isNaN(props.fromRight)) computed_styles += \"right: \" + props.fromRight + \";\";\n            // elem.style.right = props.fromRight;\n            else computed_styles += \"right: \" + props.fromRight + \"px;\";\n            // elem.style.right = props.fromRight + 'px';\n        }\n    }\n    /* Computed Styles End */\n    return computed_styles;\n}\n\n// what does this do?\nfunction separatorInputKeyDownHandlerNew(ev) {\n    ev.stopPropagation();\n    try {\n        var inputId = ev.target.id;\n        var inputType = ev.inputType;\n        var input = document.getElementById(inputId);\n        var oldValidValue = \"\";\n        if (input.oldValidValue) {\n            oldValidValue = input.oldValidValue;\n        }\n        if (input.value.length === 0) {\n            input.oldValidValue = input.value;\n            return;\n        }\n        var dataPattern = input.getAttribute(\"data-pattern\");\n        if (dataPattern) {\n            var data = dataPattern.split(',');\n            var length = parseInt(data.pop());\n            var regexPattern = new RegExp(data.join(''));\n            var selectionStart = input.selectionStart;\n            var selectionEnd = input.selectionEnd;\n            var separator = input.getAttribute(\"separator\");\n            var separatorRepeat = parseInt(input.getAttribute(\"separatorRepeat\"));\n            var value = input.value.replace(/[^a-zA-Z0-9@.-]/g, \"\");\n            //If existing value itself greater than equal to max length\n            if (length) {\n                input.setAttribute(\"maxlength\", length);\n            }\n            // If code doesn't matches regex pattern\n            if (!regexPattern.test(value)) {\n                input.value = oldValidValue;\n                input.selectionStart = selectionStart - (selectionEnd - selectionStart) - 1;\n                input.selectionEnd = selectionEnd - (selectionEnd - selectionStart) - 1;\n                return;\n            }\n            //Insert separator\n            if (separator && separatorRepeat) {\n                ev.preventDefault();\n                var formattedString = \"\";\n                for (var i = 0; i < value.length; i++) {\n                    var element = value[i];\n                    formattedString += element;\n                    var factor = 0;\n                    if (formattedString.length && formattedString.replace(/[^a-zA-Z0-9@.-]/g, \"\").length % (separatorRepeat + factor) == 0) {\n                        formattedString += separator;\n                    }\n                }\n                if (formattedString[length] == separator) {\n                    formattedString = formattedString.substring(0, formattedString.length - 1);\n                }\n                input.value = formattedString;\n                if (inputType == \"deleteContentBackward\") {\n                    var cursorPosition = selectionStart;\n                    if (cursorPosition % (separatorRepeat + 1) === 0) {\n                        if (input.oldValidValue.length < formattedString.length) {\n                            cursorPosition += 1;\n                        } else {\n                            cursorPosition -= 1;\n                        }\n                    }\n                    if (cursorPosition < 0) {\n                        cursorPosition = 0;\n                    }\n                    input.oldValidValue = formattedString;\n                    input.focus();\n                    input.selectionStart = cursorPosition;\n                    input.selectionEnd = cursorPosition;\n                }\n            }\n            input.oldValidValue = input.value;\n        }\n    } catch (err) {\n        console.error(err);\n    }\n}\n// what does this do?\nfunction separatorInputKeyDownHandler(ev) {\n    ev.stopPropagation();\n    try {\n        var inputId = ev.target.id;\n        var input = document.getElementById(inputId);\n        var oldValidValue = \"\";\n        if (input.oldValidValue) {\n            oldValidValue = input.oldValidValue;\n        }\n        if (input.value.length === 0) {\n            input.oldValidValue = input.value;\n            return;\n        }\n        var dataPattern = input.getAttribute(\"data-pattern\");\n        if (dataPattern) {\n            var data = dataPattern.split(',');\n            var length = parseInt(data.pop());\n            var regexString = data.join('');\n            var selectionStart = input.selectionStart;\n            var selectionEnd = input.selectionEnd;\n            var newValue = input.value;\n            if (length) {\n                if (oldValidValue.length < input.value.length && oldValidValue.length + 1 > length) {\n                    input.value = oldValidValue;\n                    ev.preventDefault();\n                    input.selectionStart = selectionStart - (selectionEnd - selectionStart) - 1;\n                    input.selectionEnd = selectionEnd - (selectionEnd - selectionStart) - 1;\n                    return;\n                }\n            }\n            var finalData = newValue.replace(/[^a-zA-Z0-9@.-]/g, \"\");\n            if (regexString) {\n                var regexPattern = new RegExp(regexString);\n                if (!regexPattern.test(finalData)) {\n                    ev.preventDefault();\n                    input.value = oldValidValue;\n                    input.selectionStart = selectionStart - (selectionEnd - selectionStart) - 1;\n                    input.selectionEnd = selectionEnd - (selectionEnd - selectionStart) - 1;\n                    return;\n                }\n            }\n            var separator = input.getAttribute(\"separator\");\n            var separatorRepeat = parseInt(input.getAttribute(\"separatorRepeat\"));\n            if (separator && separatorRepeat) {\n                ev.preventDefault();\n                var formattedString = \"\";\n                for (var _index = 0; _index < finalData.length; _index++) {\n                    var element = finalData[_index];\n                    formattedString += element;\n                    var factor = 0;\n                    if (formattedString.length && formattedString.replace(/[^a-zA-Z0-9@.-]/g, \"\").length % (separatorRepeat + factor) == 0) {\n                        formattedString += separator;\n                    }\n                }\n                if (formattedString[formattedString.length - 1] == separator) {\n                    formattedString = formattedString.substring(0, formattedString.length - 1);\n                }\n                input.value = formattedString;\n                var cursorPosition = selectionStart;\n                if (cursorPosition % (separatorRepeat + 1) === 0) {\n                    if (input.oldValidValue.length < formattedString.length) {\n                        cursorPosition += 1;\n                    } else {\n                        cursorPosition -= 1;\n                    }\n                }\n                if (cursorPosition < 0) {\n                    cursorPosition = 0;\n                }\n                input.oldValidValue = formattedString;\n                input.focus();\n                input.selectionStart = cursorPosition;\n                input.selectionEnd = cursorPosition;\n                // console.log(\"formattedString----\", formattedString);\n            } else {\n                input.oldValidValue = finalData;\n            }\n        }\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nfunction setAttributes(view, elem, firstRender) {\n    var type = view.type;\n    var props = view.props;\n    var elem_style = \"\";\n    elem.setAttribute(\"id\", props.id);\n    // elem_style += \"id:\"+props.id+\";\";\n\n    if (type == 'modal') {\n        // this is likely not being used  in hyper-widget\n        setModalAttributes(elem, props, firstRender);\n        return;\n    }\n\n    if (elem.classList && elem.classList.length > 0) elem.classList.add(type);else elem.className = type;\n\n    //let elem_transition = props.transition == undefined ? \"0ms all\" : props.transition // It will always be undefined lol\n\n    elem_style += mapAttributes.addTransitionValue(props);\n\n    // elem.style.transition = props.transition;\n    /* New Style */\n    /* Render from global styles */\n\n    elem_style += mapAttributes.addSize(view);\n\n    // The order here matters, as for elements with same precedence, the element on the right side of the array will be considered\n    elem_style += mapAttributes.addBorder(props);\n    elem_style += mapAttributes.addVisibility(elem, props, type);\n    elem_style += mapAttributes.addExpandability(elem, props, type);\n\n    /* Render global styles end */\n\n    elem_style += mapAttributes.addOverFlow(props);\n    elem_style += mapAttributes.addLayout(elem, type, props);\n\n    mapAttributes.addImage(type, props, elem);\n    mapAttributes.addTextProperties(props, elem, type);\n    mapAttributes.addClassNameProperties(props, elem);\n\n    elem_style += mapAttributes.mapPropToStyle(elem, props, type);\n    elem = mapAttributes.setElemAttributes(elem, props);\n    elem_style += mapAttributes.addFunctions(props, elem);\n    elem_style += mapAttributes.addAnimationAttributes(props);\n\n    if (firstRender) {\n        // Events are added when the element is created for the first time\n        initiateElement(type, props, elem);\n    }\n\n    /* Component Part */\n    if (props.hasOwnProperty('elementType') && props.elementType == 'component') {\n        elem.classList.add(window.__COM_CLASS_GROUP.WRAPPER);\n\n        if (firstRender) elem.setAttribute('guid', props.guid);\n    }\n\n    if (props.hasOwnProperty('componentType') && props.componentType) renderComponent(elem, props, firstRender); // what are components??\n\n    return elem_style;\n}\n\n// modal not being used in hyper-widget web\nfunction setModalAttributes(elem, props, firstRender) {\n    setGravityStylesForRow(elem, props);\n\n    var backdropElem = document.getElementById(window.__BACKDROPMODAL_CLASS + '_' + props.id);\n\n    if (props.hasOwnProperty('modalVisibility') && props.modalVisibility) {\n        backdropElem.classList.add(window.__SHOWNMODAL_CLASS);\n        document.body.classList.add(window.__OPENMODAL_CLASS);\n\n        var modalProps = null;\n        if (window.__MODAL_PROPS[props.id]) {\n            modalProps = JSON.parse(window.__MODAL_PROPS[props.id]);\n        }\n\n        if (props.onShow && typeof props.onShow == \"function\") {\n            if (firstRender || modalProps && modalProps.modalVisibility != props.modalVisibility) {\n                props.onShow();\n            }\n        }\n    } else {\n        props.modalVisibility = false;\n        backdropElem.classList.remove(window.__SHOWNMODAL_CLASS);\n        document.body.classList.remove(window.__OPENMODAL_CLASS);\n    }\n\n    window.__MODAL_PROPS[props.id] = JSON.stringify(props);\n}\n\n// mutation observers are slow, what is this and why can't global events solve this problem?\n/* Observer for afterRender */\nvar observer = function observer(elem) {\n    var id = elem.id;\n    if (!id || __OBSERVERS[id]) return;\n\n    __OBSERVERS[id] = new MutationObserver(function (item, observer) {\n        if (item && item[0].target) {\n            var target = item[0].target;\n            var _id = target.id;\n            if (_id) {\n                var view = __VIEWS[_id];\n\n                if (view && view.props.hasOwnProperty('afterRender') && typeof view.props.afterRender == \"function\") {\n                    view.props.afterRender();\n                }\n            }\n        }\n\n        observer.disconnect();\n    });\n\n    __OBSERVERS[id].observe(elem, {\n        attributes: true\n    });\n};\n\n/* Do some actions after rendered */ // just use global events no?\nvar cb = function cb(elem, view) {\n    if (view.props.feedback && typeof view.props.feedback == \"function\") {\n        view.props.feedback();\n    }\n};\n\n// Creates the Modal element if it has not been already inflated\n// modal is not being used\nvar inflateModal = function inflateModal(view, parentElement, stopChild) {\n    var newInflated = false;\n    var parentId = parentElement.id;\n\n    /* Modal Wrapper */\n    var elem = document.getElementById(view.props.id);\n    if (!elem || elem == undefined) {\n        newInflated = true;\n\n        elem = document.createElement('div');\n        elem.setAttribute('id', view.props.id);\n        elem.setAttribute('virtual_parent', parentId);\n        elem.classList.add(window.__CONTENTMODAL_CLASS);\n    }\n    /* Modal Wrapper End */\n\n    /* BackDrop */\n    var backdropElem = document.getElementById(window.__BACKDROPMODAL_CLASS + '_' + view.props.id);\n    if (!backdropElem || backdropElem == undefined) {\n        backdropElem = document.createElement('div');\n        backdropElem.setAttribute('id', window.__BACKDROPMODAL_CLASS + '_' + view.props.id);\n        backdropElem.classList.add(window.__BACKDROPMODAL_CLASS);\n\n        if (view.props.hasOwnProperty('animationType') && view.props.animationType != 'none') {\n            var animationType = view.props.animationType;\n\n            if (animationType == 'fade') {\n                backdropElem.classList.add(window.__FADEMODAL_CLASS);\n            } else if (animationType == 'slide') {\n                backdropElem.classList.add(window.__SLIDEMODAL_CLASS);\n            }\n        }\n\n        if (view.props.hasOwnProperty('closeOnBackdrop') && !view.props.closeOnBackdrop) {\n            backdropElem.classList.add(window.__DISABLEDBACKDROP_CLASS);\n        } else {\n            backdropElem.classList.remove(window.__DISABLEDBACKDROP_CLASS);\n        }\n\n        if (view.props.hasOwnProperty('transparent') && view.props.transparent) {\n            backdropElem.style.background = 'transparent';\n        } else {\n            backdropElem.style.background = 'rgba(0, 0, 0, 0.5)';\n        }\n\n        backdropElem.appendChild(elem);\n        document.body.appendChild(backdropElem);\n\n        if (newInflated) {\n            if (view.props.hasOwnProperty('afterRender') && typeof view.props.afterRender == \"function\") {\n                // We should run observer for the element\n                observer(elem);\n                elem.setAttribute('has_render', true);\n            }\n        }\n    }\n    /* BackDrop End */\n\n    setModalAttributes(elem, view.props, newInflated);\n\n    if (!stopChild) {\n        if (view.hasOwnProperty('children') && view.children.length > 0) {\n            for (var i = 0; i < view.children.length; i++) {\n                if (view.children[i]) {\n                    view.children[i].props.style.pointerEvents = 'auto';\n                    if (i != 0) inflateView({ view: view.children[i], parentElement: elem, siblingView: view.children[i - 1] });else inflateView({ view: view.children[i], parentElement: elem, siblingView: view });\n                }\n            }\n        }\n    } else {\n        if (elem.hasChildNodes()) {\n            var childNodes = elem.childNodes;\n\n            if (childNodes) {\n                for (var _i = 0; _i < childNodes.length; _i++) {\n                    var childNode = childNodes[_i];\n\n                    childNode.style.pointerEvents = 'auto';\n                }\n            }\n        }\n    }\n\n    if (newInflated) {\n        cb(elem, view);\n    }\n\n    return backdropElem;\n};\n\nwindow.inflateTimings = {\n    lastUpdatedAt: null\n\n    // Creates the DOM element if it has not been already inflated\n    // View: Object similar to ReactDOM struct, {type, props, children}\n    // parentElement: DOM Object\n};var setToolTip = function setToolTip(view, elem) {\n    if (view.type != 'linearLayout' && view.type != 'relativeLayout' && view.type != 'horizontalScrollView' && view.type != 'scrollView' && view.type != 'listView') {\n        if (view.props.hasOwnProperty('tooltipText')) {\n            var tooltipText = view.props.tooltipText.trim();\n\n            if (tooltipText) {\n                var tooltipGravity = view.props.tooltipGravity ? view.props.tooltipGravity : 'top';\n\n                elem.classList.add('hasTooltip');\n\n                var tooltipElem = document.createElement('div');\n                tooltipElem.innerHTML = '<pre>' + tooltipText + '</pre>';\n                tooltipElem.classList.add('tooltipText');\n                tooltipElem.classList.add('tooltipGravity_' + tooltipGravity);\n\n                var size = 15;\n                if (view.props.hasOwnProperty('tooltipTextSize') && !isNaN(view.props.tooltipTextSize)) {\n                    size = view.props.tooltipTextSize;\n                }\n\n                tooltipElem.style.fontSize = size + 'px';\n\n                elem.appendChild(tooltipElem);\n            }\n        }\n    }\n};\nvar createNewElement = function createNewElement(view, parentElement, siblingView) {\n    var elem = null;\n    var subElem = null;\n    var element_style = \"\";\n    //console.log(view.type);\n    switch (view.type) {\n        case \"webView\":\n            elem = document.createElement('iframe');\n\n            elem.style.border = 'none';\n            break;\n        case \"imageView\":\n            elem = document.createElement(\"img\");\n            element_style = \"\";\n            element_style += \"margin:0;\";\n            element_style += \"padding:0;\";\n            element_style += \"display:block;\";\n            element_style += \"max-width:100%;\";\n            element_style += \"max-height:100%;\";\n            element_style += \"box-sizing:border-box;\";\n            // elem[\"style\"][\"margin\"] = \"0\";\n            // elem[\"style\"][\"padding\"] = \"0\";\n            // elem[\"style\"][\"display\"] = \"block\";\n            // elem[\"style\"][\"max-width\"] = \"100%\";\n            // elem[\"style\"][\"max-height\"] = \"100%\";\n            // elem[\"style\"][\"box-sizing\"] = \"border-box\";\n            elem.setAttribute(\"alt\", \"\");\n            break;\n        case \"checkBox\":\n            elem = document.createElement(\"input\");\n            elem.setAttribute('type', 'checkbox');\n            if (view.props.hasOwnProperty('checked') && view.props.checked == true) {\n                elem.checked = true;\n            } else {\n                elem.checked = false;\n            }\n\n            if (view.props.hasOwnProperty('label') && view.props.label != '' && parentElement) {\n                subElem = document.createElement('label');\n                subElem.setAttribute('for', view.props.id);\n                subElem.innerHTML = view.props.label;\n                subElem.style.padding = \"0 0 0 5px\";\n                subElem.classList.add('input-label');\n\n                delete view.props.label;\n            }\n            break;\n        case \"editText\":\n            element_style = \"\";\n            if (view.props.hasOwnProperty('inputType') && view.props.inputType == 'multiText') {\n                elem = document.createElement(\"textarea\");\n                element_style += \"border:none;\";\n                element_style += \"resize:none;\";\n                element_style += \"outline:none;\";\n                //console.log('creating a component')\n\n                // elem.style.border = 'none';\n                // elem.style.resize = 'none';\n                // elem.style.outline = 'none';\n            } else {\n                elem = document.createElement(\"input\");\n            }\n\n            elem.value = view.props.text || \"\";\n\n            if (view.props.letterSpacing) {\n                element_style += \"letter-spacing : \" + view.props.letterSpacing + \";\";\n                // elem[\"style\"][\"letter-spacing\"] = view.props.letterSpacing;\n            }\n\n            if (view.props.label) {\n\n                // var inputViewStyle = \"\";\n                var inputView = elem;\n\n                element_style += \"width:100%;\";\n                // inputView.style.width = '100%';\n                element_style += setAttributes(view, inputView, true);\n\n                inputView.setAttribute(\"id\", view.props.id + \"_input\");\n\n                var l = document.createElement(\"label\");\n\n                var label_style = \"\";\n                l.setAttribute(\"for\", view.props.id + \"_input\");\n\n                l.innerHTML = view.props.label;\n                l.classList.add('input-label');\n\n                label_style += \"position:absolute;\";\n                label_style += \"color:#999;\";\n                label_style += \"background-color:#fff;\";\n                label_style += \"padding: 0 5px;\";\n                label_style += \"z-index: 10;\";\n                label_style += \"transition: transform 150ms ease-out, font-size 150ms ease-out;\";\n\n                // l[\"style\"][\"position\"] = \"absolute\";\n                // l[\"style\"][\"color\"] = \"#999\";\n                // l[\"style\"][\"background-color\"] = \"#fff\";\n                // l[\"style\"][\"padding\"] = \"0 5px\";\n                // l[\"style\"][\"z-index\"] = 10;\n                // l[\"style\"][\"transition\"] = \"transform 150ms ease-out, font-size 150ms ease-out\";\n\n                if (view.props.letterSpacing) {\n                    label_style += \"letter-spacing: \" + view.props.letterSpacing + \";\";\n                    // l[\"style\"][\"letter-spacing\"] = view.props.letterSpacing;\n                }\n\n                l.setAttribute(\"style\", label_style);\n                inputView.setAttribute(\"style\", element_style);\n\n                elem = document.createElement(\"div\");\n                element_style = \"\";\n                elem.classList.add('input-group');\n                elem.appendChild(l);\n                elem.appendChild(inputView);\n\n                view.props.style.position = \"relative\";\n                element_style += setAttributes(view, elem, true);\n                delete view.props.label;\n            } else if (view.props.hint) {\n                elem.placeholder = view.props.hint || \"\";\n            }\n            break;\n        default:\n            elem = document.createElement(view.elName || \"div\"); // create the element here\n            element_style = \"\";\n\n    }\n    setToolTip(view, elem);\n\n    addToParentElement(parentElement, siblingView, elem, subElem);\n\n    // appened attributes, nodes & style to the elemenent\n    element_style += setAttributes(view, elem, true);\n\n    /*if(view.props.hasOwnProperty('afterRender') && typeof view.props.afterRender == \"function\"){\n      if(!stopObserver){\n        // We should run observer for the element\n        observer(elem);\n        elem.setAttribute('has_render', true);\n      }\n    }*/\n    return { elem: elem, subElem: subElem, element_style: element_style };\n};\nvar addToParentElement = function addToParentElement(parentElement, siblingView, elem, subElem) {\n\n    if (parentElement) {\n        var siblingElement = siblingView ? document.getElementById(siblingView.props.id) : null;\n\n        if (siblingElement && siblingElement != undefined) {\n            if (parentElement == siblingElement) {\n                // Prepend\n                if (subElem) {\n                    parentElement.insertBefore(subElem, parentElement.childNodes[0]);\n                }\n                parentElement.insertBefore(elem, parentElement.childNodes[0]);\n            } else {\n                // Insert in specified position\n                var nextSiblingElement = siblingElement.nextSibling;\n\n                parentElement.insertBefore(elem, nextSiblingElement);\n                if (subElem) {\n                    parentElement.insertBefore(subElem, nextSiblingElement);\n                }\n            }\n        } else {\n            parentElement.appendChild(elem);\n            if (subElem) {\n                parentElement.appendChild(subElem);\n            }\n        }\n    }\n};\nvar setLayout = function setLayout(view, elem) {\n    switch (view.type) {\n        case 'horizontalScrollView':\n            if (view.props.hasOwnProperty('scrollLeft') && !isNaN(view.props.scrollLeft)) elem.scrollLeft = view.props.scrollLeft;\n            break;\n        case 'listView':\n            if (view.props.hasOwnProperty('scrollTop') && !isNaN(view.props.scrollTop)) elem.scrollTop = view.props.scrollTop;\n            break;\n        case 'scrollView':\n            if (view.props.hasOwnProperty('scrollLeft') && !isNaN(view.props.scrollLeft)) elem.scrollLeft = view.props.scrollLeft;\n\n            if (view.props.hasOwnProperty('scrollTop') && !isNaN(view.props.scrollTop)) elem.scrollTop = view.props.scrollTop;\n    }\n};\nvar getElementByView = function getElementByView(view, parentElement, siblingView, stopChild, renderStyle) {\n    if (!view.props.id) {\n        view.props.id = window.JOS_PRESTO_ID++;\n        //window.__VIEWS[view.props.id] =  view;\n    }\n    var elem = document.getElementById(view.props.id);\n    var subElem = null; //  this is being used only for lablel property\n    var newInflated = false;\n    var element_style = \"\";\n\n    if (view.props.x == \"NaN\" || view.props.y == \"NaN\") {\n        view = handleWrapContent(view, parentElement);\n    }\n\n    if (!elem) {\n        var element = createNewElement(view, parentElement, siblingView);\n        newInflated = true;\n        elem = element.elem;\n        subElem = element.subElem;\n        element_style += element.element_style;\n    } else if (renderStyle) {\n        element_style += setAttributes(view, elem, true);\n    }\n    setLayout(elem, view);\n    if (!stopChild) computeChildDimens(view);\n    element_style += setComputedStyles(elem, view.props);\n    element_style += setAnimationStyles(elem, view.props);\n    elem.setAttribute(\"style\", element_style); // finally attach all the styles to the element\n    return { elem: elem, newInflated: newInflated };\n};\nvar setAfterRenderFunctions = function setAfterRenderFunctions(newInflated, view, elem, stopObserver) {\n\n    if (newInflated) {\n        if (view.hasOwnProperty) if (view.props.hasOwnProperty('afterRender') && typeof view.props.afterRender == \"function\") {\n            // mutation observers are expensive\n            if (!stopObserver) {\n                // We should run observer for the element\n                observer(elem);\n                elem.setAttribute('has_render', true);\n            }\n        }\n        // if(view.data){\n\n        //     for(let i=0;i<view.children.length;i++){\n        //         let child = document.getElementById(view.children[i].props.id);\n        //         child.addEventListener('onClick',()=>view.onItemClick(i));}\n        // }\n        cb(elem, view);\n    }\n};\n\nvar renderList = function renderList(view, elem) {\n    //console.dir(view.props.diffArray)\n    if (view.props.diffArray == \"filter\") {\n        // console.log(\"filtering\")\n        // console.time('filtering')\n        view.children = [];\n        elem.innerHTML = '';\n        for (var i = 0; i < view.props.itemDatas.length; i++) {\n            view.children.push(List.getChildItemViewByIndex(view, i));\n        }\n        computeChildDimens(view);\n        for (var _i2 = 0; _i2 < view.props.itemDatas.length; _i2++) {\n            elem.appendChild(inflateView({ view: view.children[_i2] }));\n        }\n        //console.timeEnd('filtering')\n    }\n    //replacing only the diff elements\n    else if (view.props.diffArray) {\n            //console.time('patch')\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = view.props.diffArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _i3 = _step.value;\n\n                    //console.log(\"CHANGING VIEW OF \"+i)\n                    console.time(\"patchingElement\");\n                    var oldView = view.children[_i3];\n                    var oldChild = document.getElementById(oldView.props.id);\n                    if (oldChild) {\n\n                        var newChildView = List.getChildItemViewByIndex(view, _i3);\n                        newChildView.onClick = oldView.onClick;\n                        view.children[_i3] = newChildView;\n                        computeChildDimens(view);\n\n                        var newChild = inflateView({ view: newChildView });\n                        // newChild.addEventListener('click',newChildView.props.onClick)\n                        // newChild.style.cursor='pointer'\n                        // console.dir(newChild)\n                        elem.replaceChild(newChild, oldChild);\n                    }\n                    //console.timeEnd('patchingElement')\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    view.props.diffArray = undefined;\n};\nvar inflateView = function inflateView() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        view = _ref.view,\n        parentElement = _ref.parentElement,\n        siblingView = _ref.siblingView,\n        stopChild = _ref.stopChild,\n        renderStyle = _ref.renderStyle;\n\n    view.state = view.state || {};\n    if (view && view.type && view.type == 'modal') {\n        return inflateModal(view, parentElement, stopChild);\n    }\n\n    if (view.props.listData) {\n        view.props.itemDatas = JSON.parse(view.props.listData);\n        if (!view.props.data) {\n            view.props.data = JSON.parse(view.props.listItem);\n        }\n    }\n\n    var _getElementByView = getElementByView(view, parentElement, siblingView, stopChild, renderStyle),\n        elem = _getElementByView.elem,\n        newInflated = _getElementByView.newInflated;\n\n    //patching list\n\n\n    if (view.props.listData && renderStyle) {\n        renderList(view, elem);\n    } else if (!stopChild) {\n        //firstRender List\n        if (view.props.itemDatas) {\n            List.createListView(view);\n            computeChildDimens(view);\n        }\n        if (view.hasOwnProperty('children') && view.children.length > 0) {\n            preComputeLayoutDimens(view);\n            for (var i = 0; i < view.children.length; i++) {\n                if (view.children[i]) {\n                    view.children[i].parent = view;\n                    if (i != 0) {\n                        inflateView({ view: view.children[i], parentElement: elem, siblingView: view.children[i - 1], stopChild: renderStyle, renderStyle: renderStyle });\n                    } else {\n                        inflateView({ view: view.children[i], parentElement: elem, siblingView: view, stopChild: renderStyle, renderStyle: renderStyle });\n                    }\n                }\n            }\n            postComputeLayoutDimens(view, elem);\n        }\n        view.state = view.state || {};\n        view.state.computedHeight = isNaN(parseInt(view.props.height)) ? view.state.computedHeight || 0 : parseInt(view.props.height);\n        view.state.computedWidth = isNaN(parseInt(view.props.width)) ? view.state.computedWidth || 0 : parseInt(view.props.width);\n    }\n    setAfterRenderFunctions(newInflated, view, elem);\n\n    return elem;\n};\n\nvar preComputeLayoutDimens = function preComputeLayoutDimens(view) {\n    view.state = view.state || {};\n    if (view.type == \"relativeLayout\") {\n        view.state.treatMatchParentAsWrapHeight = view.state.practicalHeight == \"wrap_content\";\n        view.state.treatMatchParentAsWrapWidth = view.state.practicalWidth == \"wrap_content\";\n        // if(view.state.treatMatchParentAsWrapHeight && view.state.treatMatchParentAsWrapWidth)\n        for (var i = 0; i < view.children.length; ++i) {\n            if (view.children[i].props.height != \"match_parent\") view.state.treatMatchParentAsWrapHeight = false;\n            if (view.children[i].props.width != \"match_parent\") view.state.treatMatchParentAsWrapWidth = false;\n            if (!view.state.treatMatchParentAsWrapWidth && !view.state.treatMatchParentAsWrapHeight) break;\n        }\n    }\n};\nvar postComputeLayoutDimens = function postComputeLayoutDimens(view, elem) {\n    if (view.type == \"relativeLayout\" && (view.state.practicalWidth == \"wrap_content\" || view.state.practicalHeight == \"wrap_content\") && view.children.length > 0) {\n        var largestHeight = view.children[0].state.computedHeight;\n        var largestWidth = view.children[0].state.computedWidth;\n        for (var i = 1; i < view.children.length; ++i) {\n            if (view.state.practicalHeight == \"wrap_content\") {\n                largestHeight = largestHeight > view.children[i].state.computedHeight ? largestHeight : view.children[i].state.computedHeight;\n            }\n            if (view.state.practicalWidth == \"wrap_content\") {\n                largestWidth = largestWidth > view.children[i].state.computedWidth ? largestWidth : view.children[i].state.computedWidth;\n            }\n        }\n        if (view.state.practicalHeight == \"wrap_content\") {\n            elem.style.height = largestHeight + \"px\";\n            view.state.computedHeight = largestHeight;\n        }\n        if (view.state.practicalWidth == \"wrap_content\") {\n            elem.style.width = largestWidth + \"px\";\n            view.state.computedWidth = largestWidth;\n        }\n    }\n};\n\n// what?\nvar handleWrapContent = function handleWrapContent(view, parentElement) {\n    var newDimen = 0;\n    for (var i = 0; i < parentElement.childNodes.length; i++) {\n        newDimen += parentElement.childNodes[i].offsetWidth;\n    }\n    view.props.x = newDimen;\n    return view;\n};\n\n// update a view, layout with new props, cmd will contain new props\nvar runInUI = function runInUI(cmd) {\n    if (!(cmd instanceof Array)) cmd = [cmd];\n\n    cmd.forEach(function (each) {\n        var elem = document.getElementById(each.id);\n\n        if (!elem) {\n            return console.error(\"runInUI (Id NULL) CMD:\", each);\n        }\n\n        var view = window.__VIEWS[elem.id];\n        view.props = helper.merge(view.props, each);\n\n        var styles = setAttributes(view, elem, false);\n        elem.setAttribute(\"style\", styles);\n        view.state = view.state || {};\n        view.state.computedHeight = isNaN(parseInt(view.props.height)) ? view.state.computedHeight || elem.offsetHeight : parseInt(view.props.height);\n        view.state.computedWidth = isNaN(parseInt(view.props.width)) ? view.state.computedWidth || elem.offsetWidth : parseInt(view.props.width);\n    });\n};\n\nmodule.exports = {\n    inflateView: inflateView,\n    runInUI: runInUI,\n    computeChildDimens: computeChildDimens,\n    postComputeLayoutDimens: postComputeLayoutDimens,\n    preComputeLayoutDimens: preComputeLayoutDimens\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEB/Render.js\n");

/***/ }),

/***/ "./src/WEB/Utils.js":
/*!**************************!*\
  !*** ./src/WEB/Utils.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! ./JBridgeInterface */ \"./src/WEB/JBridgeInterface.js\"),\n    getUUID = _require.getUUID;\n\nfunction parseColors(color) {\n  if (color.length < 8) return color;\n\n  if (color.indexOf(\"rgba\") !== -1 || color.indexOf(\"rgb\") !== -1) return color;\n\n  var alpha = parseInt(color.substring(1, 3), 16);\n  alpha = (alpha / 255).toFixed(2);\n\n  var hexColor = color.substring(3, 9);\n  var rgbaColor = \"rgba(\" + convertHexToRgb(hexColor) + \",\" + alpha + \")\";\n\n  return rgbaColor;\n}\n\nfunction rWS(value) {\n  return value.replace(/ /g, '');\n}\n\nfunction cS(value) {\n  return value ? value + '' : \"\";\n}\n\nfunction convertColorToRgba(color) {\n  color = rWS(cS(color));\n\n  var values;\n  var alpha = \"1.00\";\n\n  if (color.length >= 8) {\n    alpha = parseInt(color.substring(1, 3), 16);\n    alpha = (alpha / 255).toFixed(2);\n    color = color.substring(3, 9);\n  } else {\n    color = color.substring(1, color.length);\n  }\n\n  color = convertHexToRgb(rWS(color));\n  values = color.split(',');\n\n  return {\n    r: parseInt(rWS(values[0])),\n    g: parseInt(rWS(values[1])),\n    b: parseInt(rWS(values[2])),\n    a: parseFloat(alpha)\n  };\n}\n\nfunction convertHexToRgb(hex) {\n  var r = parseInt(hex.substring(0, 2), 16).toFixed(2);\n  var g = parseInt(hex.substring(2, 4), 16).toFixed(2);\n  var b = parseInt(hex.substring(4, 6), 16).toFixed(2);\n\n  return r + \",\" + g + \",\" + b;\n}\n\nvar state = {\n  fragments: {},\n  fragmentTypes: {},\n  mainRootView: {\n    type: \"relativeLayout\",\n    props: {\n      \"h\": document.getElementById(\"content\").clientHeight,\n      \"w\": document.getElementById(\"content\").clientWidth\n    }\n  }\n};\n\nfunction addToContainerList(id, namespace) {\n  var container = getContainer(namespace, true);\n  if (container) {\n    var key = getUUID();\n    state.fragments[key] = document.getElementById(id);\n    state.fragmentTypes[key] = window.__VIEWS[id];\n    return key;\n  }\n  return \"__failed\";\n}\n\nfunction getContainer(namespace) {\n  if (namespace) {\n    var container = state.fragments[namespace];\n    if (container) return container;\n  }\n  return document.getElementById(\"content\");\n}\n\nfunction getParentView(namespace, view) {\n  if (namespace) {\n    var containerType = state.fragmentTypes[namespace];\n    if (containerType) {\n      containerType.children = containerType.children || [];\n      containerType.children.push(view);\n      containerType.oldView = true;\n      return containerType;\n    }\n  }\n\n  if (state.mainRootView.children) {\n    state.mainRootView.oldView = true;\n  }\n  state.mainRootView.children = state.mainRootView.children || [];\n  state.mainRootView.children.push(view);\n  return state.mainRootView;\n}\n\n// function modifyTranslation(config){\n//   var x = config.x || \"0\";\n//   var y = config.y || \"0\";\n//   var animationArray = JSON.parse(config.inlineAnimation);\n//   var animationArray = animationArray.map(function(a){\n//     if(a.hasOwnProperty(\"fromX\")){\n//       a.fromX = parseInt(a.fromX) + parseInt(x) + '';\n//       if(!a.hasOwnProperty(\"toX\")){\n//         a.toX = 0 + parseInt(x) + '';\n//       }\n//     }\n//     if(a.hasOwnProperty(\"toX\")){\n//       a.toX = parseInt(a.toX) + parseInt(x) + '';\n//     }\n//     if(a.hasOwnProperty(\"fromY\")){\n//       a.fromY = parseInt(a.fromY) + parseInt(y) + '';\n//       if(!a.hasOwnProperty(\"toY\")){\n//         a.toY = 0 + parseInt(y) + '';\n//       }\n//     }\n//     if(a.hasOwnProperty(\"toY\")){\n//       a.toY = parseInt(a.toY) + parseInt(y) + '';\n//     }\n//     return a;\n//   })\n//   return (animationArray);\n// }\n\nmodule.exports = {\n  parseColors: parseColors,\n  rWS: rWS,\n  cS: cS,\n  convertColorToRgba: convertColorToRgba,\n  addToContainerList: addToContainerList,\n  getParentView: getParentView,\n  getContainer: getContainer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/WEB/Utils.js\n");

/***/ }),

/***/ "./src/WEB/ViewPageAdapter.js":
/*!************************************!*\
  !*** ./src/WEB/ViewPageAdapter.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar Renderer = __webpack_require__(/*! ./Render */ \"./src/WEB/Render.js\");\n\nfunction generateTabWrapper() {\n  var elem = document.createElement(\"div\");\n\n  elem.className = \"tab\";\n\n  return elem;\n}\n\nfunction generateTabTitleWrapper() {\n  var elem = document.createElement(\"div\");\n  elem.className = \"tab-titleWrapper\";\n\n  return elem;\n}\n\nfunction generateTabContentWrapper() {\n  var elem = document.createElement(\"div\");\n\n  elem.className = \"tab-contentWrapper\";\n\n  return elem;\n}\n\nfunction generateTabTitleEl(title) {\n  var elem = document.createElement(\"div\");\n\n  elem.innerHTML = title;\n  elem.className = \"tab-title\";\n\n  return elem;\n};\n\nfunction generateTabContentEl(view) {\n  var elem = Renderer.inflateView({ view: view.view });\n  elem.className += \" tab-content\";\n\n  return elem;\n}\n\nvar createTabs = function createTabs(Android, id, tabJsx, jsx, cb) {\n  var view = generateTabWrapper();\n  var tabTitleWrapper = generateTabTitleWrapper();\n  var tabContentWrapper = generateTabContentWrapper();\n  var tabItem;\n\n  view.appendChild(tabTitleWrapper);\n  view.appendChild(tabContentWrapper);\n\n  jsx.forEach(function (each, index) {\n    tabItem = generateTabTitleEl(each.value);\n\n    if (index == 0) tabItem.className += \" tab-title-active\";\n\n    tabTitleWrapper.appendChild(tabItem);\n  });\n\n  tabJsx.forEach(function (each, index) {\n    tabItem = generateTabContentEl(each);\n\n    if (index == 0) tabItem.className += \" tab-content-active\";\n\n    tabContentWrapper.appendChild(tabItem);\n  });\n\n  document.getElementById(id).appendChild(view);\n\n  window.callUICallback(cb, \"0\");\n};\n\nmodule.exports = {\n  createTabs: createTabs\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvV0VCL1ZpZXdQYWdlQWRhcHRlci5qcz9jNzgyIl0sIm5hbWVzIjpbIlJlbmRlcmVyIiwicmVxdWlyZSIsImdlbmVyYXRlVGFiV3JhcHBlciIsImVsZW0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJnZW5lcmF0ZVRhYlRpdGxlV3JhcHBlciIsImdlbmVyYXRlVGFiQ29udGVudFdyYXBwZXIiLCJnZW5lcmF0ZVRhYlRpdGxlRWwiLCJ0aXRsZSIsImlubmVySFRNTCIsImdlbmVyYXRlVGFiQ29udGVudEVsIiwidmlldyIsImluZmxhdGVWaWV3IiwiY3JlYXRlVGFicyIsIkFuZHJvaWQiLCJpZCIsInRhYkpzeCIsImpzeCIsImNiIiwidGFiVGl0bGVXcmFwcGVyIiwidGFiQ29udGVudFdyYXBwZXIiLCJ0YWJJdGVtIiwiYXBwZW5kQ2hpbGQiLCJmb3JFYWNoIiwiZWFjaCIsImluZGV4IiwidmFsdWUiLCJnZXRFbGVtZW50QnlJZCIsIndpbmRvdyIsImNhbGxVSUNhbGxiYWNrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQyxxQ0FBUixDQUFmOztBQUVBLFNBQVNDLGtCQUFULEdBQWdDO0FBQzlCLE1BQUlDLE9BQU9DLFNBQVNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBWDs7QUFFQUYsT0FBS0csU0FBTCxHQUFpQixLQUFqQjs7QUFFQSxTQUFPSCxJQUFQO0FBQ0Q7O0FBRUQsU0FBU0ksdUJBQVQsR0FBb0M7QUFDbEMsTUFBSUosT0FBT0MsU0FBU0MsYUFBVCxDQUF1QixLQUF2QixDQUFYO0FBQ0FGLE9BQUtHLFNBQUwsR0FBaUIsa0JBQWpCOztBQUVBLFNBQU9ILElBQVA7QUFDRDs7QUFFRCxTQUFTSyx5QkFBVCxHQUF1QztBQUNyQyxNQUFJTCxPQUFPQyxTQUFTQyxhQUFULENBQXVCLEtBQXZCLENBQVg7O0FBRUFGLE9BQUtHLFNBQUwsR0FBaUIsb0JBQWpCOztBQUVBLFNBQU9ILElBQVA7QUFDRDs7QUFFRCxTQUFTTSxrQkFBVCxDQUE2QkMsS0FBN0IsRUFBb0M7QUFDbEMsTUFBSVAsT0FBT0MsU0FBU0MsYUFBVCxDQUF1QixLQUF2QixDQUFYOztBQUVBRixPQUFLUSxTQUFMLEdBQWlCRCxLQUFqQjtBQUNBUCxPQUFLRyxTQUFMLEdBQWlCLFdBQWpCOztBQUVBLFNBQU9ILElBQVA7QUFDRDs7QUFFRCxTQUFTUyxvQkFBVCxDQUErQkMsSUFBL0IsRUFBc0M7QUFDcEMsTUFBSVYsT0FBT0gsU0FBU2MsV0FBVCxDQUFxQixFQUFDRCxNQUFLQSxLQUFLQSxJQUFYLEVBQXJCLENBQVg7QUFDQVYsT0FBS0csU0FBTCxJQUFrQixjQUFsQjs7QUFFQSxTQUFPSCxJQUFQO0FBQ0Q7O0FBRUQsSUFBSVksYUFBYSxTQUFiQSxVQUFhLENBQVNDLE9BQVQsRUFBa0JDLEVBQWxCLEVBQXNCQyxNQUF0QixFQUE4QkMsR0FBOUIsRUFBbUNDLEVBQW5DLEVBQXdDO0FBQ3ZELE1BQUlQLE9BQU9YLG9CQUFYO0FBQ0EsTUFBSW1CLGtCQUFrQmQseUJBQXRCO0FBQ0EsTUFBSWUsb0JBQW9CZCwyQkFBeEI7QUFDQSxNQUFJZSxPQUFKOztBQUVBVixPQUFLVyxXQUFMLENBQWlCSCxlQUFqQjtBQUNBUixPQUFLVyxXQUFMLENBQWlCRixpQkFBakI7O0FBRUFILE1BQUlNLE9BQUosQ0FBWSxVQUFDQyxJQUFELEVBQU9DLEtBQVAsRUFBaUI7QUFDM0JKLGNBQVVkLG1CQUFtQmlCLEtBQUtFLEtBQXhCLENBQVY7O0FBRUEsUUFBSUQsU0FBUyxDQUFiLEVBQ0FKLFFBQVFqQixTQUFSLElBQXFCLG1CQUFyQjs7QUFFQWUsb0JBQWdCRyxXQUFoQixDQUE0QkQsT0FBNUI7QUFDRCxHQVBEOztBQVNBTCxTQUFPTyxPQUFQLENBQWUsVUFBQ0MsSUFBRCxFQUFPQyxLQUFQLEVBQWlCO0FBQzlCSixjQUFVWCxxQkFBcUJjLElBQXJCLENBQVY7O0FBRUEsUUFBSUMsU0FBUyxDQUFiLEVBQ0FKLFFBQVFqQixTQUFSLElBQXFCLHFCQUFyQjs7QUFFQWdCLHNCQUFrQkUsV0FBbEIsQ0FBOEJELE9BQTlCO0FBQ0QsR0FQRDs7QUFTQW5CLFdBQVN5QixjQUFULENBQXdCWixFQUF4QixFQUE0Qk8sV0FBNUIsQ0FBd0NYLElBQXhDOztBQUVBaUIsU0FBT0MsY0FBUCxDQUFzQlgsRUFBdEIsRUFBMkIsR0FBM0I7QUFDRCxDQTlCRDs7QUFnQ0FZLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmxCLGNBQVlBO0FBREcsQ0FBakIiLCJmaWxlIjoiLi9zcmMvV0VCL1ZpZXdQYWdlQWRhcHRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4qIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4qXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbipcbiogSlVTUEFZIFBsYXRmb3JtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiogZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuKlxuKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiogYmUgbGlhYmxlIGZvciBhbGwgZGFtYWdlcyB3aXRob3V0IGxpbWl0YXRpb24sIHdoaWNoIGlzIGNhdXNlZCBieSB0aGVcbiogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4qIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuKiBUaGUgZW5kIHVzZXIgaGFzIE5PIHJpZ2h0IHRvIGNsYWltIGFueSBpbmRlbW5pZmljYXRpb24gYmFzZWQgb24gaXRzIHVzZVxuKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbipcbiogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4qIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuKi9cblxudmFyIFJlbmRlcmVyID0gcmVxdWlyZShcIi4vUmVuZGVyXCIpO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVRhYldyYXBwZXIgKCkgIHtcbiAgdmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGVsZW0uY2xhc3NOYW1lID0gXCJ0YWJcIjtcblxuICByZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVUYWJUaXRsZVdyYXBwZXIgKCkge1xuICB2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGVsZW0uY2xhc3NOYW1lID0gXCJ0YWItdGl0bGVXcmFwcGVyXCI7XG5cbiAgcmV0dXJuIGVsZW07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlVGFiQ29udGVudFdyYXBwZXIgKCkgIHtcbiAgdmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIGVsZW0uY2xhc3NOYW1lID0gXCJ0YWItY29udGVudFdyYXBwZXJcIjtcblxuICByZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVUYWJUaXRsZUVsICh0aXRsZSkge1xuICB2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgZWxlbS5pbm5lckhUTUwgPSB0aXRsZTtcbiAgZWxlbS5jbGFzc05hbWUgPSBcInRhYi10aXRsZVwiO1xuXG4gIHJldHVybiBlbGVtO1xufTtcblxuZnVuY3Rpb24gZ2VuZXJhdGVUYWJDb250ZW50RWwgKHZpZXcpICB7XG4gIHZhciBlbGVtID0gUmVuZGVyZXIuaW5mbGF0ZVZpZXcoe3ZpZXc6dmlldy52aWV3fSk7XG4gIGVsZW0uY2xhc3NOYW1lICs9IFwiIHRhYi1jb250ZW50XCI7XG5cbiAgcmV0dXJuIGVsZW07XG59XG5cbnZhciBjcmVhdGVUYWJzID0gZnVuY3Rpb24oQW5kcm9pZCwgaWQsIHRhYkpzeCwganN4LCBjYikgIHtcbiAgdmFyIHZpZXcgPSBnZW5lcmF0ZVRhYldyYXBwZXIoKTtcbiAgdmFyIHRhYlRpdGxlV3JhcHBlciA9IGdlbmVyYXRlVGFiVGl0bGVXcmFwcGVyKCk7XG4gIHZhciB0YWJDb250ZW50V3JhcHBlciA9IGdlbmVyYXRlVGFiQ29udGVudFdyYXBwZXIoKTtcbiAgdmFyIHRhYkl0ZW07XG5cbiAgdmlldy5hcHBlbmRDaGlsZCh0YWJUaXRsZVdyYXBwZXIpO1xuICB2aWV3LmFwcGVuZENoaWxkKHRhYkNvbnRlbnRXcmFwcGVyKTtcblxuICBqc3guZm9yRWFjaCgoZWFjaCwgaW5kZXgpID0+IHtcbiAgICB0YWJJdGVtID0gZ2VuZXJhdGVUYWJUaXRsZUVsKGVhY2gudmFsdWUpO1xuXG4gICAgaWYgKGluZGV4ID09IDApXG4gICAgdGFiSXRlbS5jbGFzc05hbWUgKz0gXCIgdGFiLXRpdGxlLWFjdGl2ZVwiO1xuXG4gICAgdGFiVGl0bGVXcmFwcGVyLmFwcGVuZENoaWxkKHRhYkl0ZW0pO1xuICB9KTtcblxuICB0YWJKc3guZm9yRWFjaCgoZWFjaCwgaW5kZXgpID0+IHtcbiAgICB0YWJJdGVtID0gZ2VuZXJhdGVUYWJDb250ZW50RWwoZWFjaCk7XG5cbiAgICBpZiAoaW5kZXggPT0gMClcbiAgICB0YWJJdGVtLmNsYXNzTmFtZSArPSBcIiB0YWItY29udGVudC1hY3RpdmVcIjtcblxuICAgIHRhYkNvbnRlbnRXcmFwcGVyLmFwcGVuZENoaWxkKHRhYkl0ZW0pO1xuICB9KTtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCkuYXBwZW5kQ2hpbGQodmlldyk7XG5cbiAgd2luZG93LmNhbGxVSUNhbGxiYWNrKGNiICwgXCIwXCIpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZVRhYnM6IGNyZWF0ZVRhYnMsXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/WEB/ViewPageAdapter.js\n");

/***/ }),

/***/ "./src/animations.js":
/*!***************************!*\
  !*** ./src/animations.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar BaseView = __webpack_require__(/*! ./baseView */ \"./src/baseView.js\");\nvar VIEW = new BaseView(null, null, {});\n\n// Object of types of animations available on screen change\nvar AnimationTypes = {\n  SLIDE: {\n    name: \"slide\",\n    handler: slideHandler\n  },\n  SLIDE_VERTICAL: {\n    name: \"slide_down\",\n    handler: slideDownHandler\n  },\n  SIMPLE: {\n    name: \"simple\",\n    handler: simpleHandler\n  }\n};\n\nvar DEFAULT_ANIMATION = AnimationTypes.SLIDE;\n\nfunction simpleHandler(fromId, toId, direction) {\n  var cmd = VIEW.cmd({\n    id: toId,\n    translationZ: ++window.ZIndex\n  });\n  return cmd;\n}\n\nfunction slideDownHandler(fromId, toId, direction) {\n  var container = VIEW.cmdContainer();\n  var cmd = void 0;\n\n  if (direction == 1) {\n    cmd = VIEW.cmd({\n      id: toId,\n      translationY: window.__HEIGHT,\n      a_duration: '300',\n      a_translationY: '0',\n      translationZ: ++window.ZIndex\n    });\n    container = container.addCmd(cmd);\n\n    cmd = VIEW.cmd({\n      id: fromId,\n      a_translationY: -0.2 * window.__HEIGHT,\n      a_duration: '300'\n    });\n    container = container.addCmd(cmd);\n\n    return container;\n  }\n\n  window.ZIndex++;\n  cmd = VIEW.cmd({\n    id: fromId,\n    translationY: 0,\n    a_translationY: window.__HEIGHT,\n    a_duration: '300',\n    translationZ: ++window.ZIndex\n  });\n  container = container.addCmd(cmd);\n\n  cmd = VIEW.cmd({\n    id: toId,\n    translationZ: window.ZIndex - 1,\n    a_translationY: '0',\n    translationY: -0.2 * window.__HEIGHT,\n    a_duration: '300'\n  });\n  container = container.addCmd(cmd);\n\n  return container;\n}\n\nfunction slideHandler(fromId, toId, direction) {\n  var container = VIEW.cmdContainer();\n  var cmd = void 0;\n  if (direction == 1) {\n    cmd = VIEW.cmd({\n      id: toId,\n      visibility: 'visible',\n      translationX: window.__WIDTH,\n      a_duration: '300',\n      a_translationX: '0',\n      translationZ: ++window.ZIndex\n    });\n    container = container.addCmd(cmd);\n    cmd = VIEW.cmd({\n      id: fromId,\n      translationX: '0',\n      visibility: 'visible',\n      a_duration: '300',\n      a_translationX: -.2 * window.__WIDTH + ''\n    });\n    container = container.addCmd(cmd);\n  }\n\n  if (direction == -1) {\n    window.ZIndex++;\n    cmd = VIEW.cmd({\n      id: fromId,\n      translationX: '0',\n      a_duration: '300',\n      a_translationX: window.__WIDTH,\n      translationZ: ++window.ZIndex\n    });\n    container = container.addCmd(cmd);\n\n    cmd = VIEW.cmd({\n      id: toId,\n      visibility: 'visible',\n      translationX: -.2 * window.__WIDTH + '',\n      a_duration: '300',\n      a_translationX: '0',\n      translationZ: window.ZIndex - 1\n    });\n    container = container.addCmd(cmd);\n  }\n\n  return container;\n}\n\n/*\n  Generic Handler for Animation\n  Arguments:\n    fromViewId: Number - Id of the view currently visible on the screen\n    toViewID: Number - Id of the view which has to be brought on the screen\n    ID: Number - Id of the view to be animated\n    animator: Obj - {name:string, handler:function}\n    direction: Number - Represents of the direction of the screen\n      -1 : Go back to the already rendered screen (right to left)\n       1 : Go to the new screen (left to right)\n*/\nfunction getAnimation(fromViewID, toViewId, direction, animator) {\n  if (!animator) animator = DEFAULT_ANIMATION;\n\n  if ((typeof animator === \"undefined\" ? \"undefined\" : _typeof(animator)) === \"object\" && typeof animator.handler === \"function\") return animator.handler(fromViewID, toViewId, direction);else console.log(new Error(\"Animation handler is not a function, type: \" + animator));\n}\n\nmodule.exports.types = AnimationTypes;\nmodule.exports.getAnimation = getAnimation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/animations.js\n");

/***/ }),

/***/ "./src/baseView.js":
/*!*************************!*\
  !*** ./src/baseView.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar merge = __webpack_require__(/*! ./helper */ \"./src/helper.js\").merge;\n\nString.prototype.addCmd = function (data) {\n  return this.concat(data);\n};\n\nArray.prototype.addCmd = function (data) {\n  this.push(data);\n  return this;\n};\n\nvar parseParams = void 0;\nif (false) {}else if (true) parseParams = __webpack_require__(/*! ./helpers/web/parseParams */ \"./src/helpers/web/parseParams.js\");else {}\n\nvar BaseView = function () {\n  function BaseView(props, children) {\n    _classCallCheck(this, BaseView);\n\n    this.props = props || {};\n    this.children = children || [];\n\n    window.__SETFN = function (config) {\n      Android.runInUI(this.set(config), null);\n    }.bind(this);\n\n    this.idSet = {};\n\n    if (this.props.id) {\n      this.idSet[\"id\"] = this.props.id;\n    } else {\n      this.props.id = this.id(\"id\");\n    }\n\n    if (this.props._ref) {\n      this.props._ref(this);\n    }\n  }\n\n  _createClass(BaseView, [{\n    key: \"resolveChildren\",\n    value: function resolveChildren() {\n      return this.children.map(function (child) {\n        return child.render();\n      });\n    }\n  }, {\n    key: \"findRecurse\",\n    value: function findRecurse(obj, selector) {\n      var children = obj.children;\n\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].displayName && children[i].displayName == selector) {\n          this.foundChildren.push(children[i]);\n        }\n\n        if (children[i].children && children[i].children.length) this.findRecurse(children[i], selector);\n      }\n\n      return;\n    }\n  }, {\n    key: \"find\",\n    value: function find(selector, obj) {\n      this.foundChildren = [];\n\n      if (!obj) this.findRecurse(this.layout, selector);else this.findRecurse(obj, selector);\n\n      return this.foundChildren;\n    }\n  }, {\n    key: \"id\",\n    value: function id(name) {\n      if (!this.idSet[name]) {\n        window.__ID++;\n        this.idSet[name] = window.__ID;\n      }\n\n      return this.idSet[name];\n    }\n  }, {\n    key: \"setIds\",\n    value: function setIds(arr) {\n      if (!this.idSet) this.idSet = {};\n\n      for (var i = 0; i < arr.length; i++) {\n        if (!this.idSet[arr[i]]) {\n          window.__ID++;\n          this.idSet[arr[i]] = window.__ID + '';\n        }\n      }\n    }\n  }, {\n    key: \"handleSpecialChars\",\n    value: function handleSpecialChars(value) {\n      value = value.indexOf(',') > -1 ? value.replace(/\\,/g, '\\\\\\\\,') : value;\n      value = value.indexOf(':') > -1 ? value.replace(/\\:/g, '\\\\\\\\:') : value;\n      value = value.indexOf('=') > -1 ? value.replace(/\\=/g, '\\\\\\\\=') : value;\n      value = value.indexOf(';') > -1 ? value.replace(/\\;/g, '\\\\\\\\;') : value;\n\n      return value;\n    }\n  }, {\n    key: \"cmdForAndroid\",\n    value: function cmdForAndroid(config) {\n      var cmd = \"set_view=ctx->findViewById:i_\" + config.id + \";\";\n      var runInUI;\n\n      if (config.toast) {\n        cmd = \"set_TOAST=android.widget.Toast->makeText:ctx_ctx,cs_\" + this.handleSpecialChars(config.text) + \",i_\" + (config.duration == \"short\" ? 0 : 1) + \";get_TOAST->show\";\n      } else if (config && Object.keys(config).length) {\n        delete config.id;\n\n        config.root = \"true\";\n        runInUI = parseParams(\"linearLayout\", config, \"get\").runInUI;\n\n        cmd += runInUI + ';';\n      }\n\n      return cmd;\n    }\n  }, {\n    key: \"cmdContainer\",\n    value: function cmdContainer() {\n      if (false) {}\n      return [];\n    }\n  }, {\n    key: \"cmdForWeb\",\n    value: function cmdForWeb(config) {\n      if (Object.keys(config).length) return parseParams(\"linearLayout\", config, \"set\");\n    }\n  }, {\n    key: \"cmd\",\n    value: function cmd(config) {\n      if (false) {}else if (true) return this.cmdForWeb(config);\n      return config;\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(id, jsx, index, fn, replaceChild) {\n      var proxyFnName;\n      if (!replaceChild) {\n        replaceChild = false;\n      }\n\n      if (fn) {\n        proxyFnName = 'F' + window.__FN_INDEX;\n        window.__PROXY_FN[proxyFnName] = fn;\n        window.__FN_INDEX++;\n      }\n\n      jsx =  true ? jsx : undefined;\n\n      if (proxyFnName) Android.addViewToParent(id, jsx, index, proxyFnName, replaceChild);else Android.addViewToParent(id, jsx, index, null, replaceChild);\n    }\n  }, {\n    key: \"getView\",\n    value: function getView(jsx) {\n      if (true) return jsx;\n\n      return JSON.stringify(jsx);\n    }\n  }, {\n    key: \"updateProps\",\n    value: function updateProps(props) {\n      this.props = merge(this.props, props);\n      var oldContainerId = this.layout.idSet.id;\n      var layout = this.render();\n      for (var i = 0; i < layout.children.length; i++) {\n        if (i == 0) this.replaceChild(oldContainerId, layout.children[i], i);else this.appendChild(oldContainerId, layout.children[i], i);\n      }\n      this.layout.idSet.id = oldContainerId;\n    }\n  }, {\n    key: \"removeView\",\n    value: function removeView(id) {\n      if (__OS == \"WEB\") return Android.removeView(id);\n      return \"set_VIEW=ctx->findViewById:i_\" + id + \";set_PARENT=get_VIEW->getParent;get_PARENT->removeView:get_VIEW;\";\n    }\n  }, {\n    key: \"removeChildren\",\n    value: function removeChildren(id) {\n      if (__OS == \"WEB\") return Android.removeChildren(id);\n      return \"set_VIEW=ctx->findViewById:i_\" + id + \";get_VIEW->removeAllViews;\";\n    }\n  }, {\n    key: \"replaceChild\",\n    value: function replaceChild(id, jsx, index, fn) {\n      this.appendChild(id, jsx, index, fn, true);\n    }\n  }]);\n\n  return BaseView;\n}();\n\nmodule.exports = BaseView;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/baseView.js\n");

/***/ }),

/***/ "./src/component.js":
/*!**************************!*\
  !*** ./src/component.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar DropdownBox = __webpack_require__(/*! ./components/DropdownBox */ \"./src/components/DropdownBox.js\");\nvar DropdownSearchBox = __webpack_require__(/*! ./components/DropdownSearchBox */ \"./src/components/DropdownSearchBox.js\");\nvar NavBar = __webpack_require__(/*! ./components/NavBar */ \"./src/components/NavBar.js\");\n// const DateRangePicker = require('./components/DateRangePicker')\nvar SwitchButton = __webpack_require__(/*! ./components/SwitchButton */ \"./src/components/SwitchButton.js\");\nvar Button = __webpack_require__(/*! ./components/Button */ \"./src/components/Button.js\");\n\n/* Components */\nfunction closeAllActiveComponents() {\n     if (window.__COM_ACTIVE.NAVBAR != '') NavBar._closeByGUID(window.__COM_ACTIVE.NAVBAR);\n     if (window.__COM_ACTIVE.DSB != '') DropdownSearchBox._closeByGUID(window.__COM_ACTIVE.DSB);\n     if (window.__COM_ACTIVE.DB != '') DropdownBox._closeByGUID(window.__COM_ACTIVE.DB);\n}\n\nfunction renderComponent(elem, props, firstRender) {\n     if (!props.componentType) return;\n\n     var componentType = props.componentType;\n\n     /* Attaching GUID only when firstRender */\n     if (firstRender && props.guid) elem.setAttribute('guid', props.guid);\n\n     switch (componentType) {\n          // Button\n          case 'BT':\n               elem.classList.add(window.__COM_CLASS_GROUP.BT);\n\n               Button._renderMain(elem, props, firstRender);\n               break;\n          // Switch Button\n          case 'SWITCH':\n               elem.classList.add(window.__COM_CLASS_GROUP.SWITCH);\n\n               SwitchButton._renderMain(elem, props, firstRender);\n               break;\n          // Date Range Picker\n          case 'DRP':\n               elem.classList.add(window.__COM_CLASS_GROUP.DRP);\n\n               //   DateRangePicker._renderMain(elem, props, firstRender)\n               break;\n          case 'DRP_BODY':\n               elem.classList.add(window.__COM_CLASS_GROUP.DRP_BODY);\n\n               //   DateRangePicker._renderBody(elem, props, firstRender)\n               break;\n          // Nav Bar\n          case 'NAVBAR':\n               elem.classList.add(window.__COM_CLASS_GROUP.NAVBAR);\n\n               NavBar._renderMain(elem, props, firstRender);\n               break;\n          // Dropdown Box\n          case 'DB':\n               elem.classList.add(window.__COM_CLASS_GROUP.DB);\n\n               DropdownBox._renderMain(elem, props, firstRender);\n               break;\n          case 'DB_FULL_BODY':\n               elem.classList.add(window.__COM_CLASS_GROUP.DB_FULL_BODY);\n\n               DropdownBox._renderFullBody(elem, props, firstRender);\n               break;\n          // Dropdown Search Box\n          case 'DSB':\n               elem.classList.add(window.__COM_CLASS_GROUP.DSB);\n\n               DropdownSearchBox._renderMain(elem, props, firstRender);\n               break;\n          case 'DSB_FULL_BODY':\n               elem.classList.add(window.__COM_CLASS_GROUP.DSB_FULL_BODY);\n\n               DropdownSearchBox._renderFullBody(elem, props, firstRender);\n               break;\n     }\n\n     if (!window.__COM_EVENT) {\n          window.__COM_EVENT = true;\n\n          // Body click event\n          document.body.addEventListener('click', function (e) {\n               var target = e.target;\n               var guid = target.getAttribute('guid');\n\n               if (!guid) {\n                    // We need to close any active components\n                    closeAllActiveComponents();\n               } else {\n                    var classList = target.classList;\n\n                    if (classList.contains(window.__COM_CLASS_GROUP.NAVBAR_ITEM_WITH_SUB)) {\n                         // NAVBAR Menu Item with SubRoute\n                         if (classList.contains('selected')) {\n                              if (!window.__COM_ACTIVE.NAVBAR) return;\n\n                              NavBar._closeByGUID(window.__COM_ACTIVE.NAVBAR);\n                         } else {\n                              closeAllActiveComponents();\n                              NavBar._openByGUID(guid, target);\n                         }\n                    } else if (classList.contains(window.__COM_CLASS_GROUP.NAVBAR_ITEM) || classList.contains(window.__COM_CLASS_GROUP.NAVBAR_SUB_ITEM)) {\n                         // NAVBAR Menu Item (Sub Item as well)\n                         if (window.__COM_ACTIVE.NAVBAR) NavBar._closeByGUID(window.__COM_ACTIVE.NAVBAR);\n\n                         if (classList.contains('selected')) return;\n\n                         NavBar._selectRouteByGUID(guid, target);\n                    } else if (classList.contains(window.__COM_CLASS_GROUP.DB)) {\n                         // DB Main Click\n                         if (guid == window.__COM_ACTIVE.DB) {\n                              DropdownBox._closeByGUID(guid);\n                         } else {\n                              closeAllActiveComponents();\n                              DropdownBox._openByGUID(guid);\n                         }\n                    } else if (classList.contains(window.__COM_CLASS_GROUP.DB_OPTION)) {\n                         // DB Option Select\n                         DropdownBox._closeByGUID(guid);\n                         DropdownBox._selectOptionByGUID(guid, target);\n                    } else if (classList.contains(window.__COM_CLASS_GROUP.DSB)) {\n                         // DSB Main Click\n                         if (guid == window.__COM_ACTIVE.DSB) {\n                              DropdownSearchBox._closeByGUID(guid);\n                         } else {\n                              closeAllActiveComponents();\n                              DropdownSearchBox._openByGUID(guid);\n                         }\n                    } else if (classList.contains(window.__COM_CLASS_GROUP.DSB_OPTION)) {\n                         // DSB Option Select\n                         DropdownSearchBox._closeByGUID(guid);\n                         DropdownSearchBox._selectOptionByGUID(guid, target);\n                    }\n               }\n          });\n\n          // Keydown event\n          document.body.addEventListener('keyup', function (e) {\n               var target = e.target;\n               var guid = target.getAttribute('guid');\n\n               if (!guid) return;\n\n               var classList = target.classList;\n\n               if (classList.contains(window.__COM_CLASS_GROUP.DSB_SEARCH)) {\n                    if (guid == window.__COM_ACTIVE.DSB) {\n                         var query = target.value.trim();\n                         DropdownSearchBox._filterOptions(guid, query);\n                    }\n               }\n          });\n     }\n}\n\nmodule.exports = {\n     renderComponent: renderComponent\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component.js\n");

/***/ }),

/***/ "./src/components/Button.js":
/*!**********************************!*\
  !*** ./src/components/Button.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction Button() {}\n\nButton.prototype._renderMain = function (elem, props, renderEvent) {\n    var guid = props.guid;\n    if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n    elem.style.cursor = 'pointer';\n    elem.style.padding = 0;\n    elem.innerHTML = '';\n\n    var linkElem = document.createElement('A');\n    elem.appendChild(linkElem);\n\n    linkElem.style.pointerEvents = 'auto';\n\n    if (props.hasOwnProperty('disabled') && props.disabled) {\n        elem.classList.add(window.__COM_CLASS_GROUP.BT_DISABLED);\n        linkElem.style.pointerEvents = 'none';\n    }\n\n    var html = '';\n    /* Button Image */\n    if (props.imageUrl) {\n        // Image URL\n        var imageUrl = props.imageUrl;\n\n        var temp = imageUrl.split('.');\n        var ext = '';\n        if (temp && temp.length > 0) ext = temp[temp.length - 1];\n\n        var exts = [\"jpeg\", \"jpg\", \"png\", \"bmp\", \"svg\", \"gif\"];\n        ext = ext.toLowerCase();\n\n        if (!imageUrl.includes(\"data:image/svg+xml\") && !exts.includes(ext)) {\n            imageUrl += '.png';\n        }\n\n        html += '<img src=\"' + imageUrl + '\"/>';\n    } else if (props.iconName) {\n        // Font Icon\n        html += '<i class=\"' + props.iconName + '\"></i>';\n    }\n\n    /* Button Text */\n    if (props.text) html += \"<span>\" + props.text + \"</span>\";else html += \"<span>Button Text</span>\";\n\n    linkElem.innerHTML = html;\n\n    if (props.hasOwnProperty('padding') && props.padding) {\n        var padding = props.padding.split(',').map(function (a) {\n            return a * 1;\n        });\n\n        linkElem.style.padding = padding[1] + 'px ' + padding[2] + 'px ' + padding[3] + 'px ' + padding[0] + 'px';\n    } else {\n        linkElem.style.padding = 0;\n    }\n\n    if (!props.stroke) {\n        elem.style.border = '1px solid ' + window.__COM_COLOR_GROUP.BT_BORDER_COLOR;\n    }\n\n    if (!props.backgroundColor) {\n        elem.style.backgroundColor = window.__COM_COLOR_GROUP.BT_BG_COLOR;\n    }\n\n    if (!props.color) {\n        elem.style.color = window.__COM_COLOR_GROUP.BT_COLOR;\n    }\n};\n\nmodule.exports = new Button();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9CdXR0b24uanM/ZTU2YSJdLCJuYW1lcyI6WyJCdXR0b24iLCJwcm90b3R5cGUiLCJfcmVuZGVyTWFpbiIsImVsZW0iLCJwcm9wcyIsInJlbmRlckV2ZW50IiwiZ3VpZCIsImdldEF0dHJpYnV0ZSIsInN0eWxlIiwiY3Vyc29yIiwicGFkZGluZyIsImlubmVySFRNTCIsImxpbmtFbGVtIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJwb2ludGVyRXZlbnRzIiwiaGFzT3duUHJvcGVydHkiLCJkaXNhYmxlZCIsImNsYXNzTGlzdCIsImFkZCIsIndpbmRvdyIsIl9fQ09NX0NMQVNTX0dST1VQIiwiQlRfRElTQUJMRUQiLCJodG1sIiwiaW1hZ2VVcmwiLCJ0ZW1wIiwic3BsaXQiLCJleHQiLCJsZW5ndGgiLCJleHRzIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsImljb25OYW1lIiwidGV4dCIsIm1hcCIsImEiLCJzdHJva2UiLCJib3JkZXIiLCJfX0NPTV9DT0xPUl9HUk9VUCIsIkJUX0JPUkRFUl9DT0xPUiIsImJhY2tncm91bmRDb2xvciIsIkJUX0JHX0NPTE9SIiwiY29sb3IiLCJCVF9DT0xPUiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsU0FBU0EsTUFBVCxHQUFrQixDQUFFOztBQUVwQkEsT0FBT0MsU0FBUCxDQUFpQkMsV0FBakIsR0FBK0IsVUFBU0MsSUFBVCxFQUFlQyxLQUFmLEVBQXNCQyxXQUF0QixFQUFtQztBQUM5RCxRQUFJQyxPQUFPRixNQUFNRSxJQUFqQjtBQUNBLFFBQUdILEtBQUtJLFlBQUwsQ0FBa0IsTUFBbEIsQ0FBSCxFQUNJRCxPQUFPSCxLQUFLSSxZQUFMLENBQWtCLE1BQWxCLENBQVA7O0FBRUpKLFNBQUtLLEtBQUwsQ0FBV0MsTUFBWCxHQUFvQixTQUFwQjtBQUNBTixTQUFLSyxLQUFMLENBQVdFLE9BQVgsR0FBcUIsQ0FBckI7QUFDQVAsU0FBS1EsU0FBTCxHQUFpQixFQUFqQjs7QUFFQSxRQUFJQyxXQUFXQyxTQUFTQyxhQUFULENBQXVCLEdBQXZCLENBQWY7QUFDQVgsU0FBS1ksV0FBTCxDQUFpQkgsUUFBakI7O0FBRUFBLGFBQVNKLEtBQVQsQ0FBZVEsYUFBZixHQUErQixNQUEvQjs7QUFFQSxRQUFJWixNQUFNYSxjQUFOLENBQXFCLFVBQXJCLEtBQW9DYixNQUFNYyxRQUE5QyxFQUF3RDtBQUNwRGYsYUFBS2dCLFNBQUwsQ0FBZUMsR0FBZixDQUFtQkMsT0FBT0MsaUJBQVAsQ0FBeUJDLFdBQTVDO0FBQ0FYLGlCQUFTSixLQUFULENBQWVRLGFBQWYsR0FBK0IsTUFBL0I7QUFDSDs7QUFFRCxRQUFJUSxPQUFPLEVBQVg7QUFDQTtBQUNBLFFBQUlwQixNQUFNcUIsUUFBVixFQUFvQjtBQUFFO0FBQ2xCLFlBQUlBLFdBQVdyQixNQUFNcUIsUUFBckI7O0FBRUEsWUFBSUMsT0FBT0QsU0FBU0UsS0FBVCxDQUFlLEdBQWYsQ0FBWDtBQUNBLFlBQUlDLE1BQU0sRUFBVjtBQUNBLFlBQUdGLFFBQVFBLEtBQUtHLE1BQUwsR0FBYyxDQUF6QixFQUNJRCxNQUFNRixLQUFLQSxLQUFLRyxNQUFMLEdBQWMsQ0FBbkIsQ0FBTjs7QUFFSixZQUFJQyxPQUFPLENBQUMsTUFBRCxFQUFTLEtBQVQsRUFBZ0IsS0FBaEIsRUFBdUIsS0FBdkIsRUFBOEIsS0FBOUIsRUFBcUMsS0FBckMsQ0FBWDtBQUNBRixjQUFNQSxJQUFJRyxXQUFKLEVBQU47O0FBRUEsWUFBRyxDQUFDTixTQUFTTyxRQUFULENBQWtCLG9CQUFsQixDQUFELElBQTRDLENBQUNGLEtBQUtFLFFBQUwsQ0FBY0osR0FBZCxDQUFoRCxFQUFvRTtBQUNoRUgsd0JBQVksTUFBWjtBQUNIOztBQUVERCxnQkFBUSxlQUFlQyxRQUFmLEdBQTBCLEtBQWxDO0FBQ0gsS0FoQkQsTUFnQk8sSUFBSXJCLE1BQU02QixRQUFWLEVBQW9CO0FBQUU7QUFDekJULGdCQUFRLGVBQWVwQixNQUFNNkIsUUFBckIsR0FBZ0MsUUFBeEM7QUFDSDs7QUFFRDtBQUNBLFFBQUk3QixNQUFNOEIsSUFBVixFQUNJVixRQUFRLFdBQVdwQixNQUFNOEIsSUFBakIsR0FBd0IsU0FBaEMsQ0FESixLQUdJVixRQUFRLDBCQUFSOztBQUVKWixhQUFTRCxTQUFULEdBQXFCYSxJQUFyQjs7QUFFQSxRQUFHcEIsTUFBTWEsY0FBTixDQUFxQixTQUFyQixLQUFtQ2IsTUFBTU0sT0FBNUMsRUFBcUQ7QUFDakQsWUFBSUEsVUFBVU4sTUFBTU0sT0FBTixDQUFjaUIsS0FBZCxDQUFvQixHQUFwQixFQUF5QlEsR0FBekIsQ0FBNkI7QUFBQSxtQkFBS0MsSUFBSSxDQUFUO0FBQUEsU0FBN0IsQ0FBZDs7QUFFQXhCLGlCQUFTSixLQUFULENBQWVFLE9BQWYsR0FBeUJBLFFBQVEsQ0FBUixJQUFhLEtBQWIsR0FBcUJBLFFBQVEsQ0FBUixDQUFyQixHQUFrQyxLQUFsQyxHQUEwQ0EsUUFBUSxDQUFSLENBQTFDLEdBQXVELEtBQXZELEdBQStEQSxRQUFRLENBQVIsQ0FBL0QsR0FBNEUsSUFBckc7QUFDSCxLQUpELE1BSU87QUFDSEUsaUJBQVNKLEtBQVQsQ0FBZUUsT0FBZixHQUF5QixDQUF6QjtBQUNIOztBQUVELFFBQUksQ0FBQ04sTUFBTWlDLE1BQVgsRUFBbUI7QUFDZmxDLGFBQUtLLEtBQUwsQ0FBVzhCLE1BQVgsR0FBb0IsZUFBZWpCLE9BQU9rQixpQkFBUCxDQUF5QkMsZUFBNUQ7QUFDSDs7QUFFRCxRQUFJLENBQUNwQyxNQUFNcUMsZUFBWCxFQUE0QjtBQUN4QnRDLGFBQUtLLEtBQUwsQ0FBV2lDLGVBQVgsR0FBNkJwQixPQUFPa0IsaUJBQVAsQ0FBeUJHLFdBQXREO0FBQ0g7O0FBRUQsUUFBSSxDQUFDdEMsTUFBTXVDLEtBQVgsRUFBa0I7QUFDZHhDLGFBQUtLLEtBQUwsQ0FBV21DLEtBQVgsR0FBbUJ0QixPQUFPa0IsaUJBQVAsQ0FBeUJLLFFBQTVDO0FBQ0g7QUFDSixDQXBFRDs7QUFzRUFDLE9BQU9DLE9BQVAsR0FBaUIsSUFBSTlDLE1BQUosRUFBakIiLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9CdXR0b24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBCdXR0b24oKSB7fVxuXG5CdXR0b24ucHJvdG90eXBlLl9yZW5kZXJNYWluID0gZnVuY3Rpb24oZWxlbSwgcHJvcHMsIHJlbmRlckV2ZW50KSB7XG4gICAgbGV0IGd1aWQgPSBwcm9wcy5ndWlkIFxuICAgIGlmKGVsZW0uZ2V0QXR0cmlidXRlKCdndWlkJykpXG4gICAgICAgIGd1aWQgPSBlbGVtLmdldEF0dHJpYnV0ZSgnZ3VpZCcpXG5cbiAgICBlbGVtLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJyBcbiAgICBlbGVtLnN0eWxlLnBhZGRpbmcgPSAwXG4gICAgZWxlbS5pbm5lckhUTUwgPSAnJ1xuXG4gICAgbGV0IGxpbmtFbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnQScpXG4gICAgZWxlbS5hcHBlbmRDaGlsZChsaW5rRWxlbSlcblxuICAgIGxpbmtFbGVtLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnYXV0bydcblxuICAgIGlmIChwcm9wcy5oYXNPd25Qcm9wZXJ0eSgnZGlzYWJsZWQnKSAmJiBwcm9wcy5kaXNhYmxlZCkge1xuICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQod2luZG93Ll9fQ09NX0NMQVNTX0dST1VQLkJUX0RJU0FCTEVEKVxuICAgICAgICBsaW5rRWxlbS5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnICAgICAgICBcbiAgICB9XG5cbiAgICBsZXQgaHRtbCA9ICcnXG4gICAgLyogQnV0dG9uIEltYWdlICovXG4gICAgaWYgKHByb3BzLmltYWdlVXJsKSB7IC8vIEltYWdlIFVSTFxuICAgICAgICBsZXQgaW1hZ2VVcmwgPSBwcm9wcy5pbWFnZVVybFxuXG4gICAgICAgIGxldCB0ZW1wID0gaW1hZ2VVcmwuc3BsaXQoJy4nKVxuICAgICAgICBsZXQgZXh0ID0gJydcbiAgICAgICAgaWYodGVtcCAmJiB0ZW1wLmxlbmd0aCA+IDApXG4gICAgICAgICAgICBleHQgPSB0ZW1wW3RlbXAubGVuZ3RoIC0gMV1cbiAgICAgICAgXG4gICAgICAgIGxldCBleHRzID0gW1wianBlZ1wiLCBcImpwZ1wiLCBcInBuZ1wiLCBcImJtcFwiLCBcInN2Z1wiLCBcImdpZlwiXVxuICAgICAgICBleHQgPSBleHQudG9Mb3dlckNhc2UoKVxuXG4gICAgICAgIGlmKCFpbWFnZVVybC5pbmNsdWRlcyhcImRhdGE6aW1hZ2Uvc3ZnK3htbFwiKSAmJiAhZXh0cy5pbmNsdWRlcyhleHQpKSB7XG4gICAgICAgICAgICBpbWFnZVVybCArPSAnLnBuZydcbiAgICAgICAgfVxuXG4gICAgICAgIGh0bWwgKz0gJzxpbWcgc3JjPVwiJyArIGltYWdlVXJsICsgJ1wiLz4nXG4gICAgfSBlbHNlIGlmIChwcm9wcy5pY29uTmFtZSkgeyAvLyBGb250IEljb25cbiAgICAgICAgaHRtbCArPSAnPGkgY2xhc3M9XCInICsgcHJvcHMuaWNvbk5hbWUgKyAnXCI+PC9pPidcbiAgICB9XG5cbiAgICAvKiBCdXR0b24gVGV4dCAqL1xuICAgIGlmIChwcm9wcy50ZXh0KSBcbiAgICAgICAgaHRtbCArPSBcIjxzcGFuPlwiICsgcHJvcHMudGV4dCArIFwiPC9zcGFuPlwiXG4gICAgZWxzZVxuICAgICAgICBodG1sICs9IFwiPHNwYW4+QnV0dG9uIFRleHQ8L3NwYW4+XCJcblxuICAgIGxpbmtFbGVtLmlubmVySFRNTCA9IGh0bWxcblxuICAgIGlmKHByb3BzLmhhc093blByb3BlcnR5KCdwYWRkaW5nJykgJiYgcHJvcHMucGFkZGluZykge1xuICAgICAgICBsZXQgcGFkZGluZyA9IHByb3BzLnBhZGRpbmcuc3BsaXQoJywnKS5tYXAoYSA9PiBhICogMSlcbiAgICAgICAgXG4gICAgICAgIGxpbmtFbGVtLnN0eWxlLnBhZGRpbmcgPSBwYWRkaW5nWzFdICsgJ3B4ICcgKyBwYWRkaW5nWzJdICsgJ3B4ICcgKyBwYWRkaW5nWzNdICsgJ3B4ICcgKyBwYWRkaW5nWzBdICsgJ3B4J1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxpbmtFbGVtLnN0eWxlLnBhZGRpbmcgPSAwXG4gICAgfVxuXG4gICAgaWYgKCFwcm9wcy5zdHJva2UpIHtcbiAgICAgICAgZWxlbS5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkICcgKyB3aW5kb3cuX19DT01fQ09MT1JfR1JPVVAuQlRfQk9SREVSX0NPTE9SXG4gICAgfVxuXG4gICAgaWYgKCFwcm9wcy5iYWNrZ3JvdW5kQ29sb3IpIHtcbiAgICAgICAgZWxlbS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB3aW5kb3cuX19DT01fQ09MT1JfR1JPVVAuQlRfQkdfQ09MT1JcbiAgICB9XG5cbiAgICBpZiAoIXByb3BzLmNvbG9yKSB7XG4gICAgICAgIGVsZW0uc3R5bGUuY29sb3IgPSB3aW5kb3cuX19DT01fQ09MT1JfR1JPVVAuQlRfQ09MT1JcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IEJ1dHRvbigpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Button.js\n");

/***/ }),

/***/ "./src/components/DropdownBox.js":
/*!***************************************!*\
  !*** ./src/components/DropdownBox.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction DropdownBox() {}\n\nDropdownBox.prototype._equalOptions = function (a, b, j) {\n     var stringA = a.join(j).trim();\n     var stringB = b.join(j).trim();\n\n     if (stringA == stringB) return true;\n     return false;\n};\n\nDropdownBox.prototype._selectOptionByGUID = function (guid, optionElem) {\n     var value = optionElem.getAttribute('option-value');\n     var text = optionElem.getAttribute('option-text');\n\n     var mainObject = this._getMainObject(guid);\n     var mainObjectID = mainObject.id;\n\n     if (!value || !text || !mainObjectID) return;\n\n     var view = window.__VIEWS[mainObjectID];\n\n     if (!view || !view.props) return;\n\n     // Save Option Value\n     if (!window.__COM_RENDERED.DB[guid]) window.__COM_RENDERED.DB[guid] = {};\n     window.__COM_RENDERED.DB[guid].optionValue = value;\n\n     // Update UI\n     var optionsElem = this._getOptionsObject(guid);\n     if (optionsElem && optionsElem.childNodes) {\n          for (var i = 0; i < optionsElem.childNodes.length; i++) {\n               if (optionsElem.childNodes[i].getAttribute('option-value') == value && optionsElem.childNodes[i].getAttribute('option-text') == text) {\n                    optionsElem.childNodes[i].classList.add('selected');\n               } else {\n                    optionsElem.childNodes[i].classList.remove('selected');\n               }\n          }\n     }\n\n     var children = mainObject.childNodes;\n     var article = null;\n\n     if (children.length) {\n          for (var _i = 0; _i < children.length; _i++) {\n               if (children[_i].nodeName.toLowerCase() == 'article') {\n                    article = children[_i];\n                    break;\n               }\n          }\n     }\n\n     mainObject.style.color = window.__COM_COLOR_GROUP.ACTIVE_COLOR;\n     if (article) article.innerText = text;\n\n     // Event Trigger\n     if (view.props.onSelect && typeof view.props.onSelect == \"function\") {\n          view.props.onSelect(value);\n     }\n};\n\nDropdownBox.prototype._isValidOV = function (optionValue, options) {\n     var text = \"\";\n\n     if (options && options.length > 0) {\n          for (var i in options) {\n               if (options[i].value == optionValue) {\n                    text = options[i].text;\n                    break;\n               }\n          }\n     }\n\n     return text;\n};\n\nDropdownBox.prototype._getMainObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DB + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownBox.prototype._getFullBodyObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DB_FULL_BODY + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownBox.prototype._getBodyObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DB_BODY + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownBox.prototype._getOptionsObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DB_OPTIONS + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownBox.prototype._renderOption = function (parentElem, props, guid, option, optionValue, renderEvent) {\n     var elem = document.createElement('div');\n\n     elem.className = window.__COM_CLASS_GROUP.DB_OPTION;\n     elem.setAttribute('option-value', option.value);\n     elem.setAttribute('option-text', option.text);\n\n     var height = 50;\n     if (props.optionHeight && !isNaN(props.optionHeight)) {\n          height = parseFloat(props.optionHeight);\n     }\n\n     elem.style.height = height + 'px';\n\n     if (props.fontSize) elem.style.fontSize = props.fontSize + 'px';\n     if (props.fontFamily) elem.style.fontFamily = props.fontFamily;\n     if (props.optionPadding) {\n          var padding = props.optionPadding.split(',').map(function (a) {\n               return a * 1;\n          });\n\n          elem.style.padding = padding[1] + 'px ' + padding[2] + 'px ' + padding[3] + 'px ' + padding[0] + 'px';\n     }\n\n     elem.setAttribute('guid', guid);\n\n     if (optionValue && optionValue == option.value) {\n          elem.classList.add('selected');\n     } else {\n          elem.classList.remove('selected');\n     }\n\n     var article = document.createElement('ARTICLE');\n     article.innerText = option.text;\n\n     elem.appendChild(article);\n     parentElem.appendChild(elem);\n};\n\nDropdownBox.prototype._openByGUID = function (guid) {\n     var object = this._getMainObject(guid);\n     var bodyElem = this._getBodyObject(guid);\n\n     if (!object || !bodyElem) return;\n\n     object.classList.add('selected');\n     bodyElem.style.display = 'block';\n     window.__COM_ACTIVE.DB = guid;\n};\n\nDropdownBox.prototype._closeByGUID = function (guid) {\n     var object = this._getMainObject(guid);\n     var bodyElem = this._getBodyObject(guid);\n\n     if (!object || !bodyElem) return;\n\n     object.classList.remove('selected');\n     bodyElem.style.display = 'none';\n     window.__COM_ACTIVE.DB = '';\n};\n\nDropdownBox.prototype._renderMain = function (elem, props, renderEvent) {\n     // GUID\n     var guid = props.guid;\n     if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n     var children = elem.childNodes;\n     var article = null;\n\n     if (children.length) {\n          for (var i = 0; i < children.length; i++) {\n               if (children[i].nodeName.toLowerCase() == 'article') {\n                    article = children[i];\n                    break;\n               }\n          }\n     }\n\n     if (!props.stroke) elem.style.border = \"1px solid \" + window.__COM_COLOR_GROUP.BORDER_COLOR;\n\n     if (props.options) {\n          var options = JSON.parse(props.options);\n          var optionValue = null;\n\n          if (props.optionValue) optionValue = props.optionValue;\n\n          // Read option value\n          if (window.__COM_RENDERED.DB[guid] && window.__COM_RENDERED.DB[guid].optionValue) optionValue = window.__COM_RENDERED.DB[guid].optionValue + \"\";\n\n          if (optionValue) {\n               var optionText = this._isValidOV(optionValue, options);\n\n               if (optionText != \"\") {\n                    elem.style.color = window.__COM_COLOR_GROUP.ACTIVE_COLOR;\n\n                    if (article) article.innerText = optionText;\n               }\n          }\n     }\n     /* Default Styles End */\n};\n\nDropdownBox.prototype._renderFullBody = function (elem, props, renderEvent) {\n     // GUID\n     var guid = props.guid;\n     if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n     var bodyElem = null;\n     var optionsElement = null;\n\n     if (renderEvent) {\n          bodyElem = document.createElement('div');\n          bodyElem.classList.add(window.__COM_CLASS_GROUP.DB_BODY);\n          bodyElem.style.display = 'none';\n          bodyElem.setAttribute('guid', guid);\n\n          optionsElement = document.createElement('div');\n          optionsElement.classList.add(window.__COM_CLASS_GROUP.DB_OPTIONS);\n          optionsElement.setAttribute('guid', guid);\n\n          bodyElem.appendChild(optionsElement);\n\n          elem.appendChild(bodyElem);\n     } else {\n          bodyElem = this._getBodyObject(guid);\n\n          optionsElement = this._getOptionsObject(guid);\n     }\n\n     if (!bodyElem || !optionsElement) return;\n\n     // Options\n     this._renderOptions(optionsElement, props, guid, renderEvent);\n};\n\nDropdownBox.prototype._renderOptions = function (elem, props, guid, renderEvent) {\n     var previousOptions = [];\n     var options = [];\n\n     // Current Options\n     if (props.options) {\n          options = JSON.parse(props.options);\n     }\n\n     // Previous Options\n     if (window.__COM_RENDERED.DB[guid] && window.__COM_RENDERED.DB[guid].options) {\n          previousOptions = JSON.parse(window.__COM_RENDERED.DB[guid].options);\n     }\n\n     // Read option value\n     var optionValue = null;\n     if (props.optionValue) optionValue = props.optionValue;\n     if (window.__COM_RENDERED.DB[guid] && window.__COM_RENDERED.DB[guid].optionValue) optionValue = window.__COM_RENDERED.DB[guid].optionValue + \"\";\n\n     // Save Options\n     if (!window.__COM_RENDERED.DB[guid]) window.__COM_RENDERED.DB[guid] = {};\n     window.__COM_RENDERED.DB[guid].options = props.options;\n\n     // Style\n     var height = 50;\n     if (props.optionHeight && !isNaN(props.optionHeight)) {\n          height = parseFloat(props.optionHeight);\n     }\n\n     if (options.length > 5) {\n          elem.style.maxHeight = height * 5 + 'px';\n     } else {\n          elem.style.maxHeight = 'auto';\n     }\n\n     if (!this._equalOptions(previousOptions, options, guid)) {\n          // Options Changed - Need to Re-render\n          elem.innerHTML = '';\n\n          if (options && options.length > 0) {\n               for (var i = 0; i < options.length; i++) {\n                    var option = options[i];\n\n                    this._renderOption(elem, props, guid, option, optionValue, renderEvent);\n               }\n          }\n     }\n};\n\nmodule.exports = new DropdownBox();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/DropdownBox.js\n");

/***/ }),

/***/ "./src/components/DropdownSearchBox.js":
/*!*********************************************!*\
  !*** ./src/components/DropdownSearchBox.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction DropdownSearchBox() {}\n\nDropdownSearchBox.prototype._equalOptions = function (a, b, j) {\n     var stringA = a.join(j).trim();\n     var stringB = b.join(j).trim();\n\n     if (stringA == stringB) return true;\n     return false;\n};\n\nDropdownSearchBox.prototype._selectOptionByGUID = function (guid, optionElem) {\n     var value = optionElem.getAttribute('option-value');\n     var text = optionElem.getAttribute('option-text');\n\n     var mainObject = this._getMainObject(guid);\n     var mainObjectID = mainObject.id;\n\n     if (!value || !text || !mainObjectID) return;\n\n     var view = window.__VIEWS[mainObjectID];\n\n     if (!view || !view.props) return;\n\n     // Save Option Value\n     if (!window.__COM_RENDERED.DSB[guid]) window.__COM_RENDERED.DSB[guid] = {};\n     window.__COM_RENDERED.DSB[guid].optionValue = value;\n\n     // Update UI\n     var optionsElem = this._getOptionsObject(guid);\n     if (optionsElem && optionsElem.childNodes) {\n          for (var i = 0; i < optionsElem.childNodes.length; i++) {\n               if (optionsElem.childNodes[i].getAttribute('option-value') == value && optionsElem.childNodes[i].getAttribute('option-text') == text) {\n                    optionsElem.childNodes[i].classList.add('selected');\n               } else {\n                    optionsElem.childNodes[i].classList.remove('selected');\n               }\n          }\n     }\n\n     var children = mainObject.childNodes;\n     var article = null;\n\n     if (children.length) {\n          for (var _i = 0; _i < children.length; _i++) {\n               if (children[_i].nodeName.toLowerCase() == 'article') {\n                    article = children[_i];\n                    break;\n               }\n          }\n     }\n\n     mainObject.style.color = window.__COM_COLOR_GROUP.ACTIVE_COLOR;\n     if (article) article.innerText = text;\n\n     // Event Trigger\n     if (view.props.onSelect && typeof view.props.onSelect == \"function\") {\n          view.props.onSelect(value);\n     }\n};\n\nDropdownSearchBox.prototype._isValidOV = function (optionValue, options) {\n     var optionText = \"\";\n\n     if (options && options.length > 0) {\n          for (var i in options) {\n               if (options[i].value == optionValue) {\n                    optionText = options[i].text;\n                    break;\n               }\n          }\n     }\n\n     return optionText;\n};\n\nDropdownSearchBox.prototype._getMainObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DSB + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownSearchBox.prototype._getFullBodyObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DSB_FULL_BODY + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownSearchBox.prototype._getBodyObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DSB_BODY + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownSearchBox.prototype._getSearchWrapObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DSB_SEARCH_WRAP + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownSearchBox.prototype._getSearchObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DSB_SEARCH + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownSearchBox.prototype._getOptionsObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.DSB_OPTIONS + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nDropdownSearchBox.prototype._filterOptions = function (guid, query) {\n     var optionsElem = this._getOptionsObject(guid);\n\n     if (!optionsElem) return;\n\n     query = query.toLowerCase();\n\n     if (optionsElem.childNodes) {\n          for (var i = 0; i < optionsElem.childNodes.length; i++) {\n               var optionElem = optionsElem.childNodes[i];\n               var text = optionElem.getAttribute('option-text');\n\n               if (text) {\n                    text = text.toLowerCase();\n\n                    if (text.indexOf(query) !== -1) {\n                         optionElem.style.display = 'flex';\n                    } else {\n                         optionElem.style.display = 'none';\n                    }\n               }\n          }\n     }\n};\n\nDropdownSearchBox.prototype._renderOption = function (parentElem, props, guid, option, optionValue, renderEvent) {\n     var elem = document.createElement('div');\n\n     elem.className = window.__COM_CLASS_GROUP.DSB_OPTION;\n     elem.setAttribute('option-value', option.value);\n     elem.setAttribute('option-text', option.text);\n\n     var height = 50;\n     if (props.optionHeight && !isNaN(props.optionHeight)) {\n          height = parseFloat(props.optionHeight);\n     }\n\n     elem.style.height = height + 'px';\n\n     if (props.fontSize) elem.style.fontSize = props.fontSize + 'px';\n     if (props.fontFamily) elem.style.fontFamily = props.fontFamily;\n     if (props.optionPadding) {\n          var padding = props.optionPadding.split(',').map(function (a) {\n               return a * 1;\n          });\n\n          elem.style.padding = padding[1] + 'px ' + padding[2] + 'px ' + padding[3] + 'px ' + padding[0] + 'px';\n     }\n\n     elem.setAttribute('guid', guid);\n\n     if (optionValue && optionValue == option.value) {\n          elem.classList.add('selected');\n     } else {\n          elem.classList.remove('selected');\n     }\n\n     var article = document.createElement('ARTICLE');\n     article.innerText = option.text;\n\n     elem.appendChild(article);\n     parentElem.appendChild(elem);\n};\n\nDropdownSearchBox.prototype._openByGUID = function (guid) {\n     var object = this._getMainObject(guid);\n     var bodyElem = this._getBodyObject(guid);\n\n     if (!object || !bodyElem) return;\n\n     object.classList.add('selected');\n     bodyElem.style.display = 'block';\n     window.__COM_ACTIVE.DSB = guid;\n};\n\nDropdownSearchBox.prototype._closeByGUID = function (guid) {\n     var object = this._getMainObject(guid);\n     var bodyElem = this._getBodyObject(guid);\n\n     if (!object || !bodyElem) return;\n\n     object.classList.remove('selected');\n     bodyElem.style.display = 'none';\n     window.__COM_ACTIVE.DSB = '';\n};\n\nDropdownSearchBox.prototype._renderMain = function (elem, props, renderEvent) {\n     // GUID\n     var guid = props.guid;\n     if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n     var children = elem.childNodes;\n     var article = null;\n\n     if (children.length) {\n          for (var i = 0; i < children.length; i++) {\n               if (children[i].nodeName.toLowerCase() == 'article') {\n                    article = children[i];\n                    break;\n               }\n          }\n     }\n\n     if (!props.stroke) elem.style.border = \"1px solid \" + window.__COM_COLOR_GROUP.BORDER_COLOR;\n\n     if (props.options) {\n          var options = JSON.parse(props.options);\n          var optionValue = null;\n\n          if (props.optionValue) optionValue = props.optionValue;\n\n          // Read option value\n          if (window.__COM_RENDERED.DSB[guid] && window.__COM_RENDERED.DSB[guid].optionValue) optionValue = window.__COM_RENDERED.DSB[guid].optionValue + \"\";\n\n          if (optionValue) {\n               var optionText = this._isValidOV(optionValue, options);\n\n               if (optionText != \"\") {\n                    elem.style.color = window.__COM_COLOR_GROUP.ACTIVE_COLOR;\n\n                    if (article) article.innerText = optionText;\n               }\n          }\n     }\n     /* Default Styles End */\n};\n\nDropdownSearchBox.prototype._renderFullBody = function (elem, props, renderEvent) {\n     // GUID\n     var guid = props.guid;\n     if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n     var bodyElem = null;\n     var searchWrapElement = null;\n     var searchElement = null;\n     var optionsElement = null;\n\n     if (renderEvent) {\n          bodyElem = document.createElement('div');\n          bodyElem.classList.add(window.__COM_CLASS_GROUP.DSB_BODY);\n          bodyElem.style.display = 'none';\n          bodyElem.setAttribute('guid', guid);\n\n          searchWrapElement = document.createElement('div');\n          searchWrapElement.classList.add(window.__COM_CLASS_GROUP.DSB_SEARCH_WRAP);\n          searchWrapElement.setAttribute('guid', guid);\n\n          searchElement = document.createElement('INPUT');\n          searchElement.setAttribute('type', 'text');\n          searchElement.setAttribute('placeholder', 'Search...');\n          searchElement.classList.add(window.__COM_CLASS_GROUP.DSB_SEARCH);\n          searchElement.setAttribute('guid', guid);\n\n          searchWrapElement.appendChild(searchElement);\n\n          bodyElem.appendChild(searchWrapElement);\n\n          optionsElement = document.createElement('div');\n          optionsElement.classList.add(window.__COM_CLASS_GROUP.DSB_OPTIONS);\n          optionsElement.setAttribute('guid', guid);\n\n          bodyElem.appendChild(optionsElement);\n\n          elem.appendChild(bodyElem);\n     } else {\n          bodyElem = this._getBodyObject(guid);\n\n          searchWrapElement = this._getSearchWrapObject(guid);\n\n          searchElement = this._getSearchObject(guid);\n\n          optionsElement = this._getOptionsObject(guid);\n     }\n\n     if (!bodyElem || !searchWrapElement || !searchElement || !optionsElement) return;\n\n     // Styles\n     if (props.fontSize) searchElement.style.fontSize = props.fontSize + 'px';\n     if (props.fontFamily) searchElement.style.fontFamily = props.fontFamily;\n\n     // Options\n     this._renderOptions(optionsElement, props, guid, renderEvent);\n};\n\nDropdownSearchBox.prototype._renderOptions = function (elem, props, guid, renderEvent) {\n     var previousOptions = [];\n     var options = [];\n\n     // Current Options\n     if (props.options) {\n          options = JSON.parse(props.options);\n     }\n\n     // Previous Options\n     if (window.__COM_RENDERED.DSB[guid] && window.__COM_RENDERED.DSB[guid].options) {\n          previousOptions = JSON.parse(window.__COM_RENDERED.DSB[guid].options);\n     }\n\n     // Read option value\n     var optionValue = null;\n     if (props.optionValue) optionValue = props.optionValue;\n     if (window.__COM_RENDERED.DSB[guid] && window.__COM_RENDERED.DSB[guid].optionValue) optionValue = window.__COM_RENDERED.DSB[guid].optionValue + \"\";\n\n     // Save Options\n     if (!window.__COM_RENDERED.DSB[guid]) window.__COM_RENDERED.DSB[guid] = {};\n     window.__COM_RENDERED.DSB[guid].options = props.options;\n\n     // Style\n     var height = 50;\n     if (props.optionHeight && !isNaN(props.optionHeight)) {\n          height = parseFloat(props.optionHeight);\n     }\n\n     if (options.length > 5) {\n          elem.style.maxHeight = height * 5 + 'px';\n     } else {\n          elem.style.maxHeight = 'auto';\n     }\n\n     if (!this._equalOptions(previousOptions, options, guid)) {\n          // Options Changed - Need to Re-render\n          elem.innerHTML = '';\n\n          if (options && options.length > 0) {\n               for (var i = 0; i < options.length; i++) {\n                    var option = options[i];\n\n                    this._renderOption(elem, props, guid, option, optionValue, renderEvent);\n               }\n          }\n     }\n};\n\nmodule.exports = new DropdownSearchBox();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/DropdownSearchBox.js\n");

/***/ }),

/***/ "./src/components/NavBar.js":
/*!**********************************!*\
  !*** ./src/components/NavBar.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction NavBar() {}\n\nNavBar.prototype._getActiveRouteItem = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.NAVBAR_ITEM_WITH_SUB + '.selected[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nNavBar.prototype._getMainObject = function (guid) {\n     var query = '.' + window.__COM_CLASS_GROUP.NAVBAR + '[guid=\"' + guid + '\"]';\n     return document.body.querySelector(query);\n};\n\nNavBar.prototype._openByGUID = function (guid, parentElem) {\n     parentElem.classList.add('selected');\n     window.__COM_ACTIVE.NAVBAR = guid;\n};\n\nNavBar.prototype._closeByGUID = function (guid) {\n     var object = this._getActiveRouteItem(guid);\n     if (object) object.classList.remove('selected');\n\n     window.__COM_ACTIVE.NAVBAR = '';\n};\n\nNavBar.prototype._selectRouteByGUID = function (guid, elem) {\n     var key = elem.getAttribute('route-key');\n     var text = elem.getAttribute('route-text');\n\n     var object = this._getMainObject(guid);\n     var objectID = object.id;\n\n     if (!key || !text || !objectID) return;\n\n     var view = window.__VIEWS[objectID];\n\n     if (!view || !view.props) return;\n\n     /* Update UI */\n     if (window.__COM_RENDERED.NAVBAR[guid] && window.__COM_RENDERED.NAVBAR[guid].activeElem) window.__COM_RENDERED.NAVBAR[guid].activeElem.classList.remove('selected');\n\n     elem.classList.add('selected');\n\n     if (!window.__COM_RENDERED.NAVBAR[guid]) window.__COM_RENDERED.NAVBAR[guid] = {};\n\n     window.__COM_RENDERED.NAVBAR[guid].activeElem = elem;\n     window.__COM_RENDERED.NAVBAR[guid].defaultValue = key;\n\n     /* Event Trigger */\n     if (view.props.onSelect && typeof view.props.onSelect == \"function\") {\n          view.props.onSelect(key);\n     }\n};\n\nNavBar.prototype._renderRoute = function (parentElem, props, guid, route, renderEvent) {\n     if (!route.key || !route.text) return;\n\n     var elem = document.createElement('LI');\n     elem.classList.add(window.__COM_CLASS_GROUP.NAVBAR_ITEM);\n\n     elem.setAttribute('route-key', route.key);\n     elem.setAttribute('route-text', route.text);\n     elem.setAttribute('guid', guid);\n\n     var defaultValue = null;\n     if (props.defaultValue) defaultValue = props.defaultValue;\n     if (window.__COM_RENDERED.NAVBAR[guid] && window.__COM_RENDERED.NAVBAR[guid].defaultValue) defaultValue = window.__COM_RENDERED.NAVBAR[guid].defaultValue + \"\";\n\n     if (defaultValue && defaultValue == route.key) {\n          elem.classList.add('selected');\n\n          // Save\n          if (!window.__COM_RENDERED.NAVBAR[guid]) window.__COM_RENDERED.NAVBAR[guid] = {};\n\n          window.__COM_RENDERED.NAVBAR[guid].activeElem = elem;\n          window.__COM_RENDERED.NAVBAR[guid].defaultValue = route.key;\n     } else elem.classList.remove('selected');\n\n     var article = document.createElement('article');\n     if (props.height && !isNaN(props.height)) article.style.lineHeight = props.height + 'px';\n\n     elem.appendChild(article);\n\n     if (route.subroutes && route.subroutes.length > 0) {\n          article.innerHTML = route.text + ' &#9662;';\n          elem.classList.add(window.__COM_CLASS_GROUP.NAVBAR_ITEM_WITH_SUB);\n\n          var virtualElem = document.createElement('UL');\n          virtualElem.classList.add(window.__COM_CLASS_GROUP.NAVBAR_SUB);\n\n          if (route.navDirection && route.navDirection == 'from_right') virtualElem.classList.add(window.__COM_CLASS_GROUP.NAVBAR_SUB_RIGHT);\n\n          virtualElem.setAttribute('guid', guid);\n\n          if (props.translationZ_nav) virtualElem.style.zIndex = props.translationZ_nav;\n\n          elem.appendChild(virtualElem);\n\n          for (var i = 0; i < route.subroutes.length; i++) {\n               var subroute = route.subroutes[i];\n\n               this._renderSubRoute(virtualElem, props, guid, subroute, renderEvent);\n          }\n     } else {\n          article.innerHTML = route.text;\n     }\n\n     parentElem.appendChild(elem);\n};\n\nNavBar.prototype._renderSubRoute = function (parentElem, props, guid, route, renderEvent) {\n     if (!route.key || !route.text) return;\n\n     var elem = document.createElement('LI');\n     elem.classList.add(window.__COM_CLASS_GROUP.NAVBAR_SUB_ITEM);\n\n     elem.setAttribute('route-key', route.key);\n     elem.setAttribute('route-text', route.text);\n     elem.setAttribute('guid', guid);\n\n     var defaultValue = null;\n     if (props.defaultValue) defaultValue = props.defaultValue;\n     if (window.__COM_RENDERED.NAVBAR[guid] && window.__COM_RENDERED.NAVBAR[guid].defaultValue) defaultValue = window.__COM_RENDERED.NAVBAR[guid].defaultValue + \"\";\n\n     if (defaultValue && defaultValue == route.key) {\n          elem.classList.add('selected');\n\n          // Save\n          if (!window.__COM_RENDERED.NAVBAR[guid]) window.__COM_RENDERED.NAVBAR[guid] = {};\n\n          window.__COM_RENDERED.NAVBAR[guid].activeElem = elem;\n          window.__COM_RENDERED.NAVBAR[guid].defaultValue = route.key;\n     } else {\n          elem.classList.remove('selected');\n     }\n\n     var article = document.createElement('article');\n     article.innerHTML = route.text;\n\n     elem.appendChild(article);\n     parentElem.appendChild(elem);\n};\n\nNavBar.prototype._renderMain = function (elem, props, renderEvent) {\n     if (!renderEvent) return;\n\n     // GUID\n     var guid = props.guid;\n     if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n     // ROUTES\n     var routes = [];\n     if (props && props.routes) routes = JSON.parse(props.routes);\n\n     elem.innerHTML = '';\n     var virtualElem = document.createElement('UL');\n     elem.appendChild(virtualElem);\n\n     if (routes.length > 0) {\n          for (var i = 0; i < routes.length; i++) {\n               var route = routes[i];\n\n               this._renderRoute(virtualElem, props, guid, route, renderEvent);\n          }\n     }\n};\n\nmodule.exports = new NavBar();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/NavBar.js\n");

/***/ }),

/***/ "./src/components/SwitchButton.js":
/*!****************************************!*\
  !*** ./src/components/SwitchButton.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction SwitchButton() {}\n\nSwitchButton.prototype._renderMain = function (elem, props, renderEvent) {\n     if (renderEvent) {\n          elem.innerHTML = '';\n\n          var guid = props.guid;\n          if (elem.getAttribute('guid')) guid = elem.getAttribute('guid');\n\n          this._renderStyle(elem, props, guid);\n\n          var virtualElem = document.createElement('LABEL');\n          virtualElem.classList.add(window.__COM_CLASS_GROUP.SWITCH_BODY);\n          virtualElem.setAttribute('guid', guid);\n\n          elem.appendChild(virtualElem);\n\n          this._renderSlider(virtualElem, props, guid, renderEvent);\n     }\n};\n\nSwitchButton.prototype._renderSlider = function (parentElem, props, guid, renderEvent) {\n     var selectedDefault = false;\n     if (props.hasOwnProperty('selectedDefault')) selectedDefault = props.selectedDefault;\n\n     var checkbox = document.createElement('INPUT');\n     checkbox.setAttribute('type', 'checkbox');\n\n     if (selectedDefault) {\n          checkbox.setAttribute('checked', 'checked');\n     }\n\n     var elem = document.createElement('SPAN');\n     elem.classList.add(window.__COM_CLASS_GROUP.SWITCH_SLIDER);\n\n     parentElem.appendChild(checkbox);\n     parentElem.appendChild(elem);\n\n     // Events\n     if (renderEvent && props.onSwitch && typeof props.onSwitch == \"function\") {\n          checkbox.addEventListener('change', function () {\n               props.onSwitch(this.checked);\n          });\n     }\n};\n\nSwitchButton.prototype._renderStyle = function (parentElem, props, guid) {\n     var gap = 4;\n     var parentWidth = parentElem.offsetWidth;\n     var parentHeight = parentElem.offsetHeight;\n\n     var size = Math.min(parentWidth, parentHeight);\n     var actualSize = size - 2 * gap;\n     if (actualSize < 0) {\n          actualSize = size;\n          gap = 0;\n     }\n\n     var tx = parentWidth - 2 * gap - actualSize;\n     if (tx < 0) tx = 0;\n\n     var styleElem = document.createElement('style');\n     styleElem.type = 'text/css';\n\n     var css = '';\n     css += '.' + window.__COM_CLASS_GROUP.SWITCH_BODY + '[guid=\"' + guid + '\"] .' + window.__COM_CLASS_GROUP.SWITCH_SLIDER + '{border-radius: ' + size + 'px} ';\n     css += '.' + window.__COM_CLASS_GROUP.SWITCH_BODY + '[guid=\"' + guid + '\"] .' + window.__COM_CLASS_GROUP.SWITCH_SLIDER + ':before {border-radius: 50%; content: \"\"; position: absolute; width: ' + actualSize + 'px; height: ' + actualSize + 'px; left: ' + gap + 'px; bottom: ' + gap + 'px; background-color: white; -webkit-transition: .4s; transition: .4s;} ';\n     css += '.' + window.__COM_CLASS_GROUP.SWITCH_BODY + '[guid=\"' + guid + '\"] input:checked + .' + window.__COM_CLASS_GROUP.SWITCH_SLIDER + ':before {transform: translateX(' + tx + 'px);} ';\n\n     styleElem.appendChild(document.createTextNode(css));\n     document.head.appendChild(styleElem);\n};\n\nmodule.exports = new SwitchButton();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/SwitchButton.js\n");

/***/ }),

/***/ "./src/compute.js":
/*!************************!*\
  !*** ./src/compute.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\n/*\n  ViewContext of the Parent.f\n  Obj holds the available width and height of it's parent container\n  and x & y offset for it's children\n*/\nfunction viewCtxObj(view) {\n  var props = view.props;\n  var obj = {\n    w: props.w * 1,\n    h: props.h * 1,\n    width: props.w * 1\n  };\n\n  view.children.forEach(function (child) {\n    child.props.w = child.props.width;\n    child.props.h = child.props.height;\n  });\n\n  return obj;\n}\n\n/*\n  Returns true if container has a child with match_parent for a\n  given dimension (width or height)\n*/\nfunction hasMatchParentChild(childs, dimen) {\n  for (var i = 0; i < childs.length; i++) {\n    var childProp = childs[i].props;\n\n    if (childProp[dimen] && childProp[dimen] == \"match_parent\") {\n      return true;\n    }\n  }\n  return false;\n}\n\n/*\n  Returns true if container has weighted child\n*/\nfunction hasWeightChild(type, childs) {\n  if (type != \"linearLayout\") {\n    return false;\n  }\n\n  for (var i = 0; i < childs.length; i++) {\n    var child = childs[i].props;\n\n    if (child.weight && parseFloat(child.weight) > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction computeRelativeLayout(view) {\n  var viewCtx = viewCtxObj(view);\n  var children = view.children;\n\n  children.forEach(function (child) {\n    var props = child.props;\n\n    props.absolute = true;\n    props.fromTop = 0;\n    props.fromBottom = 'auto';\n    props.fromLeft = 0;\n    props.fromRight = 'auto';\n\n    if (props.hasOwnProperty('alignParentLeft') && props.alignParentLeft) {\n      props.fromLeft = 0;\n      props.fromRight = 'auto';\n    }\n    if (props.hasOwnProperty('alignParentRight') && props.alignParentRight) {\n      props.fromLeft = 'auto';\n      props.fromRight = 0;\n    }\n\n    if (props.hasOwnProperty('alignParentBottom') && props.alignParentBottom) {\n      props.fromTop = 'auto';\n      props.fromBottom = 0;\n    }\n  });\n}\n\nfunction computeLinearlayout(view) {\n  var viewCtx = viewCtxObj(view);\n  var parentProps = view.props;\n  var children = view.children;\n  var isHorizontal = parentProps.orientation === \"vertical\" ? false : true;\n\n  var activeDimen = isHorizontal ? \"w\" : \"h\";\n  var passiveDimen = isHorizontal ? \"h\" : \"w\";\n\n  var hasWeight = hasWeightChild(view.type, children);\n  var hasMatchParent = hasMatchParentChild(children, activeDimen);\n\n  if (hasWeight && hasMatchParent) {\n    // We can't use both at the same time\n    return;\n  }\n\n  /* Initialize */\n  children.forEach(function (child) {\n    var props = child.props;\n\n    if (props.hasOwnProperty(\"activeDimen\")) delete props[\"activeDimen\"];\n    if (props.hasOwnProperty(\"activeWeight\")) delete props[\"activeWeight\"];\n  });\n  /* Initialize End */\n\n  if (hasMatchParent || hasWeight) {\n    var first = true;\n    /* Iterate Child */\n    children.forEach(function (child) {\n      var props = child.props;\n\n      if (props.hasOwnProperty(activeDimen) && props[activeDimen] == 'match_parent') {\n        props['activeDimen'] = activeDimen;\n\n        if (first) {\n          props['activeWeight'] = 1;\n          first = false;\n        } else {\n          props['activeWeight'] = 0;\n        }\n      } else {\n        if (props.hasOwnProperty('weight') && !isNaN(props['weight'])) {\n          var weight = parseFloat(props['weight']);\n\n          if (weight > 0) {\n            props['activeDimen'] = activeDimen;\n            props['activeWeight'] = weight;\n          }\n        }\n      }\n    });\n    /* Iterate Child End */\n  }\n} // End Compute LinearLayout\n\nfunction computeChildDimens(view) {\n  if (view.type == \"linearLayout\") {\n    computeLinearlayout(view);\n  } else if (view.type == \"scrollView\" || view.type == \"listView\") {\n    view.props.orientation = \"vertical\";\n    computeLinearlayout(view);\n  } else if (view.type == \"horizontalScrollView\") {\n    view.props.orientation = \"horizontal\";\n    computeLinearlayout(view);\n  } else if (view.type == \"relativeLayout\") {\n    computeRelativeLayout(view);\n  } else {\n    // Do Nothing\n  }\n\n  return view;\n}\n\nmodule.exports = {\n  computeChildDimens: computeChildDimens\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/compute.js\n");

/***/ }),

/***/ "./src/doms/index.js":
/*!***************************!*\
  !*** ./src/doms/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nfunction run() {\n  if (false) {} else if (true) {\n    return __webpack_require__(/*! ./web */ \"./src/doms/web.js\");\n  } else {}\n}\n\nmodule.exports = run();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZG9tcy9pbmRleC5qcz9mZWE1Il0sIm5hbWVzIjpbInJ1biIsIndpbmRvdyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBLFNBQVNBLEdBQVQsR0FBZTtBQUNiLE1BQUlDLEtBQUosRUFBMkIsRUFBM0IsTUFFTyxJQUFJQSxJQUFKLEVBQTJCO0FBQ2hDLFdBQU9DLG1CQUFPQSxDQUFDLGdDQUFSLENBQVA7QUFDRCxHQUZNLE1BRUEsRUFFTjtBQUNGOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCSixLQUFqQiIsImZpbGUiOiIuL3NyYy9kb21zL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiogSlVTUEFZIFRlY2hub2xvZ2llcyBQdnQuIEx0ZC4gW2h0dHBzOi8vd3d3Lmp1c3BheS5pbl1cbipcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuKlxuKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuKiBQdWJsaWMgTGljZW5zZSAoR05VIEFHUEwpIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLFxuKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4qXG4qIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBUaGUgZW5kIHVzZXIgd2lsbFxuKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiogZGFtYWdlcywgY2xhaW1zLCBjb3N0LCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leSBmZWUgY2xhaW1lZCBvbiBKdXNwYXkuXG4qIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4qIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuKlxuKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4qL1xuXG5mdW5jdGlvbiBydW4oKSB7XG4gIGlmICh3aW5kb3cuX19PUyA9PT0gXCJJT1NcIikge1xuICAgIHJldHVybiByZXF1aXJlKFwiLi9pb3NcIilcbiAgfSBlbHNlIGlmICh3aW5kb3cuX19PUyA9PT0gXCJXRUJcIikge1xuICAgIHJldHVybiByZXF1aXJlKFwiLi93ZWJcIilcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcmVxdWlyZShcIi4vYW5kcm9pZFwiKVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcnVuKCk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/doms/index.js\n");

/***/ }),

/***/ "./src/doms/web.js":
/*!*************************!*\
  !*** ./src/doms/web.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar parseParams = __webpack_require__(/*! ../helpers/web */ \"./src/helpers/web/index.js\").parseParams;\n\nArray.prototype.flatten = function () {\n  return this.reduce(function (prev, cur) {\n    var more = [].concat(cur).some(Array.isArray);\n    return prev.concat(more ? cur.flatten() : cur);\n  }, []);\n};\n\nmodule.exports = function (type, props, children) {\n  // console.log(\"type is\",type); \n  // console.log(\"props are\",props); \n  // console.log(\"children is\",children); \n  // children = children.flatten();\n  // console.log(\"children after flatten is\",children);\n\n  if (!props) props = {};\n\n  if (typeof type === \"string\") {\n    //props = parseParams(type, props);\n\n    var obj = {\n      props: props,\n      type: type,\n      children: children\n    };\n\n    window.__VIEWS[props.id] = obj;\n    window.__VIEW_DIMENSIONS[props.id] = null;\n    return obj;\n  } else {\n    return new type(props, children);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZG9tcy93ZWIuanM/NDgyZCJdLCJuYW1lcyI6WyJwYXJzZVBhcmFtcyIsInJlcXVpcmUiLCJBcnJheSIsInByb3RvdHlwZSIsImZsYXR0ZW4iLCJyZWR1Y2UiLCJwcmV2IiwiY3VyIiwibW9yZSIsImNvbmNhdCIsInNvbWUiLCJpc0FycmF5IiwibW9kdWxlIiwiZXhwb3J0cyIsInR5cGUiLCJwcm9wcyIsImNoaWxkcmVuIiwib2JqIiwid2luZG93IiwiX19WSUVXUyIsImlkIiwiX19WSUVXX0RJTUVOU0lPTlMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF5QkEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUMsa0RBQVIsRUFBMEJELFdBQTVDOztBQUVBRSxNQUFNQyxTQUFOLENBQWdCQyxPQUFoQixHQUEwQixZQUFZO0FBQ3BDLFNBQU8sS0FBS0MsTUFBTCxDQUFZLFVBQVVDLElBQVYsRUFBZ0JDLEdBQWhCLEVBQXFCO0FBQ3RDLFFBQUlDLE9BQU8sR0FBR0MsTUFBSCxDQUFVRixHQUFWLEVBQWVHLElBQWYsQ0FBb0JSLE1BQU1TLE9BQTFCLENBQVg7QUFDQSxXQUFPTCxLQUFLRyxNQUFMLENBQVlELE9BQU9ELElBQUlILE9BQUosRUFBUCxHQUF1QkcsR0FBbkMsQ0FBUDtBQUNELEdBSE0sRUFHSixFQUhJLENBQVA7QUFJRCxDQUxEOztBQU9BSyxPQUFPQyxPQUFQLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0JDLEtBQWhCLEVBQXVCQyxRQUF2QixFQUFpQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQUksQ0FBQ0QsS0FBTCxFQUNFQSxRQUFRLEVBQVI7O0FBRUYsTUFBSSxPQUFPRCxJQUFQLEtBQWdCLFFBQXBCLEVBQThCO0FBQzVCOztBQUVBLFFBQUlHLE1BQU07QUFDUkYsYUFBT0EsS0FEQztBQUVSRCxZQUFNQSxJQUZFO0FBR1JFLGdCQUFVQTtBQUhGLEtBQVY7O0FBTUFFLFdBQU9DLE9BQVAsQ0FBZUosTUFBTUssRUFBckIsSUFBMkJILEdBQTNCO0FBQ0FDLFdBQU9HLGlCQUFQLENBQXlCTixNQUFNSyxFQUEvQixJQUFxQyxJQUFyQztBQUNBLFdBQU9ILEdBQVA7QUFDRCxHQVpELE1BWU87QUFDTCxXQUFPLElBQUlILElBQUosQ0FBU0MsS0FBVCxFQUFnQkMsUUFBaEIsQ0FBUDtBQUNEO0FBQ0YsQ0F6QkQiLCJmaWxlIjoiLi9zcmMvZG9tcy93ZWIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNyBcIkpVU1BBWSBUZWNobm9sb2dpZXNcIlxuKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuKlxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBKVVNQQVkgUGxhdGZvcm0uXG4qXG4qIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4qIGl0IGZvciBvbmx5IGVkdWNhdGlvbmFsIHB1cnBvc2VzIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsXG4qIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4qIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4qIEZvciBFbnRlcnByaXNlL0NvbW1lcmljYWwgbGljZW5zZXMsIGNvbnRhY3QgPGluZm9AanVzcGF5LmluPi5cbipcbiogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4qIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4qIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4qIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4qIEFCVVNFIG9mIHRoZSBMSUNFTlNFRCBTT0ZUV0FSRSBhbmQgc2hhbGwgSU5ERU1OSUZZIEpVU1BBWSBmb3Igc3VjaFxuKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2Vcbiogb2YgTGljZW5zZWQgU29mdHdhcmUuIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4qXG4qIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC5odG1sPi5cbiovXG5cbnZhciBwYXJzZVBhcmFtcyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvd2ViJykucGFyc2VQYXJhbXM7XG5cbkFycmF5LnByb3RvdHlwZS5mbGF0dGVuID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1cikge1xuICAgIHZhciBtb3JlID0gW10uY29uY2F0KGN1cikuc29tZShBcnJheS5pc0FycmF5KTtcbiAgICByZXR1cm4gcHJldi5jb25jYXQobW9yZSA/IGN1ci5mbGF0dGVuKCkgOiBjdXIpO1xuICB9LCBbXSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0eXBlLCBwcm9wcywgY2hpbGRyZW4pIHtcbiAgLy8gY29uc29sZS5sb2coXCJ0eXBlIGlzXCIsdHlwZSk7IFxuICAvLyBjb25zb2xlLmxvZyhcInByb3BzIGFyZVwiLHByb3BzKTsgXG4gIC8vIGNvbnNvbGUubG9nKFwiY2hpbGRyZW4gaXNcIixjaGlsZHJlbik7IFxuICAvLyBjaGlsZHJlbiA9IGNoaWxkcmVuLmZsYXR0ZW4oKTtcbiAgLy8gY29uc29sZS5sb2coXCJjaGlsZHJlbiBhZnRlciBmbGF0dGVuIGlzXCIsY2hpbGRyZW4pO1xuXG4gIGlmICghcHJvcHMpXG4gICAgcHJvcHMgPSB7fTtcbiAgXG4gIGlmICh0eXBlb2YgdHlwZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIC8vcHJvcHMgPSBwYXJzZVBhcmFtcyh0eXBlLCBwcm9wcyk7XG4gICAgXG4gICAgbGV0IG9iaiA9IHtcbiAgICAgIHByb3BzOiBwcm9wcyxcbiAgICAgIHR5cGU6IHR5cGUsXG4gICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICB9O1xuXG4gICAgd2luZG93Ll9fVklFV1NbcHJvcHMuaWRdID0gb2JqOyBcbiAgICB3aW5kb3cuX19WSUVXX0RJTUVOU0lPTlNbcHJvcHMuaWRdID0gbnVsbDtcbiAgICByZXR1cm4gb2JqO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgdHlwZShwcm9wcywgY2hpbGRyZW4pO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/doms/web.js\n");

/***/ }),

/***/ "./src/handler.js":
/*!************************!*\
  !*** ./src/handler.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n  handle: function handle(ui, callback) {\n    if (!ui) {\n      return;\n    }\n    if (ui.render) {\n      if (typeof Android === \"undefined\") throw new Error(\"Android is undefined\");\n\n      if (true) return Android.Render(ui.render, null);else {}\n    }\n\n    if (ui.runInUI) {\n      Android.runInUI(ui.runInUI, null);\n    }\n    if (ui.addViewToParent) {\n      Android.addViewToParent(ui.addViewToParent.parentId, JSON.stringify(ui.addViewToParent.jsx), ui.addViewToParent.index, null);\n    }\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGFuZGxlci5qcz9mMTY4Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJoYW5kbGUiLCJ1aSIsImNhbGxiYWNrIiwicmVuZGVyIiwiQW5kcm9pZCIsIkVycm9yIiwid2luZG93IiwiUmVuZGVyIiwicnVuSW5VSSIsImFkZFZpZXdUb1BhcmVudCIsInBhcmVudElkIiwiSlNPTiIsInN0cmluZ2lmeSIsImpzeCIsImluZGV4Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFVBQVMsZ0JBQUNDLEVBQUQsRUFBS0MsUUFBTCxFQUFrQjtBQUN6QixRQUFJLENBQUNELEVBQUwsRUFBUztBQUNQO0FBQ0Q7QUFDRCxRQUFHQSxHQUFHRSxNQUFOLEVBQWM7QUFDWixVQUFJLE9BQU9DLE9BQVAsS0FBbUIsV0FBdkIsRUFDRSxNQUFNLElBQUlDLEtBQUosQ0FBVSxzQkFBVixDQUFOOztBQUVGLFVBQUlDLElBQUosRUFDRSxPQUFPRixRQUFRRyxNQUFSLENBQWVOLEdBQUdFLE1BQWxCLEVBQTBCLElBQTFCLENBQVAsQ0FERixLQUVLLEVBTUo7QUFDRjs7QUFFRCxRQUFHRixHQUFHTyxPQUFOLEVBQWU7QUFDYkosY0FBUUksT0FBUixDQUFnQlAsR0FBR08sT0FBbkIsRUFBNEIsSUFBNUI7QUFDRDtBQUNELFFBQUdQLEdBQUdRLGVBQU4sRUFBdUI7QUFDckJMLGNBQVFLLGVBQVIsQ0FBd0JSLEdBQUdRLGVBQUgsQ0FBbUJDLFFBQTNDLEVBQXFEQyxLQUFLQyxTQUFMLENBQWVYLEdBQUdRLGVBQUgsQ0FBbUJJLEdBQWxDLENBQXJELEVBQTZGWixHQUFHUSxlQUFILENBQW1CSyxLQUFoSCxFQUF1SCxJQUF2SDtBQUNEO0FBQ0Y7QUExQmMsQ0FBakIiLCJmaWxlIjoiLi9zcmMvaGFuZGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIENvcHlyaWdodCAoYykgMjAxMi0yMDE3IFwiSlVTUEFZIFRlY2hub2xvZ2llc1wiXG4qIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4qXG4qIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIEpVU1BBWSBQbGF0Zm9ybS5cbipcbiogSlVTUEFZIFBsYXRmb3JtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiogaXQgZm9yIG9ubHkgZWR1Y2F0aW9uYWwgcHVycG9zZXMgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWxcbiogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiogZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3IgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiogRm9yIEVudGVycHJpc2UvQ29tbWVyaWNhbCBsaWNlbnNlcywgY29udGFjdCA8aW5mb0BqdXNwYXkuaW4+LlxuKlxuKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiogYmUgbGlhYmxlIGZvciBhbGwgZGFtYWdlcyB3aXRob3V0IGxpbWl0YXRpb24sIHdoaWNoIGlzIGNhdXNlZCBieSB0aGVcbiogQUJVU0Ugb2YgdGhlIExJQ0VOU0VEIFNPRlRXQVJFIGFuZCBzaGFsbCBJTkRFTU5JRlkgSlVTUEFZIGZvciBzdWNoXG4qIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuKiBUaGUgZW5kIHVzZXIgaGFzIE5PIHJpZ2h0IHRvIGNsYWltIGFueSBpbmRlbW5pZmljYXRpb24gYmFzZWQgb24gaXRzIHVzZVxuKiBvZiBMaWNlbnNlZCBTb2Z0d2FyZS4gU2VlIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbipcbiogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4qIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy9hZ3BsLmh0bWw+LlxuKi9cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGhhbmRsZSA6ICh1aSwgY2FsbGJhY2spID0+IHtcbiAgICBpZiAoIXVpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmKHVpLnJlbmRlcikge1xuICAgICAgaWYgKHR5cGVvZiBBbmRyb2lkID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBbmRyb2lkIGlzIHVuZGVmaW5lZFwiKTtcblxuICAgICAgaWYgKHdpbmRvdy5fX09TICE9IFwiQU5EUk9JRFwiKVxuICAgICAgICByZXR1cm4gQW5kcm9pZC5SZW5kZXIodWkucmVuZGVyLCBudWxsKTtcbiAgICAgIGVsc2Uge1xuICAgICAgICBpZih0eXBlb2YgQW5kcm9pZC5nZXROZXdJRCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICByZXR1cm4gQW5kcm9pZC5SZW5kZXIoSlNPTi5zdHJpbmdpZnkodWkucmVuZGVyKSwgbnVsbCwgXCJmYWxzZVwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gQW5kcm9pZC5SZW5kZXIoSlNPTi5zdHJpbmdpZnkodWkucmVuZGVyKSwgbnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZih1aS5ydW5JblVJKSB7XG4gICAgICBBbmRyb2lkLnJ1bkluVUkodWkucnVuSW5VSSwgbnVsbCk7XG4gICAgfVxuICAgIGlmKHVpLmFkZFZpZXdUb1BhcmVudCkge1xuICAgICAgQW5kcm9pZC5hZGRWaWV3VG9QYXJlbnQodWkuYWRkVmlld1RvUGFyZW50LnBhcmVudElkLCBKU09OLnN0cmluZ2lmeSh1aS5hZGRWaWV3VG9QYXJlbnQuanN4KSwgdWkuYWRkVmlld1RvUGFyZW50LmluZGV4LCBudWxsKTtcbiAgICB9XG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/handler.js\n");

/***/ }),

/***/ "./src/helper.js":
/*!***********************!*\
  !*** ./src/helper.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\n// Following functions are used by WEB and IOS Render\nfunction cacheDimen(view) {\n  var props = view.props;\n  var dimen = {\n    w: props.w,\n    h: props.h,\n    x: props.x,\n    y: props.y,\n    gravity: props.gravity,\n    padding: props.padding,\n    orientation: props.orientation,\n    stroke: props.stroke ? props.stroke.split(\",\")[0] * 1 : 0\n  };\n  window.__VIEW_DIMENSIONS[props.id] = dimen;\n}\n\nfunction shouldMove(view) {\n  var props = view.props;\n  var dimen = {\n    w: props.w,\n    h: props.h,\n    x: props.x,\n    y: props.y\n  };\n  var cachedDimen = window.__VIEW_DIMENSIONS[props.id];\n  var changed = false;\n  if (!cachedDimen) return dimen;\n  for (var key in dimen) {\n    if (cachedDimen[key] != dimen[key]) {\n      dimen.id = props.id;\n      changed = true;\n    }\n  }\n  if (changed) return dimen;\n  return null;\n}\n\nfunction getOS() {\n  var userAgent = navigator.userAgent;\n  if (!userAgent) return console.error(new Error(\"UserAgent is null\"));\n  if (userAgent.includes(\"Android\") && userAgent.includes(\"Version\")) return \"ANDROID\";\n  if ((userAgent.includes(\"iPhone\") || userAgent.includes(\"iPad\")) && !userAgent.includes(\"Version\")) return \"IOS\";\n  return \"WEB\";\n}\n\nfunction clearViewExternals(view) {\n  if (!view) return;\n\n  delete window.__VIEWS[view.props.id];\n  delete window.__VIEW_DIMENSIONS[view.props.id];\n\n  if (__OBSERVERS[view.props.id]) delete window.__OBSERVERS[view.props.id];\n\n  view.children.forEach(clearViewExternals);\n}\n\n// use: clone( <thing to copy> ) returns <new copy>\nfunction clone(o, m) {\n  // return non object values\n  if ('object' !== (typeof o === \"undefined\" ? \"undefined\" : _typeof(o))) return o;\n  // m: a map of old refs to new object refs to stop recursion\n  if ('object' !== (typeof m === \"undefined\" ? \"undefined\" : _typeof(m)) || null === m) m = new WeakMap();\n  var n = m.get(o);\n  if ('undefined' !== typeof n) return n;\n  // shallow/leaf clone object\n  var c = Object.getPrototypeOf(o).constructor;\n  // TODO: specialize copies for expected built in types i.e. Date etc\n  switch (c) {\n    // shouldn't be copied, keep reference\n    case Boolean:\n    case Error:\n    case Function:\n    case Number:\n    case Promise:\n    case String:\n    case Symbol:\n    case WeakMap:\n    case WeakSet:\n      n = o;\n      break;\n    // array like/collection objects\n    case Array:\n      m.set(o, n = o.slice(0));\n      // recursive copy for child objects\n      n.forEach(function (v, i) {\n        if ('object' === (typeof v === \"undefined\" ? \"undefined\" : _typeof(v))) n[i] = clone(v, m);\n      });\n      break;\n    case ArrayBuffer:\n      m.set(o, n = o.slice(0));\n      break;\n    case DataView:\n      m.set(o, n = new c(clone(o.buffer, m), o.byteOffset, o.byteLength));\n      break;\n    case Map:\n    case Set:\n      m.set(o, n = new c(clone(Array.from(o.entries()), m)));\n      break;\n    case Int8Array:\n    case Uint8Array:\n    case Uint8ClampedArray:\n    case Int16Array:\n    case Uint16Array:\n    case Int32Array:\n    case Uint32Array:\n    case Float32Array:\n    case Float64Array:\n      m.set(o, n = new c(clone(o.buffer, m), o.byteOffset, o.length));\n      break;\n    // use built in copy constructor\n    case Date:\n    case RegExp:\n      m.set(o, n = new c(o));\n      break;\n    // fallback generic object copy\n    default:\n      m.set(o, n = Object.assign(new c(), o));\n      // recursive copy for child objects\n      for (c in n) {\n        if ('object' === _typeof(n[c])) n[c] = clone(n[c], m);\n      }}\n  return n;\n}\n\nfunction merge() {\n  var obj = {},\n      i = 0,\n      il = arguments.length,\n      key;\n  for (; i < il; i++) {\n    for (key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n  return obj;\n};\n\nmodule.exports = {\n  shouldMove: shouldMove,\n  cacheDimen: cacheDimen,\n  getOS: getOS,\n  merge: merge,\n  clearViewExternals: clearViewExternals,\n  clone: clone\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/helper.js\n");

/***/ }),

/***/ "./src/helpers/common/callbackInvoker.js":
/*!***********************************************!*\
  !*** ./src/helpers/common/callbackInvoker.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/* \n\nThis function executes a function stored in a hashmap. \nIt takes atleast a callback string (key for hashmap) to excute the function. \nIn essence this is the read function for the global hashmap.\n./callbackMapper.j is the write function for the global hashmap. \n\nWhile the function name contains `UI` in it, it is not related to UI is any way. \nIt is mostly called after the UI is rendered but JBridge also calls it to call APIs. \n\n*/\n\nfunction invokeUICallback() {\n    var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n    var fName = args[0];\n    var functionArgs = args.slice(1);\n    var currTime;\n    var timeDiff;\n\n    if (window.__ALL_ONCLICKS && window.__ALL_ONCLICKS.indexOf(fName) != -1 && args[2] == \"feedback\" && JBridge && JBridge.setClickFeedback) {\n        return JBridge.setClickFeedback(args[1]);\n    }\n\n    if (window.__THROTTELED_ACTIONS && window.__THROTTELED_ACTIONS.indexOf(fName) == -1) {\n        window.__PROXY_FN[fName].apply(null, functionArgs);\n    } else if (window.__LAST_FN_CALLED && fName == window.__LAST_FN_CALLED.fName) {\n        currTime = getCurrTime();\n        timeDiff = currTime - window.__LAST_FN_CALLED.timeStamp;\n\n        if (timeDiff >= 300) {\n            window.__PROXY_FN[fName].apply(null, functionArgs);\n            window.__LAST_FN_CALLED.timeStamp = currTime;\n        } else {\n            console.warn(\"function throtteled\", fName);\n            console.warn(\"time diff\", timeDiff);\n        }\n    } else {\n        window.__PROXY_FN[fName].apply(null, functionArgs);\n        window.__LAST_FN_CALLED = {\n            timeStamp: new Date().getTime(),\n            fName: fName\n        };\n    }\n};\n\nmodule.exports = {\n    invoke: invokeUICallback\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9jb21tb24vY2FsbGJhY2tJbnZva2VyLmpzP2FjYmUiXSwibmFtZXMiOlsiaW52b2tlVUlDYWxsYmFjayIsImFyZ3MiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJBcnJheSIsImFwcGx5IiwiZk5hbWUiLCJmdW5jdGlvbkFyZ3MiLCJzbGljZSIsImN1cnJUaW1lIiwidGltZURpZmYiLCJ3aW5kb3ciLCJfX0FMTF9PTkNMSUNLUyIsImluZGV4T2YiLCJKQnJpZGdlIiwic2V0Q2xpY2tGZWVkYmFjayIsIl9fVEhST1RURUxFRF9BQ1RJT05TIiwiX19QUk9YWV9GTiIsIl9fTEFTVF9GTl9DQUxMRUQiLCJnZXRDdXJyVGltZSIsInRpbWVTdGFtcCIsImNvbnNvbGUiLCJ3YXJuIiwiRGF0ZSIsImdldFRpbWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiaW52b2tlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7QUFhQSxTQUFTQSxnQkFBVCxHQUE2QjtBQUN6QixRQUFJQyxPQUFRQyxVQUFVQyxNQUFWLEtBQXFCLENBQXJCLEdBQXlCLENBQUNELFVBQVUsQ0FBVixDQUFELENBQXpCLEdBQTBDRSxNQUFNQyxLQUFOLENBQVksSUFBWixFQUNsREgsU0FEa0QsQ0FBdEQ7QUFFQSxRQUFJSSxRQUFRTCxLQUFLLENBQUwsQ0FBWjtBQUNBLFFBQUlNLGVBQWVOLEtBQUtPLEtBQUwsQ0FBVyxDQUFYLENBQW5CO0FBQ0EsUUFBSUMsUUFBSjtBQUNBLFFBQUlDLFFBQUo7O0FBRUEsUUFBSUMsT0FBT0MsY0FBUCxJQUF5QkQsT0FBT0MsY0FBUCxDQUFzQkMsT0FBdEIsQ0FBOEJQLEtBQTlCLEtBQXdDLENBQUMsQ0FBbEUsSUFBdUVMLEtBQUssQ0FBTCxLQUFXLFVBQWxGLElBQWdHYSxPQUFoRyxJQUEyR0EsUUFBUUMsZ0JBQXZILEVBQXlJO0FBQ3JJLGVBQU9ELFFBQVFDLGdCQUFSLENBQXlCZCxLQUFLLENBQUwsQ0FBekIsQ0FBUDtBQUNIOztBQUVELFFBQUlVLE9BQU9LLG9CQUFQLElBQStCTCxPQUFPSyxvQkFBUCxDQUE0QkgsT0FBNUIsQ0FBb0NQLEtBQXBDLEtBQThDLENBQUMsQ0FBbEYsRUFBcUY7QUFDakZLLGVBQU9NLFVBQVAsQ0FBa0JYLEtBQWxCLEVBQXlCRCxLQUF6QixDQUErQixJQUEvQixFQUFxQ0UsWUFBckM7QUFDSCxLQUZELE1BRU8sSUFBSUksT0FBT08sZ0JBQVAsSUFBNEJaLFNBQVNLLE9BQU9PLGdCQUFQLENBQXdCWixLQUFqRSxFQUF5RTtBQUM1RUcsbUJBQVdVLGFBQVg7QUFDQVQsbUJBQVdELFdBQVdFLE9BQU9PLGdCQUFQLENBQXdCRSxTQUE5Qzs7QUFFQSxZQUFJVixZQUFZLEdBQWhCLEVBQXFCO0FBQ2pCQyxtQkFBT00sVUFBUCxDQUFrQlgsS0FBbEIsRUFBeUJELEtBQXpCLENBQStCLElBQS9CLEVBQXFDRSxZQUFyQztBQUNBSSxtQkFBT08sZ0JBQVAsQ0FBd0JFLFNBQXhCLEdBQW9DWCxRQUFwQztBQUNILFNBSEQsTUFHTztBQUNIWSxvQkFBUUMsSUFBUixDQUFhLHFCQUFiLEVBQW9DaEIsS0FBcEM7QUFDQWUsb0JBQVFDLElBQVIsQ0FBYSxXQUFiLEVBQTBCWixRQUExQjtBQUNIO0FBQ0osS0FYTSxNQVdBO0FBQ0hDLGVBQU9NLFVBQVAsQ0FBa0JYLEtBQWxCLEVBQXlCRCxLQUF6QixDQUErQixJQUEvQixFQUFxQ0UsWUFBckM7QUFDQUksZUFBT08sZ0JBQVAsR0FBMEI7QUFDdEJFLHVCQUFZLElBQUlHLElBQUosRUFBRCxDQUFhQyxPQUFiLEVBRFc7QUFFdEJsQixtQkFBT0E7QUFGZSxTQUExQjtBQUlIO0FBQ0o7O0FBRURtQixPQUFPQyxPQUFQLEdBQWlCO0FBQ2JDLFlBQVMzQjtBQURJLENBQWpCIiwiZmlsZSI6Ii4vc3JjL2hlbHBlcnMvY29tbW9uL2NhbGxiYWNrSW52b2tlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIFxuXG5UaGlzIGZ1bmN0aW9uIGV4ZWN1dGVzIGEgZnVuY3Rpb24gc3RvcmVkIGluIGEgaGFzaG1hcC4gXG5JdCB0YWtlcyBhdGxlYXN0IGEgY2FsbGJhY2sgc3RyaW5nIChrZXkgZm9yIGhhc2htYXApIHRvIGV4Y3V0ZSB0aGUgZnVuY3Rpb24uIFxuSW4gZXNzZW5jZSB0aGlzIGlzIHRoZSByZWFkIGZ1bmN0aW9uIGZvciB0aGUgZ2xvYmFsIGhhc2htYXAuXG4uL2NhbGxiYWNrTWFwcGVyLmogaXMgdGhlIHdyaXRlIGZ1bmN0aW9uIGZvciB0aGUgZ2xvYmFsIGhhc2htYXAuIFxuXG5XaGlsZSB0aGUgZnVuY3Rpb24gbmFtZSBjb250YWlucyBgVUlgIGluIGl0LCBpdCBpcyBub3QgcmVsYXRlZCB0byBVSSBpcyBhbnkgd2F5LiBcbkl0IGlzIG1vc3RseSBjYWxsZWQgYWZ0ZXIgdGhlIFVJIGlzIHJlbmRlcmVkIGJ1dCBKQnJpZGdlIGFsc28gY2FsbHMgaXQgdG8gY2FsbCBBUElzLiBcblxuKi8gXG5cblxuZnVuY3Rpb24gaW52b2tlVUlDYWxsYmFjayAoKSB7XG4gICAgbGV0IGFyZ3MgPSAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IFthcmd1bWVudHNbMF1dIDogQXJyYXkuYXBwbHkobnVsbCxcbiAgICAgICAgYXJndW1lbnRzKSk7XG4gICAgdmFyIGZOYW1lID0gYXJnc1swXVxuICAgIHZhciBmdW5jdGlvbkFyZ3MgPSBhcmdzLnNsaWNlKDEpXG4gICAgdmFyIGN1cnJUaW1lO1xuICAgIHZhciB0aW1lRGlmZjtcbiAgICBcbiAgICBpZiAod2luZG93Ll9fQUxMX09OQ0xJQ0tTICYmIHdpbmRvdy5fX0FMTF9PTkNMSUNLUy5pbmRleE9mKGZOYW1lKSAhPSAtMSAmJiBhcmdzWzJdID09IFwiZmVlZGJhY2tcIiAmJiBKQnJpZGdlICYmIEpCcmlkZ2Uuc2V0Q2xpY2tGZWVkYmFjaykge1xuICAgICAgICByZXR1cm4gSkJyaWRnZS5zZXRDbGlja0ZlZWRiYWNrKGFyZ3NbMV0pO1xuICAgIH1cbiAgXG4gICAgaWYgKHdpbmRvdy5fX1RIUk9UVEVMRURfQUNUSU9OUyAmJiB3aW5kb3cuX19USFJPVFRFTEVEX0FDVElPTlMuaW5kZXhPZihmTmFtZSkgPT0gLTEpIHtcbiAgICAgICAgd2luZG93Ll9fUFJPWFlfRk5bZk5hbWVdLmFwcGx5KG51bGwsIGZ1bmN0aW9uQXJncyk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cuX19MQVNUX0ZOX0NBTExFRCAmJiAoZk5hbWUgPT0gd2luZG93Ll9fTEFTVF9GTl9DQUxMRUQuZk5hbWUpKSB7XG4gICAgICAgIGN1cnJUaW1lID0gZ2V0Q3VyclRpbWUoKTtcbiAgICAgICAgdGltZURpZmYgPSBjdXJyVGltZSAtIHdpbmRvdy5fX0xBU1RfRk5fQ0FMTEVELnRpbWVTdGFtcDtcbiAgXG4gICAgICAgIGlmICh0aW1lRGlmZiA+PSAzMDApIHtcbiAgICAgICAgICAgIHdpbmRvdy5fX1BST1hZX0ZOW2ZOYW1lXS5hcHBseShudWxsLCBmdW5jdGlvbkFyZ3MpO1xuICAgICAgICAgICAgd2luZG93Ll9fTEFTVF9GTl9DQUxMRUQudGltZVN0YW1wID0gY3VyclRpbWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJmdW5jdGlvbiB0aHJvdHRlbGVkXCIsIGZOYW1lKTtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcInRpbWUgZGlmZlwiLCB0aW1lRGlmZik7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuX19QUk9YWV9GTltmTmFtZV0uYXBwbHkobnVsbCwgZnVuY3Rpb25BcmdzKTtcbiAgICAgICAgd2luZG93Ll9fTEFTVF9GTl9DQUxMRUQgPSB7XG4gICAgICAgICAgICB0aW1lU3RhbXA6IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCksXG4gICAgICAgICAgICBmTmFtZTogZk5hbWVcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGludm9rZSA6IGludm9rZVVJQ2FsbGJhY2tcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/helpers/common/callbackInvoker.js\n");

/***/ }),

/***/ "./src/helpers/common/callbackMapper.js":
/*!**********************************************!*\
  !*** ./src/helpers/common/callbackMapper.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\n/*\nThis takes a function and puts it in a hashmap called __PROXY_FN and returns the key (a string). \nKey is contructed using a global variables. \nHashmap is also a global variable. \nPoint To Note : Since iframes, we have different DOM Documents. So, these global variables are global to Presto-UI's document. \n*/\nmodule.exports.map = function (fn) {\n  // console.debug(\"presto-ui callback-mapper document location\",document.location); \n  if (typeof window.__FN_INDEX !== 'undefined' && window.__FN_INDEX !== null) {\n    var proxyFnName = 'F' + window.__FN_INDEX;\n    if (window.__payload && window.__payload.service) {\n      proxyFnName = window.__payload.service + \"_\" + proxyFnName;\n    }\n    window.__PROXY_FN[proxyFnName] = fn;\n    window.__FN_INDEX++;\n    // console.log(\"Presto-UI Callback Mapper proxyFnName is\",proxyFnName); \n    return proxyFnName;\n  } else {\n    throw new Error(\"Please initialise window.__FN_INDEX = 0 in index.js of your project.\");\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9jb21tb24vY2FsbGJhY2tNYXBwZXIuanM/ZGU4MyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFwIiwiZm4iLCJ3aW5kb3ciLCJfX0ZOX0lOREVYIiwicHJveHlGbk5hbWUiLCJfX3BheWxvYWQiLCJzZXJ2aWNlIiwiX19QUk9YWV9GTiIsIkVycm9yIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJDOzs7Ozs7QUFNREEsT0FBT0MsT0FBUCxDQUFlQyxHQUFmLEdBQXFCLFVBQUNDLEVBQUQsRUFBUTtBQUM1QjtBQUNBLE1BQUcsT0FBT0MsT0FBT0MsVUFBZCxLQUE2QixXQUE3QixJQUE0Q0QsT0FBT0MsVUFBUCxLQUFzQixJQUFyRSxFQUEyRTtBQUMxRSxRQUFJQyxjQUFjLE1BQU1GLE9BQU9DLFVBQS9CO0FBQ0EsUUFBSUQsT0FBT0csU0FBUCxJQUFvQkgsT0FBT0csU0FBUCxDQUFpQkMsT0FBekMsRUFBaUQ7QUFDaERGLG9CQUFjRixPQUFPRyxTQUFQLENBQWlCQyxPQUFqQixHQUEyQixHQUEzQixHQUFpQ0YsV0FBL0M7QUFDQTtBQUNERixXQUFPSyxVQUFQLENBQWtCSCxXQUFsQixJQUFpQ0gsRUFBakM7QUFDQUMsV0FBT0MsVUFBUDtBQUNBO0FBQ0EsV0FBT0MsV0FBUDtBQUNBLEdBVEQsTUFTTztBQUNOLFVBQU0sSUFBSUksS0FBSixDQUFVLHNFQUFWLENBQU47QUFDQTtBQUNELENBZEQiLCJmaWxlIjoiLi9zcmMvaGVscGVycy9jb21tb24vY2FsbGJhY2tNYXBwZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiAqIEpVU1BBWSBUZWNobm9sb2dpZXMgUHZ0LiBMdGQuIFtodHRwczovL3d3dy5qdXNwYXkuaW5dXG4gKlxuICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuICpcbiAqIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuICogUHVibGljIExpY2Vuc2UgKEdOVSBBR1BMKSBhcyBwdWJsaXNoZWQgYnkgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbixcbiAqIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgVGhlIGVuZCB1c2VyIHdpbGxcbiAqIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4gKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiAqIGRhbWFnZXMsIGNsYWltcywgY29zdCwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXkgZmVlIGNsYWltZWQgb24gSnVzcGF5LlxuICogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2VcbiAqIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4gKi9cblxuIC8qXG5cdFRoaXMgdGFrZXMgYSBmdW5jdGlvbiBhbmQgcHV0cyBpdCBpbiBhIGhhc2htYXAgY2FsbGVkIF9fUFJPWFlfRk4gYW5kIHJldHVybnMgdGhlIGtleSAoYSBzdHJpbmcpLiBcblx0S2V5IGlzIGNvbnRydWN0ZWQgdXNpbmcgYSBnbG9iYWwgdmFyaWFibGVzLiBcblx0SGFzaG1hcCBpcyBhbHNvIGEgZ2xvYmFsIHZhcmlhYmxlLiBcblx0UG9pbnQgVG8gTm90ZSA6IFNpbmNlIGlmcmFtZXMsIHdlIGhhdmUgZGlmZmVyZW50IERPTSBEb2N1bWVudHMuIFNvLCB0aGVzZSBnbG9iYWwgdmFyaWFibGVzIGFyZSBnbG9iYWwgdG8gUHJlc3RvLVVJJ3MgZG9jdW1lbnQuIFxuICovIFxubW9kdWxlLmV4cG9ydHMubWFwID0gKGZuKSA9PiB7XG5cdC8vIGNvbnNvbGUuZGVidWcoXCJwcmVzdG8tdWkgY2FsbGJhY2stbWFwcGVyIGRvY3VtZW50IGxvY2F0aW9uXCIsZG9jdW1lbnQubG9jYXRpb24pOyBcblx0aWYodHlwZW9mIHdpbmRvdy5fX0ZOX0lOREVYICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuX19GTl9JTkRFWCAhPT0gbnVsbCkge1xuXHRcdHZhciBwcm94eUZuTmFtZSA9ICdGJyArIHdpbmRvdy5fX0ZOX0lOREVYO1xuXHRcdGlmICh3aW5kb3cuX19wYXlsb2FkICYmIHdpbmRvdy5fX3BheWxvYWQuc2VydmljZSl7XG5cdFx0XHRwcm94eUZuTmFtZSA9IHdpbmRvdy5fX3BheWxvYWQuc2VydmljZSArIFwiX1wiICsgcHJveHlGbk5hbWU7XG5cdFx0fVxuXHRcdHdpbmRvdy5fX1BST1hZX0ZOW3Byb3h5Rm5OYW1lXSA9IGZuO1xuXHRcdHdpbmRvdy5fX0ZOX0lOREVYKys7XG5cdFx0Ly8gY29uc29sZS5sb2coXCJQcmVzdG8tVUkgQ2FsbGJhY2sgTWFwcGVyIHByb3h5Rm5OYW1lIGlzXCIscHJveHlGbk5hbWUpOyBcblx0XHRyZXR1cm4gcHJveHlGbk5hbWU7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiUGxlYXNlIGluaXRpYWxpc2Ugd2luZG93Ll9fRk5fSU5ERVggPSAwIGluIGluZGV4LmpzIG9mIHlvdXIgcHJvamVjdC5cIik7XG5cdH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/helpers/common/callbackMapper.js\n");

/***/ }),

/***/ "./src/helpers/common/index.js":
/*!*************************************!*\
  !*** ./src/helpers/common/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n\tcallbackMapper: __webpack_require__(/*! ./callbackMapper */ \"./src/helpers/common/callbackMapper.js\")\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9jb21tb24vaW5kZXguanM/OWFkYyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2FsbGJhY2tNYXBwZXIiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxpQkFBaUJDLG1CQUFPQSxDQUFDLGdFQUFSO0FBREQsQ0FBakIiLCJmaWxlIjoiLi9zcmMvaGVscGVycy9jb21tb24vaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxNyBcIkpVU1BBWSBUZWNobm9sb2dpZXNcIlxuKiBKVVNQQVkgVGVjaG5vbG9naWVzIFB2dC4gTHRkLiBbaHR0cHM6Ly93d3cuanVzcGF5LmluXVxuKlxuKiBUaGlzIGZpbGUgaXMgcGFydCBvZiBKVVNQQVkgUGxhdGZvcm0uXG4qXG4qIEpVU1BBWSBQbGF0Zm9ybSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4qIGl0IGZvciBvbmx5IGVkdWNhdGlvbmFsIHB1cnBvc2VzIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsXG4qIFB1YmxpYyBMaWNlbnNlIChHTlUgQUdQTCkgYXMgcHVibGlzaGVkIGJ5IHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sXG4qIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4qIEZvciBFbnRlcnByaXNlL0NvbW1lcmljYWwgbGljZW5zZXMsIGNvbnRhY3QgPGluZm9AanVzcGF5LmluPi5cbipcbiogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4qIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4qIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFRoZSBlbmQgdXNlciB3aWxsXG4qIGJlIGxpYWJsZSBmb3IgYWxsIGRhbWFnZXMgd2l0aG91dCBsaW1pdGF0aW9uLCB3aGljaCBpcyBjYXVzZWQgYnkgdGhlXG4qIEFCVVNFIG9mIHRoZSBMSUNFTlNFRCBTT0ZUV0FSRSBhbmQgc2hhbGwgSU5ERU1OSUZZIEpVU1BBWSBmb3Igc3VjaFxuKiBkYW1hZ2VzLCBjbGFpbXMsIGNvc3QsIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5IGZlZSBjbGFpbWVkIG9uIEp1c3BheS5cbiogVGhlIGVuZCB1c2VyIGhhcyBOTyByaWdodCB0byBjbGFpbSBhbnkgaW5kZW1uaWZpY2F0aW9uIGJhc2VkIG9uIGl0cyB1c2Vcbiogb2YgTGljZW5zZWQgU29mdHdhcmUuIFNlZSB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4qXG4qIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gSWYgbm90LCBzZWUgPGh0dHBzOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvYWdwbC5odG1sPi5cbiovXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHRjYWxsYmFja01hcHBlciA6IHJlcXVpcmUoXCIuL2NhbGxiYWNrTWFwcGVyXCIpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/helpers/common/index.js\n");

/***/ }),

/***/ "./src/helpers/index.js":
/*!******************************!*\
  !*** ./src/helpers/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nvar helpers = {\n\tcommon: __webpack_require__(/*! ./common */ \"./src/helpers/common/index.js\")\n};\n\nif (false) {} else if (true) {\n\thelpers.web = __webpack_require__(/*! ./web */ \"./src/helpers/web/index.js\");\n} else {}\n\nmodule.exports = helpers;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy9pbmRleC5qcz9jZTk2Il0sIm5hbWVzIjpbImhlbHBlcnMiLCJjb21tb24iLCJyZXF1aXJlIiwid2luZG93Iiwid2ViIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXlCQSxJQUFNQSxVQUFVO0FBQ2ZDLFNBQVNDLG1CQUFPQSxDQUFDLCtDQUFSO0FBRE0sQ0FBaEI7O0FBS0EsSUFBSUMsS0FBSixFQUE4QixFQUE5QixNQUdLLElBQUlBLElBQUosRUFBMEI7QUFDOUJILFNBQVFJLEdBQVIsR0FBY0YsbUJBQU9BLENBQUMseUNBQVIsQ0FBZDtBQUNBLENBRkksTUFHQSxFQUVKOztBQUdERyxPQUFPQyxPQUFQLEdBQWlCTixPQUFqQiIsImZpbGUiOiIuL3NyYy9oZWxwZXJzL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiogSlVTUEFZIFRlY2hub2xvZ2llcyBQdnQuIEx0ZC4gW2h0dHBzOi8vd3d3Lmp1c3BheS5pbl1cbipcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuKlxuKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuKiBQdWJsaWMgTGljZW5zZSAoR05VIEFHUEwpIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLFxuKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4qXG4qIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBUaGUgZW5kIHVzZXIgd2lsbFxuKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiogZGFtYWdlcywgY2xhaW1zLCBjb3N0LCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leSBmZWUgY2xhaW1lZCBvbiBKdXNwYXkuXG4qIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4qIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuKlxuKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4qL1xuXG5jb25zdCBoZWxwZXJzID0ge1xuXHRjb21tb24gOiByZXF1aXJlKFwiLi9jb21tb25cIilcbn07XG5cblxuaWYgKHdpbmRvdy5fX09TID09IFwiQU5EUk9JRFwiKSB7XG5cdGhlbHBlcnMuYW5kcm9pZCA9IHJlcXVpcmUoXCIuL2FuZHJvaWRcIilcbn1cbmVsc2UgaWYgKHdpbmRvdy5fX09TID09IFwiV0VCXCIpIHtcblx0aGVscGVycy53ZWIgPSByZXF1aXJlKFwiLi93ZWJcIik7XG59XG5lbHNlIHtcblx0aGVscGVycy5pb3MgPSByZXF1aXJlKFwiLi9pb3NcIik7XG59XG5cblxubW9kdWxlLmV4cG9ydHMgPSBoZWxwZXJzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/helpers/index.js\n");

/***/ }),

/***/ "./src/helpers/web/index.js":
/*!**********************************!*\
  !*** ./src/helpers/web/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\nmodule.exports = {\n\tparseParams: __webpack_require__(/*! ./parseParams */ \"./src/helpers/web/parseParams.js\")\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaGVscGVycy93ZWIvaW5kZXguanM/Y2Y5ZiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicGFyc2VQYXJhbXMiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBQSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2hCQyxjQUFjQyxtQkFBT0EsQ0FBQyx1REFBUjtBQURFLENBQWpCIiwiZmlsZSI6Ii4vc3JjL2hlbHBlcnMvd2ViL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiogQ29weXJpZ2h0IChjKSAyMDEyLTIwMTcgXCJKVVNQQVkgVGVjaG5vbG9naWVzXCJcbiogSlVTUEFZIFRlY2hub2xvZ2llcyBQdnQuIEx0ZC4gW2h0dHBzOi8vd3d3Lmp1c3BheS5pbl1cbipcbiogVGhpcyBmaWxlIGlzIHBhcnQgb2YgSlVTUEFZIFBsYXRmb3JtLlxuKlxuKiBKVVNQQVkgUGxhdGZvcm0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuKiBpdCBmb3Igb25seSBlZHVjYXRpb25hbCBwdXJwb3NlcyB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbFxuKiBQdWJsaWMgTGljZW5zZSAoR05VIEFHUEwpIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLFxuKiBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuKiBGb3IgRW50ZXJwcmlzZS9Db21tZXJpY2FsIGxpY2Vuc2VzLCBjb250YWN0IDxpbmZvQGp1c3BheS5pbj4uXG4qXG4qIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBUaGUgZW5kIHVzZXIgd2lsbFxuKiBiZSBsaWFibGUgZm9yIGFsbCBkYW1hZ2VzIHdpdGhvdXQgbGltaXRhdGlvbiwgd2hpY2ggaXMgY2F1c2VkIGJ5IHRoZVxuKiBBQlVTRSBvZiB0aGUgTElDRU5TRUQgU09GVFdBUkUgYW5kIHNoYWxsIElOREVNTklGWSBKVVNQQVkgZm9yIHN1Y2hcbiogZGFtYWdlcywgY2xhaW1zLCBjb3N0LCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leSBmZWUgY2xhaW1lZCBvbiBKdXNwYXkuXG4qIFRoZSBlbmQgdXNlciBoYXMgTk8gcmlnaHQgdG8gY2xhaW0gYW55IGluZGVtbmlmaWNhdGlvbiBiYXNlZCBvbiBpdHMgdXNlXG4qIG9mIExpY2Vuc2VkIFNvZnR3YXJlLiBTZWUgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuKlxuKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzL2FncGwuaHRtbD4uXG4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0cGFyc2VQYXJhbXMgOiByZXF1aXJlKFwiLi9wYXJzZVBhcmFtc1wiKSxcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/helpers/web/index.js\n");

/***/ }),

/***/ "./src/helpers/web/parseParams.js":
/*!****************************************!*\
  !*** ./src/helpers/web/parseParams.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n* Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n* JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n*\n* This file is part of JUSPAY Platform.\n*\n* JUSPAY Platform is free software: you can redistribute it and/or modify\n* it for only educational purposes under the terms of the GNU Affero General\n* Public License (GNU AGPL) as published by the Free Software Foundation,\n* either version 3 of the License, or (at your option) any later version.\n* For Enterprise/Commerical licenses, contact <info@juspay.in>.\n*\n* This program is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n* be liable for all damages without limitation, which is caused by the\n* ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n* damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n* The end user has NO right to claim any indemnification based on its use\n* of Licensed Software. See the GNU Affero General Public License for more details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n*/\n\n/*\n\n\nTHIS FILE IS REDUNDANT NOW, WEB NO LONGER CALLS ANY FUNCTION OF THIS FILE\n\n\n*/\n\nArray.prototype.rotate = function () {\n  // save references to array functions to make lookup faster\n  var push = Array.prototype.push,\n      splice = Array.prototype.splice;\n\n  return function (count) {\n    var len = this.length >>> 0,\n        // convert to uint\n    count = count >> 0; // convert to int\n\n    // convert count to value in range [0, len)\n    count = (count % len + len) % len;\n\n    // use splice.call() instead of this.splice() to make function generic\n    push.apply(this, splice.call(this, 0, count));\n    return this;\n  };\n}();\n\nfunction flattenObject(ob) {\n  var toReturn = {};\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n    if (_typeof(ob[i]) == 'object') {\n      var flatObject = flattenObject(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        if (typeof flatObject[x] !== \"undefined\") toReturn[x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n\n  return toReturn;\n}\n\nfunction parseColors(color) {\n  if (color.length < 8) return color;\n\n  if (color.indexOf(\"rgba\") !== -1 || color.indexOf(\"rgb\") !== -1) return color;\n\n  var alpha = parseInt(color.substring(1, 3), 16);\n  alpha = (alpha / 255).toFixed(2);\n\n  var hexColor = color.substring(3, 9);\n  var rgbaColor = \"rgba(\" + convertHexToRgb(hexColor) + \",\" + alpha + \")\";\n\n  return rgbaColor;\n}\n\nfunction lookAndReplaceProp(str, match, val) {\n  var output = match + \"(\" + val + \"px)\";\n  if (!str) return output;\n  var start = str.indexOf(match);\n  if (start >= 0) {\n    var end = str.substr(start).indexOf(\")\");\n    if (end >= 0) {\n      var found = str.substr(start, end + 1);\n      return str.replace(found, output);\n    } else {\n      return str + output;\n    }\n  } else return str + output;\n}\n\nfunction parseLayoutProps(type, config, key) {\n  var isMobile = false; // window.innerWidth < 550 // this line takes up 80ms out of 360ms \n  if (typeof config[key] == \"undefined\" || config[key] == null) {\n    delete config[key];\n    return;\n  }\n\n  if (!config.style) {\n    var t = \"\";\n    var ele_id = document.getElementById(config.id);\n    if (ele_id) {\n      if (ele_id.style) t = ele_id.style.transform ? ele_id.style.transform : \"\";\n    }\n    config.style = {};\n    config.style.transform = t;\n    config.animation = {};\n    config.animation.transform = \"\";\n  }\n\n  if (!config.attributes) config.attributes = {};\n\n  if (!config.style.className) config.style.className = \"\";\n\n  if (key == \"onClick\" || key == \"onClickEvent\") {\n    if (!isMobile && !config.cursorType) {\n      config.style.cursor = \"pointer\";\n    }\n  }\n  if (key == \"cursorType\") {\n    config.style.cursor = config.cursorType;\n  }\n  if (key == \"textSize\") config.style.fontSize = config.textSize + 'px';\n  if (key == 'fontSize') config.style.fontSize = config.fontSize + 'px';\n\n  if (key == 'url') config.attributes.src = config.url;\n\n  /*if (key == \"imageUrl\"){\n    let imageUrl = config.imageUrl;\n    \n    if(config.rawData) {\n      // Do nothing\n    } else {\n      let temp = imageUrl.split('.');\n      let ext = '';\n      if(temp && temp.length > 0)\n        ext = temp[temp.length - 1];\n      \n      let exts = [\"jpeg\", \"jpg\", \"png\", \"bmp\", \"svg\", \"gif\"];\n      ext = ext.toLowerCase();\n       if(!exts.includes(ext)) {\n        imageUrl += '.png';\n      }\n    }\n     config.attributes.src = imageUrl;\n  }*/\n\n  if (key == \"backgroundColor\") {\n    config.style.backgroundColor = parseColors(config.backgroundColor);\n  }\n\n  if (key == \"background\") {\n    config.style.background = config.background;\n  }\n  if (key == \"backgroundDrawable\") {\n    config.style[\"background-image\"] = \"url('\" + config.backgroundDrawable + \"')\";\n  }\n\n  if (key == \"color\") {\n    config.style.color = parseColors(config.color);\n  }\n\n  if (key == \"position\") {\n    config.style.position = config.position;\n  }\n\n  if (key == \"bottomFixed\") {\n    config.style.bottom = config.bottomFixed;\n  }\n  if (key == \"topFixed\") {\n    config.style.top = config.topFixed;\n  }\n  if (key == \"leftFixed\") {\n    config.style.left = config.leftFixed;\n  }\n  if (key == \"rightFixed\") {\n    config.style.right = config.rightFixed;\n  }\n\n  if (key == \"zIndex\") {\n    config.style[\"z-index\"] = config.zIndex;\n  }\n\n  if (key == \"autofocus\") {\n    var isIPhone = navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    if (config.autofocus && !isIPhone) {\n      config.attributes[\"autofocus\"] = \"autofocus\";\n    }\n  }\n  if (key == \"focus\") {\n    if (config.focus && config.id) {\n      var doc = document.getElementById(config.id);\n      if (doc) {\n        doc.focus();\n      }\n    }\n  }\n\n  if (key == \"cornerRadius\") {\n    config.style.borderRadius = config.cornerRadius + \"px\";\n  }\n\n  if (key == \"alpha\") {\n    config.style.opacity = config[key];\n  }\n\n  if (key == \"a_alpha\") {\n    config.animation.opacity = config[key];\n  }\n\n  if (key == \"fontFamily\") {\n    config.style.fontFamily = config.fontFamily;\n  }\n\n  if (key == 'typeface') {\n    switch (config.typeface) {\n      case 'normal':\n        config.style.fontWeight = 400;\n        break;\n      case 'bold':\n        config.style.fontWeight = 700;\n        break;\n      case 'italic':\n        config.style.fontStyle = 'italic';\n        break;\n      case 'bold_italic':\n        config.style.fontWeight = 700;\n        config.style.fontStyle = 'italic';\n        break;\n      case 'underline':\n        config.style.textDecoration = 'underline';\n        break;\n    }\n  }\n\n  if (key == \"fontStyle\") {\n    var match = config.fontStyle.match(/[/-]/);\n    var fontName = match ? config.fontStyle.slice(0, match.index) : config.fontStyle;\n    config.style.fontFamily = fontName;\n\n    if (!match) return;\n\n    var _type = config.fontStyle.slice(match.index + 1);\n    _type = _type.replace(/[-/]/g, '');\n    _type = _type.toLowerCase();\n\n    if (_type.indexOf('italic') != -1) config.style.fontStyle = 'italic';\n\n    var fontWeight = 0;\n\n    if (_type.indexOf('extralight') != -1) fontWeight = 200;else if (_type.indexOf('light') != -1) fontWeight = 300;else if (_type.indexOf('regular') != -1 || _type.indexOf('book') != -1) fontWeight = 400;else if (_type.indexOf('semibold') != -1 || _type.indexOf('medium') != -1) fontWeight = 500;else if (_type.indexOf('bold') != -1 || _type.indexOf('heavy') != -1) fontWeight = 700;else if (_type.indexOf('black') != -1) fontWeight = 900;\n\n    if (fontWeight > 0) config.style.fontWeight = fontWeight;\n  }\n\n  if (key == 'visibility') {\n    var visibility = config.visibility;\n    if (visibility == 'invisible') config.style.visibility = \"hidden\";else if (visibility == 'gone') config.style.display = \"none\";else {\n      config.style.visibility = '';\n    }\n  }\n\n  if (key == 'expand') {\n    var _visibility = config.expand + '';\n    if (_visibility == 'true') {\n      config.style.visibility = '';\n    } else config.style.display = \"none\";\n  }\n\n  if (key == \"stroke\") {\n    var _values = config.stroke.split(\",\");\n\n    if (_values.length == 2) config.style.border = _values[0] + \"px solid \" + _values[1];else if (_values.length == 3) {\n      if (_values[2] == \"rbl\") {\n        config.style.borderBottom = _values[0] + \"px solid \" + _values[1];\n        config.style.borderLeft = _values[0] + \"px solid \" + _values[1];\n        config.style.borderRight = _values[0] + \"px solid \" + _values[1];\n      } else if (_values[2] == \"b\") {\n        config.style.borderBottom = _values[0] + \"px solid \" + _values[1];\n      } else if (_values[2] == \"r\") {\n        config.style.borderRight = _values[0] + \"px solid \" + _values[1];\n      } else if (_values[2] == \"rb\") {\n        config.style.borderBottom = _values[0] + \"px solid \" + _values[1];\n        config.style.borderRight = _values[0] + \"px solid \" + _values[1];\n      } else config.style.border = _values[0] + \"px \" + _values[1] + \" \" + _values[2];\n    }\n  }\n\n  if (key == \"strokeTop\") {\n    var _values2 = config.strokeTop.split(\",\");\n\n    if (_values2.length == 2) config.style.borderTop = _values2[0] + \"px solid \" + _values2[1];else if (_values2.length == 3) config.style.borderTop = _values2[0] + \"px \" + _values2[1] + \" \" + _values2[2];\n  }\n\n  if (key == \"strokeRight\") {\n    var _values3 = config.strokeRight.split(\",\");\n\n    if (_values3.length == 2) config.style.borderRight = _values3[0] + \"px solid \" + _values3[1];else if (_values3.length == 3) config.style.borderRight = _values3[0] + \"px \" + _values3[1] + \" \" + _values3[2];\n  }\n\n  if (key == \"strokeBottom\") {\n    var _values4 = config.strokeBottom.split(\",\");\n\n    if (_values4.length == 2) config.style.borderBottom = _values4[0] + \"px solid \" + _values4[1];else if (_values4.length == 3) config.style.borderBottom = _values4[0] + \"px \" + _values4[1] + \" \" + _values4[2];\n  }\n\n  if (key == \"strokeLeft\") {\n    var _values5 = config.strokeLeft.split(\",\");\n\n    if (_values5.length == 2) config.style.borderLeft = _values5[0] + \"px solid \" + _values5[1];else if (_values5.length == 3) config.style.borderLeft = _values5[0] + \"px \" + _values5[1] + \" \" + _values5[2];\n  }\n\n  if (key == \"translationY\") {\n    config.style.transform = lookAndReplaceProp(config.style.transform, \"translateY\", config[key]);\n  }\n\n  if (key == \"a_translationY\") {\n    config.animation.transform += \"translateY(\" + config[key] + \"px) \";\n  }\n\n  if (key == \"translationX\") {\n    config.style.transform = lookAndReplaceProp(config.style.transform, \"translateX\", config[key]);\n  }\n\n  if (key == \"a_translationX\") {\n    config.animation.transform += \"translateX(\" + config[key] + \"px) \";\n  }\n\n  if (key == \"scaleX\") {\n    config.style.transform += \"scaleX(\" + config[key] + \") \";\n  }\n\n  if (key == \"a_scaleX\") {\n    config.animation.transform += \"scaleX(\" + config[key] + \") \";\n  }\n\n  if (key == \"scaleY\") {\n    config.style.transform += \"scaleY(\" + config[key] + \") \";\n  }\n\n  if (key == \"a_scaleY\") {\n    config.animation.transform += \"scaleY(\" + config[key] + \") \";\n  }\n\n  if (key == \"rotation\") {\n    config.style.transform += \"rotate(\" + config[key] + \"deg) \";\n  }\n\n  if (key == \"a_rotation\") {\n    config.animation.transform += \"rotate(\" + config[key] + \"deg) \";\n  }\n\n  if (key == \"rotationX\") {\n    config.style.transform += \"rotateX(\" + config[key] + \"deg) \";\n  }\n\n  if (key == \"a_rotationX\") {\n    config.animation.transform += \"rotateX(\" + config[key] + \"deg) \";\n  }\n\n  if (key == \"rotationY\") {\n    config.style.transform += \"rotateY(\" + config[key] + \"deg) \";\n  }\n\n  if (key == \"a_rotationY\") {\n    config.animation.transform += \"rotateY(\" + config[key] + \"deg) \";\n  }\n\n  if (key == \"translationZ\") {\n    var v = config[key];\n    config.style[\"-webkit-box-shadow\"] = \"0 0 \" + v.toString() + \"px rgba(0,0,0, .1)\";\n    config.style[\"-moz-box-shadow\"] = \"0 0 \" + v.toString() + \"px rgba(0,0,0, .1)\";\n    config.style[\"box-shadow\"] = \"0 0 \" + v.toString() + \"px rgba(0,0,0, .1)\";\n  }\n\n  if (key == \"a_duration\" && !isNaN(config[key])) {\n    var suffix = config.transitionTimingFunction ? \" \" + config.transitionTimingFunction : \"\";\n    config.animation.transition = config[key] + 'ms all' + suffix;\n  }\n\n  if (type == \"textView\" && key == \"gravity\" && config.gravity) {\n    config.style.textAlign = config.gravity;\n    if (config.gravity == \"center_vertical\") {\n      config.style[\"align-items\"] = \"center\";\n      config.style.display = \"flex\";\n    } else if (config.gravity == \"center_horizontal\") {\n      config.style.display = \"flex\";\n      config.style[\"justify-content\"] = \"center\";\n    } else if (config.gravity == \"center\") {\n      config.style.display = \"flex\";\n      config.style[\"align-items\"] = \"center\";\n      config.style[\"justify-content\"] = \"center\";\n    } else if (config.gravity == \"center\") {\n      config.style.display = \"flex\";\n      config.style[\"align-items\"] = \"center\";\n      config.style[\"justify-content\"] = \"center\";\n    }\n  }\n  if (type == \"linearLayout\" && key == \"gravity\" && config.gravity) {\n    if (config.margin && config.gravity == \"center_vertical\") {\n      var margin = config.margin.split(\",\");\n      if (config.width == \"match_parent\") {\n        config.style.width = \"calc(100% - \" + (parseInt(margin[0]) + parseInt(margin[2])).toString() + \"px )\";\n      }\n    }\n  }\n\n  if (key == \"hint\") {\n    config.attributes.placeholder = config.hint;\n  }\n\n  if (key == \"contentEditable\" && config.contentEditable) {\n    config.attributes.contenteditable = true;\n  }\n\n  if (key == \"id\") {\n    config.attributes.id = config.id;\n  }\n\n  if (key == \"gradient\") {\n    var gradientObj = JSON.parse(config.gradient);\n    if (gradientObj.type == \"linear\") {\n      var angle = gradientObj.angle;\n      var values = gradientObj.values;\n      var colors = values.join(\", \");\n      config.style[\"background-image\"] = \"linear-gradient(\" + angle + \"deg, \" + colors + \")\";\n    } else {\n      var values = gradientObj.values;\n      var colors = values.join(\", \");\n      config.style[\"background-image\"] = \"radial-gradient(\" + colors + \")\";\n    }\n  }\n\n  if (key == \"inputType\") {\n    var inputType = \"text\";\n    if (config.inputType == \"numericPassword\" || config.inputType == \"password\") {\n      if (config.inputTypeI == 4 && isMobile) {\n        inputType = \"tel\";\n        config.style[\"-webkit-text-security\"] = \"disc\";\n        config.style[\"-moz-text-security\"] = \"disc\";\n        config.style[\"text-security\"] = \"disc\";\n      } else {\n        inputType = \"password\";\n        config.attributes.autocomplete = \"new-password\";\n      }\n    } else if (config.inputType == \"disabled\") {\n      config.attributes.disabled = 'disabled';\n    } else if (config.inputType == \"numeric\") {\n      inputType = \"number\";\n    }\n    if (config.separator) {\n      if (config.inputType == \"numeric\") {\n        inputType = \"tel\";\n      } else {\n        inputType = \"text\";\n      }\n    }\n\n    config.attributes.type = inputType;\n  }\n\n  if (key == \"rotateImage\") {\n    if (config.rotateImage) {\n      config.style[\"-webkit-animation\"] = \"load3 4s infinite linear\";\n      config.style[\"animation-duration\"] = \"4s\";\n      config.style[\"animation-timing-function\"] = \"linear\";\n      config.style[\"animation-delay\"] = \"0s\";\n      config.style[\"animation-iteration-count\"] = \"infinite\";\n      config.style[\"animation-direction\"] = \"normal\";\n      config.style[\"animation-fill-mode\"] = \"none\";\n      config.style[\"animation-play-state\"] = \"running\";\n      config.style[\"animation-name\"] = \"rotation\";\n    }\n  }\n\n  if (key == \"pattern\") {\n    config.attributes[\"data-pattern\"] = config.pattern;\n    var data = config.pattern.split(',');\n    var length = parseInt(data.pop());\n    if (length > 10) {\n      length = 10;\n    }\n    config.attributes[\"size\"] = length;\n  }\n  // if(key == \"inputTypeI\"){\n  //   if(config.inputTypeI == 4){\n  //     config.attributes[\"inputmode\"] = \"numeric\";\n  //   }\n\n  // }\n\n  if (key == \"separator\") {\n    config.attributes[\"separator\"] = config.separator;\n  }\n  if (key == \"separatorRepeat\") {\n    config.attributes[\"separatorRepeat\"] = config.separatorRepeat;\n  }\n\n  if (key == \"myAttr\") {\n    config.attributes[\"myAttr\"] = config.myAttr;\n  }\n  if (key == \"blurBackground\" && config.blurBackground) {\n    config.style[\"backdrop-filter\"] = \"blur(3px)\";\n  }\n  if (key == \"shadow\") {\n    var shadowValues = config.shadow.split(config.shadowSeparator || ',');\n    var shadowBlur = rWS(cS(shadowValues[2]));\n    var shadowSpread = rWS(cS(shadowValues[3]));\n    var shadowOpacity = rWS(cS(shadowValues[5]));\n    var shadowOffset = {\n      x: rWS(cS(shadowValues[0])),\n      y: rWS(cS(shadowValues[1]))\n    };\n\n    var shadowColor = convertColorToRgba(shadowValues[4]);\n    var shadowType = config.shadowType ? config.shadowType + \" \" : '';\n\n    config[\"style\"][\"box-shadow\"] = shadowType + parseInt(shadowOffset.x) + \"px \" + parseInt(shadowOffset.y) + \"px \" + parseInt(shadowBlur) + \"px \" + parseInt(shadowSpread) + \"px rgba(\" + shadowColor.r + \", \" + shadowColor.g + \", \" + shadowColor.b + \", \" + shadowColor.a + \")\";\n  }\n\n  if (key == \"lineHeight\") config.style.lineHeight = config.lineHeight;\n\n  if (key == \"objectFit\") config.style.objectFit = config.objectFit;\n\n  if (key == \"clickable\") {\n    config.style.pointerEvents = config.clickable ? \"auto\" : \"none\";\n  }\n  if (key == \"display\") {\n    config.style.display = config.display;\n  }\n}\n\nfunction convertColorToRgba(color) {\n  color = rWS(cS(color));\n\n  var values;\n  var alpha = \"1.00\";\n\n  if (color.length >= 8) {\n    alpha = parseInt(color.substring(1, 3), 16);\n    alpha = (alpha / 255).toFixed(2);\n    color = color.substring(3, 9);\n  } else {\n    color = color.substring(1, color.length);\n  }\n\n  color = convertHexToRgb(rWS(color));\n  values = color.split(',');\n\n  return {\n    r: parseInt(rWS(values[0])),\n    g: parseInt(rWS(values[1])),\n    b: parseInt(rWS(values[2])),\n    a: parseFloat(alpha)\n  };\n}\n\nfunction convertHexToRgb(hex) {\n  var r = parseInt(hex.substring(0, 2), 16).toFixed(2);\n  var g = parseInt(hex.substring(2, 4), 16).toFixed(2);\n  var b = parseInt(hex.substring(4, 6), 16).toFixed(2);\n\n  return r + \",\" + g + \",\" + b;\n}\n\nfunction cS(value) {\n  return value ? value + '' : \"\";\n}\n\nfunction rWS(value) {\n  return value.replace(/ /g, '');\n}\n\nfunction setDefaults(type, config) {\n  if (type == \"linearLayout\") {\n    config.orientation = config.orientation;\n  }\n}\nfunction this_inlineAnimation(config) {\n  var con = modifyTranslation(config);\n  var element = document.getElementById(con.name);\n}\nfunction modifyTranslation(config) {\n  var x = config.x || \"0\";\n  var y = config.y || \"0\";\n  var animationArray = JSON.parse(config.inlineAnimation);\n  var animationArray = animationArray.map(function (a) {\n    if (a.hasOwnProperty(\"fromX\")) {\n      a.fromX = parseInt(a.fromX) + parseInt(x) + '';\n      if (!a.hasOwnProperty(\"toX\")) {\n        a.toX = 0 + parseInt(x) + '';\n      }\n    }\n    if (a.hasOwnProperty(\"toX\")) {\n      a.toX = parseInt(a.toX) + parseInt(x) + '';\n    }\n    if (a.hasOwnProperty(\"fromY\")) {\n      a.fromY = parseInt(a.fromY) + parseInt(y) + '';\n      if (!a.hasOwnProperty(\"toY\")) {\n        a.toY = 0 + parseInt(y) + '';\n      }\n    }\n    if (a.hasOwnProperty(\"toY\")) {\n      a.toY = parseInt(a.toY) + parseInt(y) + '';\n    }\n    return a;\n  });\n  return animationArray;\n}\nmodule.exports = function (type, config, getSetType) {\n  // var ok = flattenObject(c);\n  // console.log(\"object after flatten\",ok); \n  // var config = ok\n  setDefaults(type, config);\n\n  // console.log(\"object after flatten\",config); \n\n\n  var keys = Object.keys(config);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (config.style && config.style.display === 'none' && keys[i] === 'gravity') {\n      continue;\n    }\n    parseLayoutProps(type, config, keys[i]);\n  }\n\n  config.transition = [String(config.a_duration || 0) + \"ms\", \"all\", config.transitionTimingFunction].filter(Boolean).join(\" \");\n\n  if (config.style.transform == \"\") {\n    delete config.style.transform;\n  }\n  if (config.hasOwnProperty(\"inlineAnimation\")) {\n    this_inlineAnimation(config);\n  }\n\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/helpers/web/parseParams.js\n");

/***/ }),

/***/ "./src/init.js":
/*!*********************!*\
  !*** ./src/init.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n * Copyright (c) 2012-2017 \"JUSPAY Technologies\"\n * JUSPAY Technologies Pvt. Ltd. [https://www.juspay.in]\n *\n * This file is part of JUSPAY Platform.\n *\n * JUSPAY Platform is free software: you can redistribute it and/or modify\n * it for only educational purposes under the terms of the GNU Affero General\n * Public License (GNU AGPL) as published by the Free Software Foundation,\n * either version 3 of the License, or (at your option) any later version.\n * For Enterprise/Commerical licenses, contact <info@juspay.in>.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  The end user will\n * be liable for all damages without limitation, which is caused by the\n * ABUSE of the LICENSED SOFTWARE and shall INDEMNIFY JUSPAY for such\n * damages, claims, cost, including reasonable attorney fee claimed on Juspay.\n * The end user has NO right to claim any indemnification based on its use\n * of Licensed Software. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/agpl.html>.\n */\n\n/*\n Used to initialize defaults for window funcions and variables.\n*/\nvar _require = __webpack_require__(/*! ./helper */ \"./src/helper.js\"),\n    merge = _require.merge;\n\nwindow.PrestoUI = __webpack_require__(/*! ./PrestoUIInterface */ \"./src/PrestoUIInterface.js\");\n\nvar getCurrTime = function getCurrTime() {\n    return new Date().getTime();\n};\nif (false) { var getScreenDetails; }\n\nif (true) {\n    window.Android = window.parent.Android ? window.parent.Android : __webpack_require__(/*! ./WEB/AndroidInterface */ \"./src/WEB/AndroidInterface.js\");\n    window.JBridge = window.parent.JBridge ? window.parent.JBridge : __webpack_require__(/*! ./WEB/JBridgeInterface */ \"./src/WEB/JBridgeInterface.js\");\n} else {}\n\nif (window.__DEVICE_DETAILS && window.__DEVICE_DETAILS.hasOwnProperty(\"screen_width\")) {\n    window.__WIDTH = window.__DEVICE_DETAILS.screen_width;\n} else {\n    window.__WIDTH = \"1080\";\n}\n\nif (window.__DEVICE_DETAILS && window.__DEVICE_DETAILS.hasOwnProperty(\"screen_height\")) {\n    window.__HEIGHT = window.__DEVICE_DETAILS.screen_height;\n} else {\n    window.__HEIGHT = \"1920\";\n}\n\nvar guid = Math.random().toString(36).substr(2, 9);\n\n//Intializing defaults\nif (true) {\n    /* Components */\n    window.__COM_EVENT = false;\n    window.__COM_RENDERED = {\n        SWITCH_GLOBAL: false,\n        DRP: {},\n        DSB: {},\n        DB: {},\n        NAVBAR: {}\n    };\n\n    window.__COM_CLASS_GROUP = {\n        WRAPPER: 'PDC_com_wrapper',\n        NAVBAR: 'PDC_com_navbar',\n        NAVBAR_ITEM: 'PDC_com_navbar_item',\n        NAVBAR_ITEM_WITH_SUB: 'PDC_com_navbar_has_sub',\n        NAVBAR_SUB: 'PDC_com_navbar_sub',\n        NAVBAR_SUB_RIGHT: 'PDC_com_navbar_sub_right',\n        NAVBAR_SUB_ITEM: 'PDC_com_navbar_subitem',\n        DRP: 'PDC_com_drp',\n        DRP_BODY: 'PDC_com_drp_body',\n        DB: 'PDC_com_db',\n        DB_FULL_BODY: 'PDC_com_db_full_body',\n        DB_BODY: 'PDC_com_db_body',\n        DB_OPTIONS: 'PDC_com_db_options',\n        DB_OPTION: 'PDC_com_db_option',\n        DSB: 'PDC_com_dsb',\n        DSB_FULL_BODY: 'PDC_com_dsb_full_body',\n        DSB_BODY: 'PDC_com_dsb_body',\n        DSB_OPTIONS: 'PDC_com_dsb_options',\n        DSB_OPTION: 'PDC_com_dsb_option',\n        DSB_SEARCH_WRAP: 'PDC_com_dsb_search_wrap',\n        DSB_SEARCH: 'PDC_com_dsb_search',\n        SWITCH: 'PDC_com_switch',\n        SWITCH_BODY: 'PDC_com_switch_body',\n        SWITCH_SLIDER: 'PDC_com_switch_slider',\n        BT: 'PDC_com_bt',\n        BT_DISABLED: 'PDC_com_bt_disabled'\n    };\n    window.__COM_COLOR_GROUP = {\n        BG: '#ffffff',\n        ACTIVE_BG: '#EEF1F8',\n        ACTIVE_COLOR: 'rgb(53, 64, 82)',\n        INACTIVE_COLOR: 'rgba(53, 64, 82, 0.5)',\n        BORDER_COLOR: '#A3AFC2',\n        ACTIVE_BORDER_COLOR: '#707886',\n        SEARCH_COLOR: '#dddddd',\n        INACTIVE_SWITCH: '#B7DBBC',\n        ACTIVE_SWITCH: '#36AF47',\n        BT_BORDER_COLOR: '#1585D8',\n        BT_BG_COLOR: '#1991EB',\n        BT_COLOR: '#ffffff'\n    };\n    window.__COM_ACTIVE = {\n        DSB: '',\n        NAVBAR: '',\n        DB: ''\n        /* Components End */\n\n        /* Modal */\n    };window.__STYLE_ID = 'style_' + guid;\n    window.__RENDERED_KEYFRAMES = [];\n    window.__MODAL_PROPS = {};\n    window.__CONTENTMODAL_CLASS = 'PDC_modal';\n    window.__OPENMODAL_CLASS = 'PDC_modal-open';\n    window.__BACKDROPMODAL_CLASS = 'PDC_modal-backdrop';\n    window.__DISABLEDBACKDROP_CLASS = 'PDC_modal-backdrop-disabled';\n    window.__SHOWNMODAL_CLASS = 'PDC_modal-shown';\n    window.__FADEMODAL_CLASS = 'PDC_modal-fade';\n    window.__SLIDEMODAL_CLASS = 'PDC_modal-slide';\n    /* Modal End */\n\n    window.onclick = function (event) {\n        if (event.target && event.target.classList.contains(window.__BACKDROPMODAL_CLASS) && !event.target.classList.contains(window.__DISABLEDBACKDROP_CLASS)) {\n            document.body.classList.remove(window.__OPENMODAL_CLASS);\n            event.target.classList.remove(window.__SHOWNMODAL_CLASS);\n\n            var id = event.target.id;\n            id = id.replace(window.__BACKDROPMODAL_CLASS + '_', '');\n\n            var view = __VIEWS[id];\n            if (view && view.props.onDismiss && typeof view.props.onDismiss == \"function\") {\n                view.props.onDismiss();\n            }\n        }\n    };\n\n    var duiShowScreen = function duiShowScreen(callback, state) {\n        var popupMenu = document.getElementsByClassName(\"popupMenu\");\n        for (var i = 0; i < popupMenu.length; i++) {\n            popupMenu[i].style.display = \"none\";\n        }\n    };\n    window.__duiShowScreen = duiShowScreen;\n} else {}\n\nwindow.__ID = 1;\nwindow.__NODE_ID = 1;\nwindow.__SCREEN_INDEX = -1;\n\nwindow.__PROXY_FN = window.parent.__PROXY_FN ? window.parent.__PROXY_FN : {};\nwindow.__FN_INDEX = 0;\nwindow.__ROOTSCREEN = null;\nwindow.__CACHED_SCREENS = {};\nwindow.__SCREEN_COUNT = 0;\nwindow.__CURR_SCREEN = null;\nwindow.__PREV_SCREEN = null;\nwindow.__ANIMATE_DIR = null;\nwindow.__SCREEN_STACK = [];\nwindow.__LAST_FN_CALLED = null;\nwindow.__THROTTELED_ACTIONS = [];\nwindow.__VIEWS = window.parent.__VIEWS ? window.parent.__VIEWS : {};\nwindow.__VIEW_DIMENSIONS = {};\nwindow.__OBSERVERS = {};\nwindow.ZIndex = 0;\n\nwindow.callUICallback = function () {\n    var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n    var fName = args[0];\n    var functionArgs = args.slice(1);\n    var currTime;\n    var timeDiff;\n\n    if (window.__ALL_ONCLICKS && window.__ALL_ONCLICKS.indexOf(fName) != -1 && args[2] == \"feedback\" && JBridge && JBridge.setClickFeedback) {\n        return JBridge.setClickFeedback(args[1]);\n    }\n\n    if (window.__THROTTELED_ACTIONS && window.__THROTTELED_ACTIONS.indexOf(fName) == -1) {\n        window.__PROXY_FN[fName].apply(null, functionArgs);\n    } else if (window.__LAST_FN_CALLED && fName == window.__LAST_FN_CALLED.fName) {\n        currTime = getCurrTime();\n        timeDiff = currTime - window.__LAST_FN_CALLED.timeStamp;\n\n        if (timeDiff >= 300) {\n            window.__PROXY_FN[fName].apply(null, functionArgs);\n            window.__LAST_FN_CALLED.timeStamp = currTime;\n        } else {\n            console.warn(\"function throtteled\", fName);\n            console.warn(\"time diff\", timeDiff);\n        }\n    } else {\n        window.__PROXY_FN[fName].apply(null, functionArgs);\n        window.__LAST_FN_CALLED = {\n            timeStamp: new Date().getTime(),\n            fName: fName\n        };\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/init.js\n");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** multi ./index.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./index.js */"./index.js");


/***/ })

/******/ });